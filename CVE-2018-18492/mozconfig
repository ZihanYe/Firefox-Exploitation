#for debug with asan build and jitspew

# Combined .mozconfig file for ASan on Linux+Mac

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/objdir-ff-asan

# Enable ASan specific code and build workarounds
ac_add_options --enable-address-sanitizer

# Add ASan to our compiler flags
export CFLAGS="-fsanitize=address -U_FORTIFY_SOURCE -Dxmalloc=myxmalloc -fPIC"
export CXXFLAGS="-fsanitize=address -U_FORTIFY_SOURCE -Dxmalloc=myxmalloc -fPIC"

# Additionally, we need the ASan flag during linking. Normally, our C/CXXFLAGS would
# be used during linking as well but there is at least one place in our build where
# our CFLAGS are not added during linking.
# Note: The use of this flag causes Clang to automatically link the ASan runtime :)
export LDFLAGS="-fsanitize=address -Wl,--no-as-needed -ldl"

# These three are required by ASan
ac_add_options --disable-jemalloc
ac_add_options --disable-crashreporter
ac_add_options --disable-elf-hack

# Keep symbols to symbolize ASan traces later
export MOZ_DEBUG_SYMBOLS=1
ac_add_options --enable-debug-symbols
ac_add_options --disable-install-strip

# Settings for an opt build (preferred)
# The -gline-tables-only ensures that all the necessary debug information for ASan
# is present, but the rest is stripped so the resulting binaries are smaller.
ac_add_options --enable-optimize=-O2
ac_add_options --disable-debug

# Settings for a debug build
# ac_add_options --disable-optimize
# ac_add_options --enable-debug

ac_add_options --enable-valgrind
ac_add_options --disable-profiling
ac_add_options --enable-tests

# fuzzing
ac_add_options --enable-fuzzing