import angr
import logging
log = logging.getLogger("symbolic")

class LimitedDepth(angr.SimProcedure):
    NO_RET = False
    IS_FUNCTION = True

    def run(self):
        # o = self.state.solver.Unconstrained("depth_limit_", self.state.arch.bits, key=('api', '?', self.display_name))
        try:
            import IPython; IPython.embed()
            index = len(self.state.record.depth_limited_var)
            ret_symbol = self.state.solver.BVS("depth_limited_"+ str(index), size=64, explicit_name=True)
            ret_v = self.ret(expr=ret_symbol, index=index)
            self.state.record.add_depth_limited(self.state.history.recent_bbl_addrs[-1], ret_symbol)
            import IPython; IPython.embed()
        except:
            log.error("[-] WARNING depth limited symbolic return failed unexpectedly")
