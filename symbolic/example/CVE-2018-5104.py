import executor

# e = executor.Executor("/home/ug16zy2/firefox-56.0/core5104_1", do_nothing_instr=[0x7fd747936935], stop_when_write_primtive_found=1, log_file="CVE-2018-5104", lib_call_hook=[(0x00007fd7466f0d40, 'libc', 'memset'), (0x00007fd74670d460,'libc','memcpy'), (0x00007fd7466e9950, 'libc', 'free'), (0x00007fd7466e9070, 'libc', 'malloc'), (0x00007fd7466eac30, 'libc', 'realloc')])
# e.run(uaf_object_base=0x55964ea2fb30, uaf_object_size=216, context_end=0x00007fd734d0c37f)


# avoids = [0x00007fd733ec1647, 0x000055964aae047e, 0x000055964aad10bc] # MOZ_ReportAssertionFailure, MOZ_CrashOOL ,abort()
# e = executor.Executor("/nas/ug16zy2/corefiles/core5104_2", continue_with_control_hijack = False, log_interval = 50, avoids = avoids, do_nothing_instr=[0x7fd747936935], log_file="CVE-2018-5104_1", lib_call_hook=[(0x00007fd7466f0d40, 'libc', 'memset'), (0x00007fd74670d460,'libc','memcpy'), (0x00007fd7466e9950, 'libc', 'free'), (0x00007fd7466e9070, 'libc', 'malloc'), (0x00007fd7466eac30, 'libc', 'realloc')])

# e.run(uaf_object_base=0x55964ea2fb30, uaf_object_size=216, context_end=0x00007fd735fe72a8)

# ensurePromise()
do_nothing = [] # [0x7f95ca01e1f6]
avoids=[0x00007f95ca0103d7, 0x000055637d33a47e, 0x000055637d32b0bc]
lib_call=[(0x7f95db96c935, 'stubs','placementNew'),(0x00007f95da726d40,'libc','memset'),(0x00007f95da743460,'libc','memcpy'),(0x00007f95da71f950,'libc','free'),(0x00007f95da71f070,'libc','malloc'),(0x00007f95da720c30,'libc','realloc')]
milestones = [0x7f95ca01d17b, 0x00007f95c7f10b58, 0x00007f95c7f10c50]
# gfxUserFontEntry::Load(), gfxUserFontEntry::LoadNextSrc(), gfxUserFontEntry::DoLoadNextSrc()

e = executor.Executor("/nas/ug16zy2/corefiles/core5104_3", stop_when_primtive_found=1,do_nothing_instr=do_nothing, debug=False, depth_limit=10, milestones=milestones, log_interval = 50, avoids= avoids, log_file="CVE-2018-5104_3_depth10", lib_call_hook = lib_call)

e.run(uaf_object_base=0x5563806ea640, uaf_object_size=88, context_end=0x00007f95c8d4237f)
