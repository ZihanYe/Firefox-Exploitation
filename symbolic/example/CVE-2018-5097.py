import executor

lib_call_hook = [(0x7f5f2e7cc935, 'stubs', 'placementNew'), 
		(0x00007f5f2d57f070, 'libc','malloc'),
		(0x00007f5f2d57f950, 'libc', 'free'),
		(0x00007f5f2d580c30, 'libc', 'realloc'),
		(0x00007f5f2d54cdc0, 'libc', 'fprintf'),
		(0x00007f5f2d5a3460, 'libc', 'memcpy'),
		(0x00007f5f2d5a3870, 'libc', 'memset')
		]
avoids = [0x00007f5f1cb1a685, 0x000055c35680647e, 0x000055c3567f70bc]
# MOZ_ReportAssertionFailure,,MOZ_CrashOOL ,abort

milestones = [0x00007f5f1cb1c5bd, 0x00007f5f1cafe89d, 0x00007f5f1cb320cd]
# txStepPattern::matches,  txApplyTemplates::execute, txXSLTProcessor::execute

#  stop_when_write_primtive_found = 1

e = executor.Executor("/home/ug16zy2/firefox-56.0/core5097", log_interval=50, log_file="CVE-2018-5097_3", debug=False, milestones=milestones, lib_call_hook=lib_call_hook, avoids=avoids)

e.run(uaf_object_base=0x55c35a73ddd0, uaf_object_size=120, context_end=0x00007f5f1cb0dbaf)
