-----start dump executor-----
Step:  77
State stats:
****************************************************************************************************
Type                   Count
-------------------  -------
write primitive (W)        0
control_hijack (C)         1
active (A)                 0
unconstrained (U)          0
errored (E)                0
found                   1609
avoided                    0
paths to write primitive:  0
paths to control hijack:  797
first primitive after:  8
total paths:  2841
****************************************************************************************************
Some errored states: 
****************************************************************************************************
Some write primitives: 
****************************************************************************************************
Some control hijacks: 
Control hijack  0
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 uaf_obj7_8_8 .. uaf_obj6_7_8 .. uaf_obj5_6_8 .. uaf_obj4_5_8 .. uaf_obj3_4_8 .. uaf_obj2_3_8 .. uaf_obj1_2_8 .. uaf_obj0_1_8>  r8: <BV64 mem_c0000919_24_56{UNINITIALIZED} .. mem_c0000918_23_8{UNINITIALIZED}>
rbx: <BV64 0x108>  r9: <BV64 0x7f6cfc700168>
rcx: <BV64 0x0>  r10: <BV64 0x7f6cfc700168>
rdx: <BV64 0x4>  r11: <BV64 0x7f6cc3f00c68>
rsi: <BV64 0x7f6cc6f79800>  r12: <BV64 0x7ffc8cfb0500>
rdi: <BV64 uaf_obj7_8_8 .. uaf_obj6_7_8 .. uaf_obj5_6_8 .. uaf_obj4_5_8 .. uaf_obj3_4_8 .. uaf_obj2_3_8 .. uaf_obj1_2_8 .. uaf_obj0_1_8>  r13: <BV64 0x7f6ce88880d6>
rsp: <BV64 0x7ffc8cfb0128>  r14: <BV64 0x0>
rbp: <BV64 0x7ffc8cfb01a0>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x7f6cc3f70fa0
maximum memory range     [  0x7f6cc3f70fa0  ,  0x7f6cc3f70fb0  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_1        0x0
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x10
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj15_16_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000700  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_2        0x0
 
contains variables:     
variable                                offsets
--------------------------------------  ---------
<BV8 mem_c0000200_21_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0000900
maximum memory range     [  0xc0000700  ,  0xc0000e00  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                offsets
--------------------------------------  ---------
<BV8 mem_c0000918_23_8{UNINITIALIZED}>  0x18

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                  address
----------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV56 mem_c0000201_22_56{UNINITIALIZED}>
<BV56 mem_c0000919_24_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140105760250742
Calling  <BV64 mem_c0000919_24_56{UNINITIALIZED} .. mem_c0000918_23_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool uaf_obj5_6_8 == 0>
1  <Bool uaf_obj7_8_8 == 0>
2  <Bool uaf_obj6_7_8 == 0>
3  <Bool uaf_obj1_2_8 == 2>
4  <Bool uaf_obj2_3_8 == 0>
5  <Bool uaf_obj0_1_8 == 0>
6  <Bool uaf_obj4_5_8 == 0>
7  <Bool uaf_obj3_4_8 == 192>
8  <Bool mem_c0000200_21_8{UNINITIALIZED} == 0>
9  <Bool mem_c0000201_22_56{UNINITIALIZED} == 0xc00009>

****************************************************************************************************
Variables used as return values of symbolic calls: 

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        

-----end dump executor-----
