-----start dump executor-----
Step:  209
State stats:
****************************************************************************************************
Type                   Count
-------------------  -------
write primitive (W)        0
control_hijack (C)       170
active (A)                 0
found (F)                124
unconstrained (U)          0
errored (E)                0
****************************************************************************************************
Some errored states: 
****************************************************************************************************
Some write primitives: 
****************************************************************************************************
Some control hijacks: 
Control hijack  0
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 mem_c0000881_1410_56{UNINITIALIZED} .. mem_c0000880_1409_8{UNINITIALIZED}>  r8: <BV64 0x0>
rbx: <BV64 0x0>  r9: <BV64 0x0>
rcx: <BV64 0x0>  r10: <BV64 0x7ffc8fb50410>
rdx: <BV64 0x562c9ba05900>  r11: <BV64 0x3c5890c0>
rsi: <BV64 0x0>  r12: <BV64 0x7f6ea2ec8ac4>
rdi: <BV64 0x562c9ba05900>  r13: <BV64 0x7f6ea2f8b1dc>
rsp: <BV64 0x7ffc8fb50568>  r14: <BV64 0x0>
rbp: <BV64 0x7ffc8fb505b0>  r15: <BV64 0x0>
rip: <BV64 mem_c0000881_1410_56{UNINITIALIZED} .. mem_c0000880_1409_8{UNINITIALIZED}>  gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x562c9ba05900
maximum memory range     [  0x562c9ba05900  ,  0x562c9ba05e80  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_1        0x0
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x580
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj1407_1408_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000880  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                    address
------------------------------------------  ----------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV8 uaf_obj256_257_8>
<BV8 mem_c0000880_1409_8{UNINITIALIZED}>    0xc0000880
<BV56 mem_c0000881_1410_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140113201037564
Calling  <BV64 mem_c0000881_1410_56{UNINITIALIZED} .. mem_c0000880_1409_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f6ea5938034
0x7f6ea5938034:	push	rbp
0x7f6ea5938035:	mov	rbp, rsp
0x7f6ea5938038:	push	r13
0x7f6ea593803a:	push	r12
0x7f6ea593803c:	push	rbx
0x7f6ea593803d:	sub	rsp, 0x28
0x7f6ea5938041:	mov	qword ptr [rbp - 0x38], rdi
0x7f6ea5938045:	mov	qword ptr [rbp - 0x40], rsi
0x7f6ea5938049:	mov	rax, qword ptr [rbp - 0x38]
0x7f6ea593804d:	add	rax, 0xf8
0x7f6ea5938053:	mov	rdi, rax
0x7f6ea5938056:	call	0x7f6ea4c22e78
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool uaf_obj252_253_8 == 44>
1  <Bool uaf_obj253_254_8 == 86>
2  <Bool uaf_obj255_256_8 == 0>
3  <Bool uaf_obj248_249_8 == 80>
4  <Bool uaf_obj251_252_8 == 155>
5  <Bool uaf_obj250_251_8 == 157>
6  <Bool uaf_obj254_255_8 == 0>
7  <Bool uaf_obj249_250_8 == 119>
8  <Bool uaf_obj0_1_8 == 0>
9  <Bool uaf_obj1_2_8 == 2>
10  <Bool uaf_obj2_3_8 == 0>
11  <Bool uaf_obj3_4_8 == 192>
12  <Bool uaf_obj4_5_8 == 0>
13  <Bool uaf_obj5_6_8 == 0>
14  <Bool uaf_obj6_7_8 == 0>
15  <Bool uaf_obj7_8_8 == 0>

****************************************************************************************************
Variables used as return values of symbolic calls: 

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        

Control hijack  1
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 mem_c0000891_1454_56{UNINITIALIZED} .. mem_c0000890_1453_8{UNINITIALIZED}>  r8: <BV64 0x0>
rbx: <BV64 0x0>  r9: <BV64 0x0>
rcx: <BV64 0x0>  r10: <BV64 0x7ffc8fb50410>
rdx: <BV64 0x562c9ba05900>  r11: <BV64 0x3c5890c0>
rsi: <BV64 0x0>  r12: <BV64 0x7f6ea2ec8ac4>
rdi: <BV64 0x562c9ba05900>  r13: <BV64 0x7f6ea2f8b1dc>
rsp: <BV64 0x7ffc8fb50568>  r14: <BV64 0x0>
rbp: <BV64 0x7ffc8fb505b0>  r15: <BV64 0x0>
rip: <BV64 mem_c0000891_1454_56{UNINITIALIZED} .. mem_c0000890_1453_8{UNINITIALIZED}>  gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x562c9ba05900
maximum memory range     [  0x562c9ba05900  ,  0x562c9ba05e80  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_1        0x0
0x4c8     OBJ_2        0x200
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x580
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj1407_1408_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000880  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0000880
maximum memory range     [  0xc0000880  ,  0xc0000f80  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x260     OBJ_3        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0000880_1409_8{UNINITIALIZED}>  0x0
<BV8 mem_c0000ae0_1422_8{UNINITIALIZED}>  0x260
<BV8 mem_c0000890_1453_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0001180
maximum memory range     [  0xc0000f80  ,  0xc0001680  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001180_1424_8{UNINITIALIZED}>  0x0

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                         address
-----------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV8 uaf_obj256_257_8>
<BV56 mem_c0000881_1410_56{UNINITIALIZED}>
<BV64 symbolic_call_0>
<BV64 symbolic_return_0_1411_64{UNINITIALIZED}>
<BV56 mem_c0000ae1_1423_56{UNINITIALIZED}>
<BV24 mem_c0001181_1425_24{UNINITIALIZED}>
<BV56 mem_c0000891_1454_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140113201037655
Calling  <BV64 mem_c0000891_1454_56{UNINITIALIZED} .. mem_c0000890_1453_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f6ea5938034
0x7f6ea5938034:	push	rbp
0x7f6ea5938035:	mov	rbp, rsp
0x7f6ea5938038:	push	r13
0x7f6ea593803a:	push	r12
0x7f6ea593803c:	push	rbx
0x7f6ea593803d:	sub	rsp, 0x28
0x7f6ea5938041:	mov	qword ptr [rbp - 0x38], rdi
0x7f6ea5938045:	mov	qword ptr [rbp - 0x40], rsi
0x7f6ea5938049:	mov	rax, qword ptr [rbp - 0x38]
0x7f6ea593804d:	add	rax, 0xf8
0x7f6ea5938053:	mov	rdi, rax
0x7f6ea5938056:	call	0x7f6ea4c22e78
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool uaf_obj252_253_8 == 44>
1  <Bool uaf_obj253_254_8 == 86>
2  <Bool uaf_obj255_256_8 == 0>
3  <Bool uaf_obj248_249_8 == 80>
4  <Bool uaf_obj251_252_8 == 155>
5  <Bool uaf_obj250_251_8 == 157>
6  <Bool uaf_obj254_255_8 == 0>
7  <Bool uaf_obj249_250_8 == 119>
8  <Bool uaf_obj4_5_8 == 0>
9  <Bool uaf_obj3_4_8 == 192>
10  <Bool uaf_obj0_1_8 == 0>
11  <Bool uaf_obj5_6_8 == 0>
12  <Bool uaf_obj1_2_8 == 2>
13  <Bool uaf_obj7_8_8 == 0>
14  <Bool uaf_obj2_3_8 == 0>
15  <Bool uaf_obj6_7_8 == 0>
16  <Bool symbolic_return_0_1411_64{UNINITIALIZED} == symbolic_call_0>
17  <Bool !(symbolic_return_0_1411_64{UNINITIALIZED}[7:0] == 0)>
18  <Bool (uaf_obj795_796_8 .. uaf_obj794_795_8 .. uaf_obj793_794_8 .. uaf_obj792_793_8) <=s 0x0>
19  <Bool uaf_obj1229_1230_8 == 0>
20  <Bool uaf_obj1226_1227_8 == 0>
21  <Bool uaf_obj1230_1231_8 == 0>
22  <Bool uaf_obj1227_1228_8 == 192>
23  <Bool uaf_obj1225_1226_8 == 10>
24  <Bool uaf_obj1224_1225_8 == 128>
25  <Bool uaf_obj1228_1229_8 == 0>
26  <Bool uaf_obj1231_1232_8 == 0>
27  <Bool mem_c0000ae0_1422_8{UNINITIALIZED} == 128>
28  <Bool mem_c0000ae1_1423_56{UNINITIALIZED} == 0xc00011>
29  <Bool !(mem_c0001180_1424_8{UNINITIALIZED} == 0) || !(mem_c0001181_1425_24{UNINITIALIZED} == 0x0)>

****************************************************************************************************
Variables used as return values of symbolic calls: 
 <BV64 symbolic_return_0_1411_64{UNINITIALIZED}>

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        
0: 
----------------------------------------------------------------------------------------------------
access          call
id              0
call_from       140113201037564
call            <BV64 mem_c0000881_1410_56{UNINITIALIZED} .. mem_c0000880_1409_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

1: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113201178722
write_to        140722719491416
write_size      <BV64 0x8>
value           <BV64 uaf_obj1231_1232_8 .. uaf_obj1230_1231_8 .. uaf_obj1229_1230_8 .. uaf_obj1228_1229_8 .. uaf_obj1227_1228_8 .. uaf_obj1226_1227_8 .. uaf_obj1225_1226_8 .. uaf_obj1224_1225_8>
----------------------------------------------------------------------------------------------------

2: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113155677520
write_to        140722719491384
write_size      <BV64 0x8>
value           <BV64 0x60 + (uaf_obj1231_1232_8 .. uaf_obj1230_1231_8 .. uaf_obj1229_1230_8 .. uaf_obj1228_1229_8 .. uaf_obj1227_1228_8 .. uaf_obj1226_1227_8 .. uaf_obj1225_1226_8 .. uaf_obj1224_1225_8)>
----------------------------------------------------------------------------------------------------

3: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113155669396
write_to        140722719491352
write_size      <BV64 0x8>
value           <BV64 0x60 + (uaf_obj1231_1232_8 .. uaf_obj1230_1231_8 .. uaf_obj1229_1230_8 .. uaf_obj1228_1229_8 .. uaf_obj1227_1228_8 .. uaf_obj1226_1227_8 .. uaf_obj1225_1226_8 .. uaf_obj1224_1225_8)>
----------------------------------------------------------------------------------------------------


Control hijack  2
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 mem_c0000891_1457_56{UNINITIALIZED} .. mem_c0000890_1456_8{UNINITIALIZED}>  r8: <BV64 0x0>
rbx: <BV64 0x0>  r9: <BV64 0x0>
rcx: <BV64 0x0>  r10: <BV64 0x7ffc8fb50410>
rdx: <BV64 0x562c9ba05900>  r11: <BV64 0x3c5890c0>
rsi: <BV64 0x0>  r12: <BV64 0x7f6ea2ec8ac4>
rdi: <BV64 0x562c9ba05900>  r13: <BV64 0x7f6ea2f8b1dc>
rsp: <BV64 0x7ffc8fb50568>  r14: <BV64 0x0>
rbp: <BV64 0x7ffc8fb505b0>  r15: <BV64 0x0>
rip: <BV64 mem_c0000891_1457_56{UNINITIALIZED} .. mem_c0000890_1456_8{UNINITIALIZED}>  gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x562c9ba05900
maximum memory range     [  0x562c9ba05900  ,  0x562c9ba05e80  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_1        0x0
0x4c8     OBJ_2        0x200
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x580
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj1407_1408_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000880  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0000880
maximum memory range     [  0xc0000880  ,  0xc0000f80  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x260     OBJ_3        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0000880_1409_8{UNINITIALIZED}>  0x0
<BV8 mem_c0000ae0_1431_8{UNINITIALIZED}>  0x260
<BV8 mem_c0000890_1456_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0001180
maximum memory range     [  0xc0000f80  ,  0xc0001680  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001180_1433_8{UNINITIALIZED}>  0x0

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                         address
-----------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV8 uaf_obj256_257_8>
<BV56 mem_c0000881_1410_56{UNINITIALIZED}>
<BV64 symbolic_call_0>
<BV64 symbolic_return_0_1411_64{UNINITIALIZED}>
<BV56 mem_c0000ae1_1432_56{UNINITIALIZED}>
<BV24 mem_c0001181_1434_24{UNINITIALIZED}>
<BV56 mem_c0000891_1457_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140113201037655
Calling  <BV64 mem_c0000891_1457_56{UNINITIALIZED} .. mem_c0000890_1456_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f6ea5938034
0x7f6ea5938034:	push	rbp
0x7f6ea5938035:	mov	rbp, rsp
0x7f6ea5938038:	push	r13
0x7f6ea593803a:	push	r12
0x7f6ea593803c:	push	rbx
0x7f6ea593803d:	sub	rsp, 0x28
0x7f6ea5938041:	mov	qword ptr [rbp - 0x38], rdi
0x7f6ea5938045:	mov	qword ptr [rbp - 0x40], rsi
0x7f6ea5938049:	mov	rax, qword ptr [rbp - 0x38]
0x7f6ea593804d:	add	rax, 0xf8
0x7f6ea5938053:	mov	rdi, rax
0x7f6ea5938056:	call	0x7f6ea4c22e78
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool uaf_obj252_253_8 == 44>
1  <Bool uaf_obj253_254_8 == 86>
2  <Bool uaf_obj255_256_8 == 0>
3  <Bool uaf_obj248_249_8 == 80>
4  <Bool uaf_obj251_252_8 == 155>
5  <Bool uaf_obj250_251_8 == 157>
6  <Bool uaf_obj254_255_8 == 0>
7  <Bool uaf_obj249_250_8 == 119>
8  <Bool uaf_obj4_5_8 == 0>
9  <Bool uaf_obj3_4_8 == 192>
10  <Bool uaf_obj0_1_8 == 0>
11  <Bool uaf_obj5_6_8 == 0>
12  <Bool uaf_obj1_2_8 == 2>
13  <Bool uaf_obj7_8_8 == 0>
14  <Bool uaf_obj2_3_8 == 0>
15  <Bool uaf_obj6_7_8 == 0>
16  <Bool symbolic_return_0_1411_64{UNINITIALIZED} == symbolic_call_0>
17  <Bool !(symbolic_return_0_1411_64{UNINITIALIZED}[7:0] == 0)>
18  <Bool !((uaf_obj795_796_8 .. uaf_obj794_795_8 .. uaf_obj793_794_8 .. uaf_obj792_793_8) <=s 0x0)>
19  <Bool (uaf_obj799_800_8 .. uaf_obj798_799_8 .. uaf_obj797_798_8 .. uaf_obj796_797_8) <=s 0x0>
20  <Bool uaf_obj1229_1230_8 == 0>
21  <Bool uaf_obj1226_1227_8 == 0>
22  <Bool uaf_obj1230_1231_8 == 0>
23  <Bool uaf_obj1227_1228_8 == 192>
24  <Bool uaf_obj1225_1226_8 == 10>
25  <Bool uaf_obj1224_1225_8 == 128>
26  <Bool uaf_obj1228_1229_8 == 0>
27  <Bool uaf_obj1231_1232_8 == 0>
28  <Bool mem_c0000ae1_1432_56{UNINITIALIZED} == 0xc00011>
29  <Bool mem_c0000ae0_1431_8{UNINITIALIZED} == 128>
30  <Bool !(mem_c0001180_1433_8{UNINITIALIZED} == 0) || !(mem_c0001181_1434_24{UNINITIALIZED} == 0x0)>

****************************************************************************************************
Variables used as return values of symbolic calls: 
 <BV64 symbolic_return_0_1411_64{UNINITIALIZED}>

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        
0: 
----------------------------------------------------------------------------------------------------
access          call
id              0
call_from       140113201037564
call            <BV64 mem_c0000881_1410_56{UNINITIALIZED} .. mem_c0000880_1409_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

1: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113201178722
write_to        140722719491416
write_size      <BV64 0x8>
value           <BV64 uaf_obj1231_1232_8 .. uaf_obj1230_1231_8 .. uaf_obj1229_1230_8 .. uaf_obj1228_1229_8 .. uaf_obj1227_1228_8 .. uaf_obj1226_1227_8 .. uaf_obj1225_1226_8 .. uaf_obj1224_1225_8>
----------------------------------------------------------------------------------------------------

2: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113155677520
write_to        140722719491384
write_size      <BV64 0x8>
value           <BV64 0x60 + (uaf_obj1231_1232_8 .. uaf_obj1230_1231_8 .. uaf_obj1229_1230_8 .. uaf_obj1228_1229_8 .. uaf_obj1227_1228_8 .. uaf_obj1226_1227_8 .. uaf_obj1225_1226_8 .. uaf_obj1224_1225_8)>
----------------------------------------------------------------------------------------------------

3: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113155669396
write_to        140722719491352
write_size      <BV64 0x8>
value           <BV64 0x60 + (uaf_obj1231_1232_8 .. uaf_obj1230_1231_8 .. uaf_obj1229_1230_8 .. uaf_obj1228_1229_8 .. uaf_obj1227_1228_8 .. uaf_obj1226_1227_8 .. uaf_obj1225_1226_8 .. uaf_obj1224_1225_8)>
----------------------------------------------------------------------------------------------------


Control hijack  3
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 mem_c0000891_1462_56{UNINITIALIZED} .. mem_c0000890_1461_8{UNINITIALIZED}>  r8: <BV64 0x0>
rbx: <BV64 0x1>  r9: <BV64 0x0>
rcx: <BV64 0x0>  r10: <BV64 0x7ffc8fb50410>
rdx: <BV64 0x562c9ba05900>  r11: <BV64 0x3c5890c0>
rsi: <BV64 0x0>  r12: <BV64 0x7f6ea2ec8ac4>
rdi: <BV64 0x562c9ba05900>  r13: <BV64 0x7f6ea2f8b1dc>
rsp: <BV64 0x7ffc8fb50568>  r14: <BV64 0x0>
rbp: <BV64 0x7ffc8fb505b0>  r15: <BV64 0x0>
rip: <BV64 mem_c0000891_1462_56{UNINITIALIZED} .. mem_c0000890_1461_8{UNINITIALIZED}>  gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x562c9ba05900
maximum memory range     [  0x562c9ba05900  ,  0x562c9ba05e80  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_1        0x0
0x4c8     OBJ_2        0x200
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x580
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj1407_1408_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000880  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0000880
maximum memory range     [  0xc0000880  ,  0xc0000f80  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x260     OBJ_3        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0000880_1409_8{UNINITIALIZED}>  0x0
<BV8 mem_c0000ae0_1442_8{UNINITIALIZED}>  0x260
<BV8 mem_c0000890_1461_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0001180
maximum memory range     [  0xc0000f80  ,  0xc0001680  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001180_1444_8{UNINITIALIZED}>  0x0

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                         address
-----------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV8 uaf_obj256_257_8>
<BV56 mem_c0000881_1410_56{UNINITIALIZED}>
<BV64 symbolic_call_0>
<BV64 symbolic_return_0_1411_64{UNINITIALIZED}>
<BV56 mem_c0000ae1_1443_56{UNINITIALIZED}>
<BV24 mem_c0001181_1445_24{UNINITIALIZED}>
<BV56 mem_c0000891_1462_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140113201037655
Calling  <BV64 mem_c0000891_1462_56{UNINITIALIZED} .. mem_c0000890_1461_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f6ea5938034
0x7f6ea5938034:	push	rbp
0x7f6ea5938035:	mov	rbp, rsp
0x7f6ea5938038:	push	r13
0x7f6ea593803a:	push	r12
0x7f6ea593803c:	push	rbx
0x7f6ea593803d:	sub	rsp, 0x28
0x7f6ea5938041:	mov	qword ptr [rbp - 0x38], rdi
0x7f6ea5938045:	mov	qword ptr [rbp - 0x40], rsi
0x7f6ea5938049:	mov	rax, qword ptr [rbp - 0x38]
0x7f6ea593804d:	add	rax, 0xf8
0x7f6ea5938053:	mov	rdi, rax
0x7f6ea5938056:	call	0x7f6ea4c22e78
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool uaf_obj252_253_8 == 44>
1  <Bool uaf_obj253_254_8 == 86>
2  <Bool uaf_obj255_256_8 == 0>
3  <Bool uaf_obj248_249_8 == 80>
4  <Bool uaf_obj251_252_8 == 155>
5  <Bool uaf_obj250_251_8 == 157>
6  <Bool uaf_obj254_255_8 == 0>
7  <Bool uaf_obj249_250_8 == 119>
8  <Bool uaf_obj4_5_8 == 0>
9  <Bool uaf_obj3_4_8 == 192>
10  <Bool uaf_obj0_1_8 == 0>
11  <Bool uaf_obj5_6_8 == 0>
12  <Bool uaf_obj1_2_8 == 2>
13  <Bool uaf_obj7_8_8 == 0>
14  <Bool uaf_obj2_3_8 == 0>
15  <Bool uaf_obj6_7_8 == 0>
16  <Bool symbolic_return_0_1411_64{UNINITIALIZED} == symbolic_call_0>
17  <Bool !(symbolic_return_0_1411_64{UNINITIALIZED}[7:0] == 0)>
18  <Bool !((uaf_obj795_796_8 .. uaf_obj794_795_8 .. uaf_obj793_794_8 .. uaf_obj792_793_8) <=s 0x0)>
19  <Bool !((uaf_obj799_800_8 .. uaf_obj798_799_8 .. uaf_obj797_798_8 .. uaf_obj796_797_8) <=s 0x0)>
20  <Bool uaf_obj1229_1230_8 == 0>
21  <Bool uaf_obj1226_1227_8 == 0>
22  <Bool uaf_obj1230_1231_8 == 0>
23  <Bool uaf_obj1227_1228_8 == 192>
24  <Bool uaf_obj1225_1226_8 == 10>
25  <Bool uaf_obj1224_1225_8 == 128>
26  <Bool uaf_obj1228_1229_8 == 0>
27  <Bool uaf_obj1231_1232_8 == 0>
28  <Bool mem_c0000ae1_1443_56{UNINITIALIZED} == 0xc00011>
29  <Bool mem_c0000ae0_1442_8{UNINITIALIZED} == 128>
30  <Bool mem_c0001181_1445_24{UNINITIALIZED} == 0x0>
31  <Bool mem_c0001180_1444_8{UNINITIALIZED} == 0>

****************************************************************************************************
Variables used as return values of symbolic calls: 
 <BV64 symbolic_return_0_1411_64{UNINITIALIZED}>

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        
0: 
----------------------------------------------------------------------------------------------------
access          call
id              0
call_from       140113201037564
call            <BV64 mem_c0000881_1410_56{UNINITIALIZED} .. mem_c0000880_1409_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

1: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113201178722
write_to        140722719491416
write_size      <BV64 0x8>
value           <BV64 uaf_obj1231_1232_8 .. uaf_obj1230_1231_8 .. uaf_obj1229_1230_8 .. uaf_obj1228_1229_8 .. uaf_obj1227_1228_8 .. uaf_obj1226_1227_8 .. uaf_obj1225_1226_8 .. uaf_obj1224_1225_8>
----------------------------------------------------------------------------------------------------

2: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113155677520
write_to        140722719491384
write_size      <BV64 0x8>
value           <BV64 0x60 + (uaf_obj1231_1232_8 .. uaf_obj1230_1231_8 .. uaf_obj1229_1230_8 .. uaf_obj1228_1229_8 .. uaf_obj1227_1228_8 .. uaf_obj1226_1227_8 .. uaf_obj1225_1226_8 .. uaf_obj1224_1225_8)>
----------------------------------------------------------------------------------------------------

3: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113155669396
write_to        140722719491352
write_size      <BV64 0x8>
value           <BV64 0x60 + (uaf_obj1231_1232_8 .. uaf_obj1230_1231_8 .. uaf_obj1229_1230_8 .. uaf_obj1228_1229_8 .. uaf_obj1227_1228_8 .. uaf_obj1226_1227_8 .. uaf_obj1225_1226_8 .. uaf_obj1224_1225_8)>
----------------------------------------------------------------------------------------------------


Control hijack  4
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 mem_c0001bf1_1429_56{UNINITIALIZED} .. mem_c0001bf0_1428_8{UNINITIALIZED}>  r8: <BV64 0x0>
rbx: <BV64 0x0>  r9: <BV64 0x0>
rcx: <BV64 0x0>  r10: <BV64 0x7ffc8fb50410>
rdx: <BV64 mem_c0000a89_1415_56{UNINITIALIZED} .. mem_c0000a88_1414_8{UNINITIALIZED}>  r11: <BV64 0x3c5890c0>
rsi: <BV64 0x0>  r12: <BV64 0x7f6ea2ec8ac4>
rdi: <BV64 mem_c0000a89_1415_56{UNINITIALIZED} .. mem_c0000a88_1414_8{UNINITIALIZED}>  r13: <BV64 0x7f6ea2f8b1dc>
rsp: <BV64 0x7ffc8fb504f8>  r14: <BV64 0x0>
rbp: <BV64 0x7ffc8fb50510>  r15: <BV64 0x0>
rip: <BV64 mem_c0001bf1_1429_56{UNINITIALIZED} .. mem_c0001bf0_1428_8{UNINITIALIZED}>  gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x562c9ba05900
maximum memory range     [  0x562c9ba05900  ,  0x562c9ba05e80  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_1        0x0
0x20      OBJ_2        0x200
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x580
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj1407_1408_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000880  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0000880
maximum memory range     [  0xc0000880  ,  0xc0000f80  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x208     OBJ_3        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0000880_1409_8{UNINITIALIZED}>  0x0
<BV8 mem_c0000a88_1414_8{UNINITIALIZED}>  0x208

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0001180
maximum memory range     [  0xc0000f80  ,  0xc0001680  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_4        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001180_1426_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0001880
maximum memory range     [  0xc0001680  ,  0xc0001d80  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001bf0_1428_8{UNINITIALIZED}>  0x370

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                         address
-----------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV8 uaf_obj256_257_8>
<BV56 mem_c0000881_1410_56{UNINITIALIZED}>
<BV64 symbolic_call_0>
<BV64 symbolic_return_0_1411_64{UNINITIALIZED}>
<BV56 mem_c0000a89_1415_56{UNINITIALIZED}>
<BV56 mem_c0001181_1427_56{UNINITIALIZED}>
<BV56 mem_c0001bf1_1429_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140113181647677
Calling  <BV64 mem_c0001bf1_1429_56{UNINITIALIZED} .. mem_c0001bf0_1428_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f6ea46ba31a
0x7f6ea46ba31a:	push	rbp
0x7f6ea46ba31b:	mov	rbp, rsp
0x7f6ea46ba31e:	sub	rsp, 0x10
0x7f6ea46ba322:	mov	qword ptr [rbp - 8], rdi
0x7f6ea46ba326:	mov	rax, qword ptr [rbp - 8]
0x7f6ea46ba32a:	mov	rax, qword ptr [rax]
0x7f6ea46ba32d:	add	rax, 0x370
0x7f6ea46ba333:	mov	rax, qword ptr [rax]
0x7f6ea46ba336:	mov	rdx, qword ptr [rbp - 8]
0x7f6ea46ba33a:	mov	rdi, rdx
0x7f6ea46ba33d:	call	rax
----------------------------------------------------------------------------------------------------
At  0x7f6ea594973a
0x7f6ea594973a:	push	rbp
0x7f6ea594973b:	mov	rbp, rsp
0x7f6ea594973e:	push	r12
0x7f6ea5949740:	push	rbx
0x7f6ea5949741:	sub	rsp, 0x30
0x7f6ea5949745:	mov	qword ptr [rbp - 0x38], rdi
0x7f6ea5949749:	mov	rax, qword ptr fs:[0x28]
0x7f6ea5949752:	mov	qword ptr [rbp - 0x18], rax
0x7f6ea5949756:	xor	eax, eax
0x7f6ea5949758:	mov	rax, qword ptr [rbp - 0x38]
0x7f6ea594975c:	add	rax, 0x4c8
0x7f6ea5949762:	mov	rdi, rax
0x7f6ea5949765:	call	0x7f6ea5964612
----------------------------------------------------------------------------------------------------
At  0x7f6ea5938034
0x7f6ea5938034:	push	rbp
0x7f6ea5938035:	mov	rbp, rsp
0x7f6ea5938038:	push	r13
0x7f6ea593803a:	push	r12
0x7f6ea593803c:	push	rbx
0x7f6ea593803d:	sub	rsp, 0x28
0x7f6ea5938041:	mov	qword ptr [rbp - 0x38], rdi
0x7f6ea5938045:	mov	qword ptr [rbp - 0x40], rsi
0x7f6ea5938049:	mov	rax, qword ptr [rbp - 0x38]
0x7f6ea593804d:	add	rax, 0xf8
0x7f6ea5938053:	mov	rdi, rax
0x7f6ea5938056:	call	0x7f6ea4c22e78
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool uaf_obj252_253_8 == 44>
1  <Bool uaf_obj253_254_8 == 86>
2  <Bool uaf_obj255_256_8 == 0>
3  <Bool uaf_obj248_249_8 == 80>
4  <Bool uaf_obj251_252_8 == 155>
5  <Bool uaf_obj250_251_8 == 157>
6  <Bool uaf_obj254_255_8 == 0>
7  <Bool uaf_obj249_250_8 == 119>
8  <Bool uaf_obj4_5_8 == 0>
9  <Bool uaf_obj3_4_8 == 192>
10  <Bool uaf_obj0_1_8 == 0>
11  <Bool uaf_obj5_6_8 == 0>
12  <Bool uaf_obj1_2_8 == 2>
13  <Bool uaf_obj7_8_8 == 0>
14  <Bool uaf_obj2_3_8 == 0>
15  <Bool uaf_obj6_7_8 == 0>
16  <Bool symbolic_return_0_1411_64{UNINITIALIZED} == symbolic_call_0>
17  <Bool !(symbolic_return_0_1411_64{UNINITIALIZED}[7:0] == 0)>
18  <Bool (uaf_obj795_796_8 .. uaf_obj794_795_8 .. uaf_obj793_794_8 .. uaf_obj792_793_8) <=s 0x0>
19  <Bool uaf_obj1229_1230_8 == 0>
20  <Bool uaf_obj1226_1227_8 == 0>
21  <Bool uaf_obj1230_1231_8 == 0>
22  <Bool uaf_obj1227_1228_8 == 0>
23  <Bool uaf_obj1225_1226_8 == 0>
24  <Bool uaf_obj1224_1225_8 == 0>
25  <Bool uaf_obj1228_1229_8 == 0>
26  <Bool uaf_obj1231_1232_8 == 0>
27  <Bool uaf_obj39_40_8 == 0>
28  <Bool uaf_obj35_36_8 == 192>
29  <Bool uaf_obj33_34_8 == 10>
30  <Bool uaf_obj34_35_8 == 0>
31  <Bool uaf_obj38_39_8 == 0>
32  <Bool uaf_obj37_38_8 == 0>
33  <Bool uaf_obj36_37_8 == 0>
34  <Bool uaf_obj32_33_8 == 128>
35  <Bool mem_c0000a88_1414_8{UNINITIALIZED} == 128>
36  <Bool mem_c0000a89_1415_56{UNINITIALIZED} == 0xc00011>
37  <Bool mem_c0001180_1426_8{UNINITIALIZED} == 128>
38  <Bool mem_c0001181_1427_56{UNINITIALIZED} == 0xc00018>

****************************************************************************************************
Variables used as return values of symbolic calls: 
 <BV64 symbolic_return_0_1411_64{UNINITIALIZED}>

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        
0: 
----------------------------------------------------------------------------------------------------
access          call
id              0
call_from       140113201037564
call            <BV64 mem_c0000881_1410_56{UNINITIALIZED} .. mem_c0000880_1409_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

1: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113157546164
write_to        140722719491304
write_size      <BV64 0x8>
value           <BV64 uaf_obj39_40_8 .. uaf_obj38_39_8 .. uaf_obj37_38_8 .. uaf_obj36_37_8 .. uaf_obj35_36_8 .. uaf_obj34_35_8 .. uaf_obj33_34_8 .. uaf_obj32_33_8>
----------------------------------------------------------------------------------------------------

2: 
----------------------------------------------------------------------------------------------------
access          taint_mem
inst            140113181647650
write_to        140722719491336
write_size      <BV64 0x8>
value           <BV64 mem_c0000a89_1415_56{UNINITIALIZED} .. mem_c0000a88_1414_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------


-----end dump executor-----
