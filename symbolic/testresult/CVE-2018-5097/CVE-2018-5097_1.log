-----start dump executor-----
Step:  2300
State stats:
****************************************************************************************************
Type                   Count
-------------------  -------
write primitive (W)        0
control_hijack (C)       135
active (A)               100
errored (E)                0
****************************************************************************************************
Milestones: 
address           number of active states have passed it
--------------  ----------------------------------------
0x7f5f1cb1c5bd                                       100
0x7f5f1cafe89d                                       100
0x7f5f1cb320cd                                       100
address           number of active states just passed it
--------------  ----------------------------------------
0x7f5f1cb1c5bd                                       100
0x7f5f1cafe89d                                         0
0x7f5f1cb320cd                                         0
****************************************************************************************************
Some errored states: 
****************************************************************************************************
Some write primitives: 
****************************************************************************************************
Some control hijacks: 
Control hijack  0
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 uaf_obj71_72_8 .. uaf_obj70_71_8 .. uaf_obj69_70_8 .. uaf_obj68_69_8 .. uaf_obj67_68_8 .. uaf_obj66_67_8 .. uaf_obj65_66_8 .. uaf_obj64_65_8>  r8: <BV64 0x8>
rbx: <BV64 0x0>  r9: <BV64 0x8>
rcx: <BV64 0x0>  r10: <BV64 0x7>
rdx: <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>  r11: <BV64 0x7>
rsi: <BV64 0x0>  r12: <BV64 0x55c35a5493a0>
rdi: <BV64 uaf_obj71_72_8 .. uaf_obj70_71_8 .. uaf_obj69_70_8 .. uaf_obj68_69_8 .. uaf_obj67_68_8 .. uaf_obj66_67_8 .. uaf_obj65_66_8 .. uaf_obj64_65_8>  r13: <BV64 0x7f5f1caeaff2>
rsp: <BV64 0x7fffc6a1cd68>  r14: <BV64 0x0>
rbp: <BV64 0x7fffc6a1cda0>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x55c35a73ddd0
maximum memory range     [  0x55c35a73ddd0  ,  0x55c35a73de48  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x20      OBJ_1        0x0
0x40      OBJ_2        0x0
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x78
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj119_120_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000700  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0000220_121_8{UNINITIALIZED}>  0x20
<BV8 mem_c0000210_123_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0000900
maximum memory range     [  0xc0000700  ,  0xc0000e00  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x20      OBJ_3        0x0
0x0       OBJ_4        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000091c_1214_8{UNINITIALIZED}>  0x1c
<BV8 mem_c0000920_1254_8{UNINITIALIZED}>  0x20
<BV8 mem_c0000930_1385_8{UNINITIALIZED}>  0x30
<BV8 mem_c0000900_2037_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0001000
maximum memory range     [  0xc0000e00  ,  0xc0001500  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001020_1260_8{UNINITIALIZED}>  0x20
<BV8 mem_c0001010_1317_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0001700
maximum memory range     [  0xc0001500  ,  0xc0001c00  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001900_2039_8{UNINITIALIZED}>  0x200

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                    address
------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV24 mem_c0000221_122_24{UNINITIALIZED}>
<BV56 mem_c0000211_124_56{UNINITIALIZED}>
<BV24 mem_c000091d_1215_24{UNINITIALIZED}>
<BV56 mem_c0000921_1255_56{UNINITIALIZED}>
<BV24 mem_c0001021_1261_24{UNINITIALIZED}>
<BV56 mem_c0001011_1318_56{UNINITIALIZED}>
<BV56 mem_c0000931_1386_56{UNINITIALIZED}>
<BV56 mem_c0000901_2038_56{UNINITIALIZED}>
<BV56 mem_c0001901_2040_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140046479808192
Calling  <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f5f1cae5668
0x7f5f1cae5668:	push	rbp
0x7f5f1cae5669:	mov	rbp, rsp
0x7f5f1cae566c:	sub	rsp, 0x30
0x7f5f1cae5670:	mov	qword ptr [rbp - 0x18], rdi
0x7f5f1cae5674:	mov	qword ptr [rbp - 0x20], rsi
0x7f5f1cae5678:	mov	dword ptr [rbp - 0x24], edx
0x7f5f1cae567b:	mov	rax, qword ptr [rbp - 0x18]
0x7f5f1cae567f:	mov	rdi, rax
0x7f5f1cae5682:	call	0x7f5f1cae7fda
----------------------------------------------------------------------------------------------------
At  0x7f5f1caeaff2
0x7f5f1caeaff2:	push	rbp
0x7f5f1caeaff3:	mov	rbp, rsp
0x7f5f1caeaff6:	push	rbx
0x7f5f1caeaff7:	sub	rsp, 0x68
0x7f5f1caeaffb:	mov	qword ptr [rbp - 0x58], rdi
0x7f5f1caeafff:	mov	qword ptr [rbp - 0x60], rsi
0x7f5f1caeb003:	mov	qword ptr [rbp - 0x68], rdx
0x7f5f1caeb007:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caeb010:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caeb014:	xor	eax, eax
0x7f5f1caeb016:	mov	rax, qword ptr [rbp - 0x68]
0x7f5f1caeb01a:	mov	qword ptr [rax], 0
0x7f5f1caeb021:	lea	rax, [rbp - 0x38]
0x7f5f1caeb025:	mov	rdi, rax
0x7f5f1caeb028:	call	0x7f5f1cae91b8
----------------------------------------------------------------------------------------------------
At  0x7f5f1caed66c
0x7f5f1caed66c:	push	rbp
0x7f5f1caed66d:	mov	rbp, rsp
0x7f5f1caed670:	push	r13
0x7f5f1caed672:	push	r12
0x7f5f1caed674:	push	rbx
0x7f5f1caed675:	sub	rsp, 0xb8
0x7f5f1caed67c:	mov	qword ptr [rbp - 0xb8], rdi
0x7f5f1caed683:	mov	qword ptr [rbp - 0xc0], rsi
0x7f5f1caed68a:	mov	qword ptr [rbp - 0xc8], rdx
0x7f5f1caed691:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caed69a:	mov	qword ptr [rbp - 0x28], rax
0x7f5f1caed69e:	xor	eax, eax
0x7f5f1caed6a0:	mov	rax, qword ptr [rbp - 0xc8]
0x7f5f1caed6a7:	mov	qword ptr [rax], 0
0x7f5f1caed6ae:	lea	rax, [rbp - 0x88]
0x7f5f1caed6b5:	mov	rdi, rax
0x7f5f1caed6b8:	call	0x7f5f1cae8d46
----------------------------------------------------------------------------------------------------
At  0x7f5f1caef226
0x7f5f1caef226:	push	rbp
0x7f5f1caef227:	mov	rbp, rsp
0x7f5f1caef22a:	push	r12
0x7f5f1caef22c:	push	rbx
0x7f5f1caef22d:	sub	rsp, 0x50
0x7f5f1caef231:	mov	qword ptr [rbp - 0x48], rdi
0x7f5f1caef235:	mov	qword ptr [rbp - 0x50], rsi
0x7f5f1caef239:	mov	qword ptr [rbp - 0x58], rdx
0x7f5f1caef23d:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caef246:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caef24a:	xor	eax, eax
0x7f5f1caef24c:	mov	rax, qword ptr [rbp - 0x58]
0x7f5f1caef250:	mov	qword ptr [rax], 0
0x7f5f1caef257:	lea	rax, [rbp - 0x30]
0x7f5f1caef25b:	mov	rdi, rax
0x7f5f1caef25e:	call	0x7f5f1cae8d46
----------------------------------------------------------------------------------------------------
At  0x7f5f1caee6f6
0x7f5f1caee6f6:	push	rbp
0x7f5f1caee6f7:	mov	rbp, rsp
0x7f5f1caee6fa:	push	r12
0x7f5f1caee6fc:	push	rbx
0x7f5f1caee6fd:	sub	rsp, 0x60
0x7f5f1caee701:	mov	qword ptr [rbp - 0x58], rdi
0x7f5f1caee705:	mov	qword ptr [rbp - 0x60], rsi
0x7f5f1caee709:	mov	qword ptr [rbp - 0x68], rdx
0x7f5f1caee70d:	mov	qword ptr [rbp - 0x70], rcx
0x7f5f1caee711:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caee71a:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caee71e:	xor	eax, eax
0x7f5f1caee720:	mov	rax, qword ptr [rbp - 0x58]
0x7f5f1caee724:	add	rax, 8
0x7f5f1caee728:	mov	rdi, rax
0x7f5f1caee72b:	call	0x7f5f1cae9b62
----------------------------------------------------------------------------------------------------
At  0x7f5f1cb31600
0x7f5f1cb31600:	push	rbp
0x7f5f1cb31601:	mov	rbp, rsp
0x7f5f1cb31604:	push	r13
0x7f5f1cb31606:	push	r12
0x7f5f1cb31608:	push	rbx
0x7f5f1cb31609:	sub	rsp, 0xd8
0x7f5f1cb31610:	mov	qword ptr [rbp - 0xc8], rdi
0x7f5f1cb31617:	mov	qword ptr [rbp - 0xd0], rsi
0x7f5f1cb3161e:	mov	qword ptr [rbp - 0xd8], rdx
0x7f5f1cb31625:	mov	qword ptr [rbp - 0xe0], rcx
0x7f5f1cb3162c:	mov	rax, qword ptr fs:[0x28]
0x7f5f1cb31635:	mov	qword ptr [rbp - 0x28], rax
0x7f5f1cb31639:	xor	eax, eax
0x7f5f1cb3163b:	mov	rax, qword ptr [rbp - 0xc8]
0x7f5f1cb31642:	add	rax, 0x10
0x7f5f1cb31646:	mov	rdi, rax
0x7f5f1cb31649:	call	0x7f5f1cae9b62
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool !(uaf_obj28_29_8[3:3] == 0)>
1  <Bool uaf_obj33_34_8 == 2>
2  <Bool uaf_obj32_33_8 == 0>
3  <Bool uaf_obj37_38_8 == 0>
4  <Bool uaf_obj38_39_8 == 0>
5  <Bool uaf_obj34_35_8 == 0>
6  <Bool uaf_obj35_36_8 == 192>
7  <Bool uaf_obj36_37_8 == 0>
8  <Bool uaf_obj39_40_8 == 0>
9  <Bool mem_c0000220_121_8{UNINITIALIZED} == 7>
10  <Bool mem_c0000221_122_24{UNINITIALIZED} == 0x0>
11  <Bool mem_c0000211_124_56{UNINITIALIZED} == 0x55c358378c>
12  <Bool mem_c0000210_123_8{UNINITIALIZED} == 160>
13  <Bool uaf_obj64_65_8 == 0>
14  <Bool uaf_obj70_71_8 == 0>
15  <Bool uaf_obj66_67_8 == 0>
16  <Bool uaf_obj68_69_8 == 0>
17  <Bool uaf_obj67_68_8 == 192>
18  <Bool uaf_obj69_70_8 == 0>
19  <Bool uaf_obj65_66_8 == 9>
20  <Bool uaf_obj71_72_8 == 0>
21  <Bool !(mem_c000091c_1214_8{UNINITIALIZED}[3:3] == 0)>
22  <Bool mem_c0000920_1254_8{UNINITIALIZED} == 0>
23  <Bool mem_c0000921_1255_56{UNINITIALIZED} == 0xc00010>
24  <Bool mem_c0001021_1261_24{UNINITIALIZED} == 0x0>
25  <Bool mem_c0001020_1260_8{UNINITIALIZED} == 7>
26  <Bool mem_c0001011_1318_56{UNINITIALIZED} == 0x55c3583764>
27  <Bool mem_c0001010_1317_8{UNINITIALIZED} == 32>
28  <Bool mem_c0000930_1385_8{UNINITIALIZED} == 0>
29  <Bool mem_c0000931_1386_56{UNINITIALIZED} == 0x0>
30  <Bool mem_c0000900_2037_8{UNINITIALIZED} == 0>
31  <Bool mem_c0000901_2038_56{UNINITIALIZED} == 0xc00017>

****************************************************************************************************
Variables used as return values of symbolic calls: 

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        

Control hijack  1
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 uaf_obj71_72_8 .. uaf_obj70_71_8 .. uaf_obj69_70_8 .. uaf_obj68_69_8 .. uaf_obj67_68_8 .. uaf_obj66_67_8 .. uaf_obj65_66_8 .. uaf_obj64_65_8>  r8: <BV64 0x8>
rbx: <BV64 0x0>  r9: <BV64 0x8>
rcx: <BV64 0x1>  r10: <BV64 0x7>
rdx: <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>  r11: <BV64 0x7>
rsi: <BV64 0x1>  r12: <BV64 0x55c35a5493a0>
rdi: <BV64 uaf_obj71_72_8 .. uaf_obj70_71_8 .. uaf_obj69_70_8 .. uaf_obj68_69_8 .. uaf_obj67_68_8 .. uaf_obj66_67_8 .. uaf_obj65_66_8 .. uaf_obj64_65_8>  r13: <BV64 0x7f5f1caeaff2>
rsp: <BV64 0x7fffc6a1cd68>  r14: <BV64 0x0>
rbp: <BV64 0x7fffc6a1cda0>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x55c35a73ddd0
maximum memory range     [  0x55c35a73ddd0  ,  0x55c35a73de48  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x20      OBJ_1        0x0
0x40      OBJ_2        0x0
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x78
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj119_120_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000700  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0000220_121_8{UNINITIALIZED}>  0x20
<BV8 mem_c0000210_123_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0000900
maximum memory range     [  0xc0000700  ,  0xc0000e00  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x20      OBJ_3        0x0
0x0       OBJ_4        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000091c_1214_8{UNINITIALIZED}>  0x1c
<BV8 mem_c0000920_1254_8{UNINITIALIZED}>  0x20
<BV8 mem_c0000930_1385_8{UNINITIALIZED}>  0x30
<BV8 mem_c0000900_2037_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0001000
maximum memory range     [  0xc0000e00  ,  0xc0001500  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001020_1260_8{UNINITIALIZED}>  0x20
<BV8 mem_c0001010_1317_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0001700
maximum memory range     [  0xc0001500  ,  0xc0001c00  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001900_2039_8{UNINITIALIZED}>  0x200

****************************************************************************************************
object:                  OBJ_5
(possible) base address  0xc0001e00
maximum memory range     [  0xc0001c00  ,  0xc0002300  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001e00_2051_8{UNINITIALIZED}>  0x0

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
symbol                                           points to
-----------------------------------------------  -----------
<BV64 symbolic_return_0_2045_64{UNINITIALIZED}>  0xc0001e00
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                         address
-----------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV24 mem_c0000221_122_24{UNINITIALIZED}>
<BV56 mem_c0000211_124_56{UNINITIALIZED}>
<BV24 mem_c000091d_1215_24{UNINITIALIZED}>
<BV56 mem_c0000921_1255_56{UNINITIALIZED}>
<BV24 mem_c0001021_1261_24{UNINITIALIZED}>
<BV56 mem_c0001011_1318_56{UNINITIALIZED}>
<BV56 mem_c0000931_1386_56{UNINITIALIZED}>
<BV56 mem_c0000901_2038_56{UNINITIALIZED}>
<BV56 mem_c0001901_2040_56{UNINITIALIZED}>
<BV64 symbolic_call_0>
<BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
<BV56 mem_c0001e01_2052_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140046479808192
Calling  <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f5f1cae5668
0x7f5f1cae5668:	push	rbp
0x7f5f1cae5669:	mov	rbp, rsp
0x7f5f1cae566c:	sub	rsp, 0x30
0x7f5f1cae5670:	mov	qword ptr [rbp - 0x18], rdi
0x7f5f1cae5674:	mov	qword ptr [rbp - 0x20], rsi
0x7f5f1cae5678:	mov	dword ptr [rbp - 0x24], edx
0x7f5f1cae567b:	mov	rax, qword ptr [rbp - 0x18]
0x7f5f1cae567f:	mov	rdi, rax
0x7f5f1cae5682:	call	0x7f5f1cae7fda
----------------------------------------------------------------------------------------------------
At  0x7f5f1caeaff2
0x7f5f1caeaff2:	push	rbp
0x7f5f1caeaff3:	mov	rbp, rsp
0x7f5f1caeaff6:	push	rbx
0x7f5f1caeaff7:	sub	rsp, 0x68
0x7f5f1caeaffb:	mov	qword ptr [rbp - 0x58], rdi
0x7f5f1caeafff:	mov	qword ptr [rbp - 0x60], rsi
0x7f5f1caeb003:	mov	qword ptr [rbp - 0x68], rdx
0x7f5f1caeb007:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caeb010:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caeb014:	xor	eax, eax
0x7f5f1caeb016:	mov	rax, qword ptr [rbp - 0x68]
0x7f5f1caeb01a:	mov	qword ptr [rax], 0
0x7f5f1caeb021:	lea	rax, [rbp - 0x38]
0x7f5f1caeb025:	mov	rdi, rax
0x7f5f1caeb028:	call	0x7f5f1cae91b8
----------------------------------------------------------------------------------------------------
At  0x7f5f1caed66c
0x7f5f1caed66c:	push	rbp
0x7f5f1caed66d:	mov	rbp, rsp
0x7f5f1caed670:	push	r13
0x7f5f1caed672:	push	r12
0x7f5f1caed674:	push	rbx
0x7f5f1caed675:	sub	rsp, 0xb8
0x7f5f1caed67c:	mov	qword ptr [rbp - 0xb8], rdi
0x7f5f1caed683:	mov	qword ptr [rbp - 0xc0], rsi
0x7f5f1caed68a:	mov	qword ptr [rbp - 0xc8], rdx
0x7f5f1caed691:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caed69a:	mov	qword ptr [rbp - 0x28], rax
0x7f5f1caed69e:	xor	eax, eax
0x7f5f1caed6a0:	mov	rax, qword ptr [rbp - 0xc8]
0x7f5f1caed6a7:	mov	qword ptr [rax], 0
0x7f5f1caed6ae:	lea	rax, [rbp - 0x88]
0x7f5f1caed6b5:	mov	rdi, rax
0x7f5f1caed6b8:	call	0x7f5f1cae8d46
----------------------------------------------------------------------------------------------------
At  0x7f5f1caef226
0x7f5f1caef226:	push	rbp
0x7f5f1caef227:	mov	rbp, rsp
0x7f5f1caef22a:	push	r12
0x7f5f1caef22c:	push	rbx
0x7f5f1caef22d:	sub	rsp, 0x50
0x7f5f1caef231:	mov	qword ptr [rbp - 0x48], rdi
0x7f5f1caef235:	mov	qword ptr [rbp - 0x50], rsi
0x7f5f1caef239:	mov	qword ptr [rbp - 0x58], rdx
0x7f5f1caef23d:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caef246:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caef24a:	xor	eax, eax
0x7f5f1caef24c:	mov	rax, qword ptr [rbp - 0x58]
0x7f5f1caef250:	mov	qword ptr [rax], 0
0x7f5f1caef257:	lea	rax, [rbp - 0x30]
0x7f5f1caef25b:	mov	rdi, rax
0x7f5f1caef25e:	call	0x7f5f1cae8d46
----------------------------------------------------------------------------------------------------
At  0x7f5f1caee6f6
0x7f5f1caee6f6:	push	rbp
0x7f5f1caee6f7:	mov	rbp, rsp
0x7f5f1caee6fa:	push	r12
0x7f5f1caee6fc:	push	rbx
0x7f5f1caee6fd:	sub	rsp, 0x60
0x7f5f1caee701:	mov	qword ptr [rbp - 0x58], rdi
0x7f5f1caee705:	mov	qword ptr [rbp - 0x60], rsi
0x7f5f1caee709:	mov	qword ptr [rbp - 0x68], rdx
0x7f5f1caee70d:	mov	qword ptr [rbp - 0x70], rcx
0x7f5f1caee711:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caee71a:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caee71e:	xor	eax, eax
0x7f5f1caee720:	mov	rax, qword ptr [rbp - 0x58]
0x7f5f1caee724:	add	rax, 8
0x7f5f1caee728:	mov	rdi, rax
0x7f5f1caee72b:	call	0x7f5f1cae9b62
----------------------------------------------------------------------------------------------------
At  0x7f5f1cb31600
0x7f5f1cb31600:	push	rbp
0x7f5f1cb31601:	mov	rbp, rsp
0x7f5f1cb31604:	push	r13
0x7f5f1cb31606:	push	r12
0x7f5f1cb31608:	push	rbx
0x7f5f1cb31609:	sub	rsp, 0xd8
0x7f5f1cb31610:	mov	qword ptr [rbp - 0xc8], rdi
0x7f5f1cb31617:	mov	qword ptr [rbp - 0xd0], rsi
0x7f5f1cb3161e:	mov	qword ptr [rbp - 0xd8], rdx
0x7f5f1cb31625:	mov	qword ptr [rbp - 0xe0], rcx
0x7f5f1cb3162c:	mov	rax, qword ptr fs:[0x28]
0x7f5f1cb31635:	mov	qword ptr [rbp - 0x28], rax
0x7f5f1cb31639:	xor	eax, eax
0x7f5f1cb3163b:	mov	rax, qword ptr [rbp - 0xc8]
0x7f5f1cb31642:	add	rax, 0x10
0x7f5f1cb31646:	mov	rdi, rax
0x7f5f1cb31649:	call	0x7f5f1cae9b62
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool !(uaf_obj28_29_8[3:3] == 0)>
1  <Bool uaf_obj33_34_8 == 2>
2  <Bool uaf_obj32_33_8 == 0>
3  <Bool uaf_obj37_38_8 == 0>
4  <Bool uaf_obj38_39_8 == 0>
5  <Bool uaf_obj34_35_8 == 0>
6  <Bool uaf_obj35_36_8 == 192>
7  <Bool uaf_obj36_37_8 == 0>
8  <Bool uaf_obj39_40_8 == 0>
9  <Bool mem_c0000220_121_8{UNINITIALIZED} == 7>
10  <Bool mem_c0000221_122_24{UNINITIALIZED} == 0x0>
11  <Bool mem_c0000211_124_56{UNINITIALIZED} == 0x55c358378c>
12  <Bool mem_c0000210_123_8{UNINITIALIZED} == 160>
13  <Bool uaf_obj64_65_8 == 0>
14  <Bool uaf_obj70_71_8 == 0>
15  <Bool uaf_obj66_67_8 == 0>
16  <Bool uaf_obj68_69_8 == 0>
17  <Bool uaf_obj67_68_8 == 192>
18  <Bool uaf_obj69_70_8 == 0>
19  <Bool uaf_obj65_66_8 == 9>
20  <Bool uaf_obj71_72_8 == 0>
21  <Bool !(mem_c000091c_1214_8{UNINITIALIZED}[3:3] == 0)>
22  <Bool mem_c0000920_1254_8{UNINITIALIZED} == 0>
23  <Bool mem_c0000921_1255_56{UNINITIALIZED} == 0xc00010>
24  <Bool mem_c0001021_1261_24{UNINITIALIZED} == 0x0>
25  <Bool mem_c0001020_1260_8{UNINITIALIZED} == 7>
26  <Bool mem_c0001011_1318_56{UNINITIALIZED} == 0x55c3583764>
27  <Bool mem_c0001010_1317_8{UNINITIALIZED} == 32>
28  <Bool mem_c0000930_1385_8{UNINITIALIZED} == 0>
29  <Bool mem_c0000931_1386_56{UNINITIALIZED} == 0x0>
30  <Bool mem_c0000901_2038_56{UNINITIALIZED} == 0xc00017>
31  <Bool mem_c0000900_2037_8{UNINITIALIZED} == 0>
32  <Bool symbolic_return_0_2045_64{UNINITIALIZED} == 0xc0001e00>
33  <Bool symbolic_call_0 == 0xc0001e00>
34  <Bool !(mem_c0001e00_2051_8{UNINITIALIZED} == 80) || !(mem_c0001e01_2052_56{UNINITIALIZED} == 0x55c35836fe)>

****************************************************************************************************
Variables used as return values of symbolic calls: 
 <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        
0: 
----------------------------------------------------------------------------------------------------
access          call
id              0
call_from       140046479808192
call            <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

1: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046479808194
call_id         0
write_to        <BV64 0x7fffc6a1cd98>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

2: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159774
call_id         0
write_to        <BV64 0x7fffc6a1cd58>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

3: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159658
call_id         0
write_to        <BV64 0x7fffc6a1cd28>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

4: 
----------------------------------------------------------------------------------------------------
access          deref_ret_val_r
inst            140046452159670
call_id         0
read_from       <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
read_size       8
value           <BV64 Reverse(mem_c0001e00_2051_8{UNINITIALIZED} .. Reverse(mem_c0001e01_2052_56{UNINITIALIZED}))>
----------------------------------------------------------------------------------------------------


Control hijack  2
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 uaf_obj71_72_8 .. uaf_obj70_71_8 .. uaf_obj69_70_8 .. uaf_obj68_69_8 .. uaf_obj67_68_8 .. uaf_obj66_67_8 .. uaf_obj65_66_8 .. uaf_obj64_65_8>  r8: <BV64 0x8>
rbx: <BV64 0x0>  r9: <BV64 0x8>
rcx: <BV64 0x2>  r10: <BV64 0x7>
rdx: <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>  r11: <BV64 0x7>
rsi: <BV64 0x2>  r12: <BV64 0x55c35a5493a0>
rdi: <BV64 uaf_obj71_72_8 .. uaf_obj70_71_8 .. uaf_obj69_70_8 .. uaf_obj68_69_8 .. uaf_obj67_68_8 .. uaf_obj66_67_8 .. uaf_obj65_66_8 .. uaf_obj64_65_8>  r13: <BV64 0x7f5f1caeaff2>
rsp: <BV64 0x7fffc6a1cd68>  r14: <BV64 0x0>
rbp: <BV64 0x7fffc6a1cda0>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x55c35a73ddd0
maximum memory range     [  0x55c35a73ddd0  ,  0x55c35a73de48  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x20      OBJ_1        0x0
0x40      OBJ_2        0x0
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x78
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj119_120_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000700  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0000220_121_8{UNINITIALIZED}>  0x20
<BV8 mem_c0000210_123_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0000900
maximum memory range     [  0xc0000700  ,  0xc0000e00  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x20      OBJ_3        0x0
0x0       OBJ_4        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000091c_1214_8{UNINITIALIZED}>  0x1c
<BV8 mem_c0000920_1254_8{UNINITIALIZED}>  0x20
<BV8 mem_c0000930_1385_8{UNINITIALIZED}>  0x30
<BV8 mem_c0000900_2037_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0001000
maximum memory range     [  0xc0000e00  ,  0xc0001500  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001020_1260_8{UNINITIALIZED}>  0x20
<BV8 mem_c0001010_1317_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0001700
maximum memory range     [  0xc0001500  ,  0xc0001c00  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001900_2039_8{UNINITIALIZED}>  0x200

****************************************************************************************************
object:                  OBJ_5
(possible) base address  0xc0001e00
maximum memory range     [  0xc0001c00  ,  0xc0002300  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001e00_2051_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_6
(possible) base address  0xc0002500
maximum memory range     [  0xc0002300  ,  0xc0002a00  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0002500_2076_8{UNINITIALIZED}>  0x0

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
symbol                                           points to
-----------------------------------------------  -----------
<BV64 symbolic_return_0_2045_64{UNINITIALIZED}>  0xc0001e00
<BV64 symbolic_return_1_2071_64{UNINITIALIZED}>  0xc0002500
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                         address
-----------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV24 mem_c0000221_122_24{UNINITIALIZED}>
<BV56 mem_c0000211_124_56{UNINITIALIZED}>
<BV24 mem_c000091d_1215_24{UNINITIALIZED}>
<BV56 mem_c0000921_1255_56{UNINITIALIZED}>
<BV24 mem_c0001021_1261_24{UNINITIALIZED}>
<BV56 mem_c0001011_1318_56{UNINITIALIZED}>
<BV56 mem_c0000931_1386_56{UNINITIALIZED}>
<BV56 mem_c0000901_2038_56{UNINITIALIZED}>
<BV56 mem_c0001901_2040_56{UNINITIALIZED}>
<BV64 symbolic_call_0>
<BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
<BV56 mem_c0001e01_2052_56{UNINITIALIZED}>
<BV64 symbolic_call_1>
<BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
<BV56 mem_c0002501_2077_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140046479808192
Calling  <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f5f1cae5668
0x7f5f1cae5668:	push	rbp
0x7f5f1cae5669:	mov	rbp, rsp
0x7f5f1cae566c:	sub	rsp, 0x30
0x7f5f1cae5670:	mov	qword ptr [rbp - 0x18], rdi
0x7f5f1cae5674:	mov	qword ptr [rbp - 0x20], rsi
0x7f5f1cae5678:	mov	dword ptr [rbp - 0x24], edx
0x7f5f1cae567b:	mov	rax, qword ptr [rbp - 0x18]
0x7f5f1cae567f:	mov	rdi, rax
0x7f5f1cae5682:	call	0x7f5f1cae7fda
----------------------------------------------------------------------------------------------------
At  0x7f5f1caeaff2
0x7f5f1caeaff2:	push	rbp
0x7f5f1caeaff3:	mov	rbp, rsp
0x7f5f1caeaff6:	push	rbx
0x7f5f1caeaff7:	sub	rsp, 0x68
0x7f5f1caeaffb:	mov	qword ptr [rbp - 0x58], rdi
0x7f5f1caeafff:	mov	qword ptr [rbp - 0x60], rsi
0x7f5f1caeb003:	mov	qword ptr [rbp - 0x68], rdx
0x7f5f1caeb007:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caeb010:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caeb014:	xor	eax, eax
0x7f5f1caeb016:	mov	rax, qword ptr [rbp - 0x68]
0x7f5f1caeb01a:	mov	qword ptr [rax], 0
0x7f5f1caeb021:	lea	rax, [rbp - 0x38]
0x7f5f1caeb025:	mov	rdi, rax
0x7f5f1caeb028:	call	0x7f5f1cae91b8
----------------------------------------------------------------------------------------------------
At  0x7f5f1caed66c
0x7f5f1caed66c:	push	rbp
0x7f5f1caed66d:	mov	rbp, rsp
0x7f5f1caed670:	push	r13
0x7f5f1caed672:	push	r12
0x7f5f1caed674:	push	rbx
0x7f5f1caed675:	sub	rsp, 0xb8
0x7f5f1caed67c:	mov	qword ptr [rbp - 0xb8], rdi
0x7f5f1caed683:	mov	qword ptr [rbp - 0xc0], rsi
0x7f5f1caed68a:	mov	qword ptr [rbp - 0xc8], rdx
0x7f5f1caed691:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caed69a:	mov	qword ptr [rbp - 0x28], rax
0x7f5f1caed69e:	xor	eax, eax
0x7f5f1caed6a0:	mov	rax, qword ptr [rbp - 0xc8]
0x7f5f1caed6a7:	mov	qword ptr [rax], 0
0x7f5f1caed6ae:	lea	rax, [rbp - 0x88]
0x7f5f1caed6b5:	mov	rdi, rax
0x7f5f1caed6b8:	call	0x7f5f1cae8d46
----------------------------------------------------------------------------------------------------
At  0x7f5f1caef226
0x7f5f1caef226:	push	rbp
0x7f5f1caef227:	mov	rbp, rsp
0x7f5f1caef22a:	push	r12
0x7f5f1caef22c:	push	rbx
0x7f5f1caef22d:	sub	rsp, 0x50
0x7f5f1caef231:	mov	qword ptr [rbp - 0x48], rdi
0x7f5f1caef235:	mov	qword ptr [rbp - 0x50], rsi
0x7f5f1caef239:	mov	qword ptr [rbp - 0x58], rdx
0x7f5f1caef23d:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caef246:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caef24a:	xor	eax, eax
0x7f5f1caef24c:	mov	rax, qword ptr [rbp - 0x58]
0x7f5f1caef250:	mov	qword ptr [rax], 0
0x7f5f1caef257:	lea	rax, [rbp - 0x30]
0x7f5f1caef25b:	mov	rdi, rax
0x7f5f1caef25e:	call	0x7f5f1cae8d46
----------------------------------------------------------------------------------------------------
At  0x7f5f1caee6f6
0x7f5f1caee6f6:	push	rbp
0x7f5f1caee6f7:	mov	rbp, rsp
0x7f5f1caee6fa:	push	r12
0x7f5f1caee6fc:	push	rbx
0x7f5f1caee6fd:	sub	rsp, 0x60
0x7f5f1caee701:	mov	qword ptr [rbp - 0x58], rdi
0x7f5f1caee705:	mov	qword ptr [rbp - 0x60], rsi
0x7f5f1caee709:	mov	qword ptr [rbp - 0x68], rdx
0x7f5f1caee70d:	mov	qword ptr [rbp - 0x70], rcx
0x7f5f1caee711:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caee71a:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caee71e:	xor	eax, eax
0x7f5f1caee720:	mov	rax, qword ptr [rbp - 0x58]
0x7f5f1caee724:	add	rax, 8
0x7f5f1caee728:	mov	rdi, rax
0x7f5f1caee72b:	call	0x7f5f1cae9b62
----------------------------------------------------------------------------------------------------
At  0x7f5f1cb31600
0x7f5f1cb31600:	push	rbp
0x7f5f1cb31601:	mov	rbp, rsp
0x7f5f1cb31604:	push	r13
0x7f5f1cb31606:	push	r12
0x7f5f1cb31608:	push	rbx
0x7f5f1cb31609:	sub	rsp, 0xd8
0x7f5f1cb31610:	mov	qword ptr [rbp - 0xc8], rdi
0x7f5f1cb31617:	mov	qword ptr [rbp - 0xd0], rsi
0x7f5f1cb3161e:	mov	qword ptr [rbp - 0xd8], rdx
0x7f5f1cb31625:	mov	qword ptr [rbp - 0xe0], rcx
0x7f5f1cb3162c:	mov	rax, qword ptr fs:[0x28]
0x7f5f1cb31635:	mov	qword ptr [rbp - 0x28], rax
0x7f5f1cb31639:	xor	eax, eax
0x7f5f1cb3163b:	mov	rax, qword ptr [rbp - 0xc8]
0x7f5f1cb31642:	add	rax, 0x10
0x7f5f1cb31646:	mov	rdi, rax
0x7f5f1cb31649:	call	0x7f5f1cae9b62
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool !(uaf_obj28_29_8[3:3] == 0)>
1  <Bool uaf_obj33_34_8 == 2>
2  <Bool uaf_obj32_33_8 == 0>
3  <Bool uaf_obj37_38_8 == 0>
4  <Bool uaf_obj38_39_8 == 0>
5  <Bool uaf_obj34_35_8 == 0>
6  <Bool uaf_obj35_36_8 == 192>
7  <Bool uaf_obj36_37_8 == 0>
8  <Bool uaf_obj39_40_8 == 0>
9  <Bool mem_c0000220_121_8{UNINITIALIZED} == 7>
10  <Bool mem_c0000221_122_24{UNINITIALIZED} == 0x0>
11  <Bool mem_c0000211_124_56{UNINITIALIZED} == 0x55c358378c>
12  <Bool mem_c0000210_123_8{UNINITIALIZED} == 160>
13  <Bool uaf_obj64_65_8 == 0>
14  <Bool uaf_obj70_71_8 == 0>
15  <Bool uaf_obj66_67_8 == 0>
16  <Bool uaf_obj68_69_8 == 0>
17  <Bool uaf_obj67_68_8 == 192>
18  <Bool uaf_obj69_70_8 == 0>
19  <Bool uaf_obj65_66_8 == 9>
20  <Bool uaf_obj71_72_8 == 0>
21  <Bool !(mem_c000091c_1214_8{UNINITIALIZED}[3:3] == 0)>
22  <Bool mem_c0000920_1254_8{UNINITIALIZED} == 0>
23  <Bool mem_c0000921_1255_56{UNINITIALIZED} == 0xc00010>
24  <Bool mem_c0001021_1261_24{UNINITIALIZED} == 0x0>
25  <Bool mem_c0001020_1260_8{UNINITIALIZED} == 7>
26  <Bool mem_c0001011_1318_56{UNINITIALIZED} == 0x55c3583764>
27  <Bool mem_c0001010_1317_8{UNINITIALIZED} == 32>
28  <Bool mem_c0000930_1385_8{UNINITIALIZED} == 0>
29  <Bool mem_c0000931_1386_56{UNINITIALIZED} == 0x0>
30  <Bool mem_c0000901_2038_56{UNINITIALIZED} == 0xc00017>
31  <Bool mem_c0000900_2037_8{UNINITIALIZED} == 0>
32  <Bool symbolic_return_0_2045_64{UNINITIALIZED} == 0xc0001e00>
33  <Bool symbolic_call_0 == 0xc0001e00>
34  <Bool !(mem_c0001e00_2051_8{UNINITIALIZED} == 80) || !(mem_c0001e01_2052_56{UNINITIALIZED} == 0x55c35836fe)>
35  <Bool symbolic_return_1_2071_64{UNINITIALIZED} == 0xc0002500>
36  <Bool symbolic_call_1 == 0xc0002500>
37  <Bool !(mem_c0002500_2076_8{UNINITIALIZED} == 80) || !(mem_c0002501_2077_56{UNINITIALIZED} == 0x55c35836fe)>

****************************************************************************************************
Variables used as return values of symbolic calls: 
 <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
 <BV64 symbolic_return_1_2071_64{UNINITIALIZED}>

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        
0: 
----------------------------------------------------------------------------------------------------
access          call
id              0
call_from       140046479808192
call            <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

1: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046479808194
call_id         0
write_to        <BV64 0x7fffc6a1cd98>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

2: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159774
call_id         0
write_to        <BV64 0x7fffc6a1cd58>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

3: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159658
call_id         0
write_to        <BV64 0x7fffc6a1cd28>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

4: 
----------------------------------------------------------------------------------------------------
access          deref_ret_val_r
inst            140046452159670
call_id         0
read_from       <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
read_size       8
value           <BV64 Reverse(mem_c0001e00_2051_8{UNINITIALIZED} .. Reverse(mem_c0001e01_2052_56{UNINITIALIZED}))>
----------------------------------------------------------------------------------------------------

5: 
----------------------------------------------------------------------------------------------------
access          call
id              1
call_from       140046479808192
call            <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

6: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046479808194
call_id         1
write_to        <BV64 0x7fffc6a1cd98>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

7: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159774
call_id         1
write_to        <BV64 0x7fffc6a1cd58>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

8: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159658
call_id         1
write_to        <BV64 0x7fffc6a1cd28>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

9: 
----------------------------------------------------------------------------------------------------
access          deref_ret_val_r
inst            140046452159670
call_id         1
read_from       <BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
read_size       8
value           <BV64 Reverse(mem_c0002500_2076_8{UNINITIALIZED} .. Reverse(mem_c0002501_2077_56{UNINITIALIZED}))>
----------------------------------------------------------------------------------------------------


Control hijack  3
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 mem_c0001031_1328_56{UNINITIALIZED} .. mem_c0001030_1327_8{UNINITIALIZED}>  r8: <BV64 0x8>
rbx: <BV64 0x0>  r9: <BV64 0x8>
rcx: <BV64 0x0>  r10: <BV64 0x7>
rdx: <BV64 mem_c0002701_2255_56{UNINITIALIZED} .. mem_c0002700_2254_8{UNINITIALIZED}>  r11: <BV64 0x7>
rsi: <BV64 0x0>  r12: <BV64 0x55c35a5493a0>
rdi: <BV64 mem_c0001031_1328_56{UNINITIALIZED} .. mem_c0001030_1327_8{UNINITIALIZED}>  r13: <BV64 0x7f5f1caeaff2>
rsp: <BV64 0x7fffc6a1cd68>  r14: <BV64 0x0>
rbp: <BV64 0x7fffc6a1cda0>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x55c35a73ddd0
maximum memory range     [  0x55c35a73ddd0  ,  0x55c35a73de48  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x20      OBJ_1        0x0
0x40      OBJ_2        0x0
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x78
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj119_120_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000700  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0000220_121_8{UNINITIALIZED}>  0x20
<BV8 mem_c0000210_123_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0000900
maximum memory range     [  0xc0000700  ,  0xc0000e00  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x30      OBJ_3        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000091c_1214_8{UNINITIALIZED}>  0x1c
<BV8 mem_c0000930_1250_8{UNINITIALIZED}>  0x30

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0001000
maximum memory range     [  0xc0000e00  ,  0xc0001500  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x30      OBJ_4        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000101c_1289_8{UNINITIALIZED}>  0x1c
<BV8 mem_c0001030_1327_8{UNINITIALIZED}>  0x30

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0001700
maximum memory range     [  0xc0001500  ,  0xc0001c00  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x20      OBJ_5        0x0
0x0       OBJ_6        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000171c_1368_8{UNINITIALIZED}>  0x1c
<BV8 mem_c0001720_1415_8{UNINITIALIZED}>  0x20
<BV8 mem_c0001730_1591_8{UNINITIALIZED}>  0x30
<BV8 mem_c0001700_2252_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_5
(possible) base address  0xc0001e00
maximum memory range     [  0xc0001c00  ,  0xc0002300  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001e20_1423_8{UNINITIALIZED}>  0x20
<BV8 mem_c0001e10_1504_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_6
(possible) base address  0xc0002500
maximum memory range     [  0xc0002300  ,  0xc0002a00  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0002700_2254_8{UNINITIALIZED}>  0x200

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                    address
------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV24 mem_c0000221_122_24{UNINITIALIZED}>
<BV56 mem_c0000211_124_56{UNINITIALIZED}>
<BV24 mem_c000091d_1215_24{UNINITIALIZED}>
<BV56 mem_c0000931_1251_56{UNINITIALIZED}>
<BV24 mem_c000101d_1290_24{UNINITIALIZED}>
<BV56 mem_c0001031_1328_56{UNINITIALIZED}>
<BV24 mem_c000171d_1369_24{UNINITIALIZED}>
<BV56 mem_c0001721_1416_56{UNINITIALIZED}>
<BV24 mem_c0001e21_1424_24{UNINITIALIZED}>
<BV56 mem_c0001e11_1505_56{UNINITIALIZED}>
<BV56 mem_c0001731_1592_56{UNINITIALIZED}>
<BV56 mem_c0001701_2253_56{UNINITIALIZED}>
<BV56 mem_c0002701_2255_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140046479808192
Calling  <BV64 mem_c0002701_2255_56{UNINITIALIZED} .. mem_c0002700_2254_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f5f1cae5668
0x7f5f1cae5668:	push	rbp
0x7f5f1cae5669:	mov	rbp, rsp
0x7f5f1cae566c:	sub	rsp, 0x30
0x7f5f1cae5670:	mov	qword ptr [rbp - 0x18], rdi
0x7f5f1cae5674:	mov	qword ptr [rbp - 0x20], rsi
0x7f5f1cae5678:	mov	dword ptr [rbp - 0x24], edx
0x7f5f1cae567b:	mov	rax, qword ptr [rbp - 0x18]
0x7f5f1cae567f:	mov	rdi, rax
0x7f5f1cae5682:	call	0x7f5f1cae7fda
----------------------------------------------------------------------------------------------------
At  0x7f5f1caeaff2
0x7f5f1caeaff2:	push	rbp
0x7f5f1caeaff3:	mov	rbp, rsp
0x7f5f1caeaff6:	push	rbx
0x7f5f1caeaff7:	sub	rsp, 0x68
0x7f5f1caeaffb:	mov	qword ptr [rbp - 0x58], rdi
0x7f5f1caeafff:	mov	qword ptr [rbp - 0x60], rsi
0x7f5f1caeb003:	mov	qword ptr [rbp - 0x68], rdx
0x7f5f1caeb007:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caeb010:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caeb014:	xor	eax, eax
0x7f5f1caeb016:	mov	rax, qword ptr [rbp - 0x68]
0x7f5f1caeb01a:	mov	qword ptr [rax], 0
0x7f5f1caeb021:	lea	rax, [rbp - 0x38]
0x7f5f1caeb025:	mov	rdi, rax
0x7f5f1caeb028:	call	0x7f5f1cae91b8
----------------------------------------------------------------------------------------------------
At  0x7f5f1caed66c
0x7f5f1caed66c:	push	rbp
0x7f5f1caed66d:	mov	rbp, rsp
0x7f5f1caed670:	push	r13
0x7f5f1caed672:	push	r12
0x7f5f1caed674:	push	rbx
0x7f5f1caed675:	sub	rsp, 0xb8
0x7f5f1caed67c:	mov	qword ptr [rbp - 0xb8], rdi
0x7f5f1caed683:	mov	qword ptr [rbp - 0xc0], rsi
0x7f5f1caed68a:	mov	qword ptr [rbp - 0xc8], rdx
0x7f5f1caed691:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caed69a:	mov	qword ptr [rbp - 0x28], rax
0x7f5f1caed69e:	xor	eax, eax
0x7f5f1caed6a0:	mov	rax, qword ptr [rbp - 0xc8]
0x7f5f1caed6a7:	mov	qword ptr [rax], 0
0x7f5f1caed6ae:	lea	rax, [rbp - 0x88]
0x7f5f1caed6b5:	mov	rdi, rax
0x7f5f1caed6b8:	call	0x7f5f1cae8d46
----------------------------------------------------------------------------------------------------
At  0x7f5f1caef226
0x7f5f1caef226:	push	rbp
0x7f5f1caef227:	mov	rbp, rsp
0x7f5f1caef22a:	push	r12
0x7f5f1caef22c:	push	rbx
0x7f5f1caef22d:	sub	rsp, 0x50
0x7f5f1caef231:	mov	qword ptr [rbp - 0x48], rdi
0x7f5f1caef235:	mov	qword ptr [rbp - 0x50], rsi
0x7f5f1caef239:	mov	qword ptr [rbp - 0x58], rdx
0x7f5f1caef23d:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caef246:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caef24a:	xor	eax, eax
0x7f5f1caef24c:	mov	rax, qword ptr [rbp - 0x58]
0x7f5f1caef250:	mov	qword ptr [rax], 0
0x7f5f1caef257:	lea	rax, [rbp - 0x30]
0x7f5f1caef25b:	mov	rdi, rax
0x7f5f1caef25e:	call	0x7f5f1cae8d46
----------------------------------------------------------------------------------------------------
At  0x7f5f1caee6f6
0x7f5f1caee6f6:	push	rbp
0x7f5f1caee6f7:	mov	rbp, rsp
0x7f5f1caee6fa:	push	r12
0x7f5f1caee6fc:	push	rbx
0x7f5f1caee6fd:	sub	rsp, 0x60
0x7f5f1caee701:	mov	qword ptr [rbp - 0x58], rdi
0x7f5f1caee705:	mov	qword ptr [rbp - 0x60], rsi
0x7f5f1caee709:	mov	qword ptr [rbp - 0x68], rdx
0x7f5f1caee70d:	mov	qword ptr [rbp - 0x70], rcx
0x7f5f1caee711:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caee71a:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caee71e:	xor	eax, eax
0x7f5f1caee720:	mov	rax, qword ptr [rbp - 0x58]
0x7f5f1caee724:	add	rax, 8
0x7f5f1caee728:	mov	rdi, rax
0x7f5f1caee72b:	call	0x7f5f1cae9b62
----------------------------------------------------------------------------------------------------
At  0x7f5f1cb31600
0x7f5f1cb31600:	push	rbp
0x7f5f1cb31601:	mov	rbp, rsp
0x7f5f1cb31604:	push	r13
0x7f5f1cb31606:	push	r12
0x7f5f1cb31608:	push	rbx
0x7f5f1cb31609:	sub	rsp, 0xd8
0x7f5f1cb31610:	mov	qword ptr [rbp - 0xc8], rdi
0x7f5f1cb31617:	mov	qword ptr [rbp - 0xd0], rsi
0x7f5f1cb3161e:	mov	qword ptr [rbp - 0xd8], rdx
0x7f5f1cb31625:	mov	qword ptr [rbp - 0xe0], rcx
0x7f5f1cb3162c:	mov	rax, qword ptr fs:[0x28]
0x7f5f1cb31635:	mov	qword ptr [rbp - 0x28], rax
0x7f5f1cb31639:	xor	eax, eax
0x7f5f1cb3163b:	mov	rax, qword ptr [rbp - 0xc8]
0x7f5f1cb31642:	add	rax, 0x10
0x7f5f1cb31646:	mov	rdi, rax
0x7f5f1cb31649:	call	0x7f5f1cae9b62
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool !(uaf_obj28_29_8[3:3] == 0)>
1  <Bool uaf_obj33_34_8 == 2>
2  <Bool uaf_obj32_33_8 == 0>
3  <Bool uaf_obj37_38_8 == 0>
4  <Bool uaf_obj38_39_8 == 0>
5  <Bool uaf_obj34_35_8 == 0>
6  <Bool uaf_obj35_36_8 == 192>
7  <Bool uaf_obj36_37_8 == 0>
8  <Bool uaf_obj39_40_8 == 0>
9  <Bool mem_c0000220_121_8{UNINITIALIZED} == 7>
10  <Bool mem_c0000221_122_24{UNINITIALIZED} == 0x0>
11  <Bool mem_c0000211_124_56{UNINITIALIZED} == 0x55c358378c>
12  <Bool mem_c0000210_123_8{UNINITIALIZED} == 160>
13  <Bool uaf_obj64_65_8 == 0>
14  <Bool uaf_obj70_71_8 == 0>
15  <Bool uaf_obj66_67_8 == 0>
16  <Bool uaf_obj68_69_8 == 0>
17  <Bool uaf_obj67_68_8 == 192>
18  <Bool uaf_obj69_70_8 == 0>
19  <Bool uaf_obj65_66_8 == 9>
20  <Bool uaf_obj71_72_8 == 0>
21  <Bool mem_c000091c_1214_8{UNINITIALIZED}[3:3] == 0>
22  <Bool mem_c0000931_1251_56{UNINITIALIZED} == 0xc00010>
23  <Bool mem_c0000930_1250_8{UNINITIALIZED} == 0>
24  <Bool mem_c000101c_1289_8{UNINITIALIZED}[3:3] == 0>
25  <Bool mem_c0001030_1327_8{UNINITIALIZED} == 0>
26  <Bool mem_c0001031_1328_56{UNINITIALIZED} == 0xc00017>
27  <Bool !(mem_c000171c_1368_8{UNINITIALIZED}[3:3] == 0)>
28  <Bool mem_c0001721_1416_56{UNINITIALIZED} == 0xc0001e>
29  <Bool mem_c0001720_1415_8{UNINITIALIZED} == 0>
30  <Bool mem_c0001e21_1424_24{UNINITIALIZED} == 0x0>
31  <Bool mem_c0001e20_1423_8{UNINITIALIZED} == 7>
32  <Bool mem_c0001e11_1505_56{UNINITIALIZED} == 0x55c3583764>
33  <Bool mem_c0001e10_1504_8{UNINITIALIZED} == 32>
34  <Bool mem_c0001730_1591_8{UNINITIALIZED} == 0>
35  <Bool mem_c0001731_1592_56{UNINITIALIZED} == 0x0>
36  <Bool mem_c0001700_2252_8{UNINITIALIZED} == 0>
37  <Bool mem_c0001701_2253_56{UNINITIALIZED} == 0xc00025>

****************************************************************************************************
Variables used as return values of symbolic calls: 

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        

Control hijack  4
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 uaf_obj71_72_8 .. uaf_obj70_71_8 .. uaf_obj69_70_8 .. uaf_obj68_69_8 .. uaf_obj67_68_8 .. uaf_obj66_67_8 .. uaf_obj65_66_8 .. uaf_obj64_65_8>  r8: <BV64 0x8>
rbx: <BV64 0x0>  r9: <BV64 0x8>
rcx: <BV64 0x3>  r10: <BV64 0x7>
rdx: <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>  r11: <BV64 0x7>
rsi: <BV64 0x3>  r12: <BV64 0x55c35a5493a0>
rdi: <BV64 uaf_obj71_72_8 .. uaf_obj70_71_8 .. uaf_obj69_70_8 .. uaf_obj68_69_8 .. uaf_obj67_68_8 .. uaf_obj66_67_8 .. uaf_obj65_66_8 .. uaf_obj64_65_8>  r13: <BV64 0x7f5f1caeaff2>
rsp: <BV64 0x7fffc6a1cd68>  r14: <BV64 0x0>
rbp: <BV64 0x7fffc6a1cda0>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x55c35a73ddd0
maximum memory range     [  0x55c35a73ddd0  ,  0x55c35a73de48  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x20      OBJ_1        0x0
0x40      OBJ_2        0x0
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x78
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj119_120_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0000200
maximum memory range     [  0xc0000000  ,  0xc0000700  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0000220_121_8{UNINITIALIZED}>  0x20
<BV8 mem_c0000210_123_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0000900
maximum memory range     [  0xc0000700  ,  0xc0000e00  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x20      OBJ_3        0x0
0x0       OBJ_4        0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000091c_1214_8{UNINITIALIZED}>  0x1c
<BV8 mem_c0000920_1254_8{UNINITIALIZED}>  0x20
<BV8 mem_c0000930_1385_8{UNINITIALIZED}>  0x30
<BV8 mem_c0000900_2037_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0001000
maximum memory range     [  0xc0000e00  ,  0xc0001500  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001020_1260_8{UNINITIALIZED}>  0x20
<BV8 mem_c0001010_1317_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0001700
maximum memory range     [  0xc0001500  ,  0xc0001c00  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001900_2039_8{UNINITIALIZED}>  0x200

****************************************************************************************************
object:                  OBJ_5
(possible) base address  0xc0001e00
maximum memory range     [  0xc0001c00  ,  0xc0002300  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0001e00_2051_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_6
(possible) base address  0xc0002500
maximum memory range     [  0xc0002300  ,  0xc0002a00  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0002500_2076_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_7
(possible) base address  0xc0002c00
maximum memory range     [  0xc0002a00  ,  0xc0003100  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0002c00_2115_8{UNINITIALIZED}>  0x0

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
symbol                                           points to
-----------------------------------------------  -----------
<BV64 symbolic_return_0_2045_64{UNINITIALIZED}>  0xc0001e00
<BV64 symbolic_return_1_2071_64{UNINITIALIZED}>  0xc0002500
<BV64 symbolic_return_2_2100_64{UNINITIALIZED}>  0xc0002c00
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                         address
-----------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV24 mem_c0000221_122_24{UNINITIALIZED}>
<BV56 mem_c0000211_124_56{UNINITIALIZED}>
<BV24 mem_c000091d_1215_24{UNINITIALIZED}>
<BV56 mem_c0000921_1255_56{UNINITIALIZED}>
<BV24 mem_c0001021_1261_24{UNINITIALIZED}>
<BV56 mem_c0001011_1318_56{UNINITIALIZED}>
<BV56 mem_c0000931_1386_56{UNINITIALIZED}>
<BV56 mem_c0000901_2038_56{UNINITIALIZED}>
<BV56 mem_c0001901_2040_56{UNINITIALIZED}>
<BV64 symbolic_call_0>
<BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
<BV56 mem_c0001e01_2052_56{UNINITIALIZED}>
<BV64 symbolic_call_1>
<BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
<BV56 mem_c0002501_2077_56{UNINITIALIZED}>
<BV64 symbolic_call_2>
<BV64 symbolic_return_2_2100_64{UNINITIALIZED}>
<BV56 mem_c0002c01_2116_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140046479808192
Calling  <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f5f1cae5668
0x7f5f1cae5668:	push	rbp
0x7f5f1cae5669:	mov	rbp, rsp
0x7f5f1cae566c:	sub	rsp, 0x30
0x7f5f1cae5670:	mov	qword ptr [rbp - 0x18], rdi
0x7f5f1cae5674:	mov	qword ptr [rbp - 0x20], rsi
0x7f5f1cae5678:	mov	dword ptr [rbp - 0x24], edx
0x7f5f1cae567b:	mov	rax, qword ptr [rbp - 0x18]
0x7f5f1cae567f:	mov	rdi, rax
0x7f5f1cae5682:	call	0x7f5f1cae7fda
----------------------------------------------------------------------------------------------------
At  0x7f5f1caeaff2
0x7f5f1caeaff2:	push	rbp
0x7f5f1caeaff3:	mov	rbp, rsp
0x7f5f1caeaff6:	push	rbx
0x7f5f1caeaff7:	sub	rsp, 0x68
0x7f5f1caeaffb:	mov	qword ptr [rbp - 0x58], rdi
0x7f5f1caeafff:	mov	qword ptr [rbp - 0x60], rsi
0x7f5f1caeb003:	mov	qword ptr [rbp - 0x68], rdx
0x7f5f1caeb007:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caeb010:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caeb014:	xor	eax, eax
0x7f5f1caeb016:	mov	rax, qword ptr [rbp - 0x68]
0x7f5f1caeb01a:	mov	qword ptr [rax], 0
0x7f5f1caeb021:	lea	rax, [rbp - 0x38]
0x7f5f1caeb025:	mov	rdi, rax
0x7f5f1caeb028:	call	0x7f5f1cae91b8
----------------------------------------------------------------------------------------------------
At  0x7f5f1caed66c
0x7f5f1caed66c:	push	rbp
0x7f5f1caed66d:	mov	rbp, rsp
0x7f5f1caed670:	push	r13
0x7f5f1caed672:	push	r12
0x7f5f1caed674:	push	rbx
0x7f5f1caed675:	sub	rsp, 0xb8
0x7f5f1caed67c:	mov	qword ptr [rbp - 0xb8], rdi
0x7f5f1caed683:	mov	qword ptr [rbp - 0xc0], rsi
0x7f5f1caed68a:	mov	qword ptr [rbp - 0xc8], rdx
0x7f5f1caed691:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caed69a:	mov	qword ptr [rbp - 0x28], rax
0x7f5f1caed69e:	xor	eax, eax
0x7f5f1caed6a0:	mov	rax, qword ptr [rbp - 0xc8]
0x7f5f1caed6a7:	mov	qword ptr [rax], 0
0x7f5f1caed6ae:	lea	rax, [rbp - 0x88]
0x7f5f1caed6b5:	mov	rdi, rax
0x7f5f1caed6b8:	call	0x7f5f1cae8d46
----------------------------------------------------------------------------------------------------
At  0x7f5f1caef226
0x7f5f1caef226:	push	rbp
0x7f5f1caef227:	mov	rbp, rsp
0x7f5f1caef22a:	push	r12
0x7f5f1caef22c:	push	rbx
0x7f5f1caef22d:	sub	rsp, 0x50
0x7f5f1caef231:	mov	qword ptr [rbp - 0x48], rdi
0x7f5f1caef235:	mov	qword ptr [rbp - 0x50], rsi
0x7f5f1caef239:	mov	qword ptr [rbp - 0x58], rdx
0x7f5f1caef23d:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caef246:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caef24a:	xor	eax, eax
0x7f5f1caef24c:	mov	rax, qword ptr [rbp - 0x58]
0x7f5f1caef250:	mov	qword ptr [rax], 0
0x7f5f1caef257:	lea	rax, [rbp - 0x30]
0x7f5f1caef25b:	mov	rdi, rax
0x7f5f1caef25e:	call	0x7f5f1cae8d46
----------------------------------------------------------------------------------------------------
At  0x7f5f1caee6f6
0x7f5f1caee6f6:	push	rbp
0x7f5f1caee6f7:	mov	rbp, rsp
0x7f5f1caee6fa:	push	r12
0x7f5f1caee6fc:	push	rbx
0x7f5f1caee6fd:	sub	rsp, 0x60
0x7f5f1caee701:	mov	qword ptr [rbp - 0x58], rdi
0x7f5f1caee705:	mov	qword ptr [rbp - 0x60], rsi
0x7f5f1caee709:	mov	qword ptr [rbp - 0x68], rdx
0x7f5f1caee70d:	mov	qword ptr [rbp - 0x70], rcx
0x7f5f1caee711:	mov	rax, qword ptr fs:[0x28]
0x7f5f1caee71a:	mov	qword ptr [rbp - 0x18], rax
0x7f5f1caee71e:	xor	eax, eax
0x7f5f1caee720:	mov	rax, qword ptr [rbp - 0x58]
0x7f5f1caee724:	add	rax, 8
0x7f5f1caee728:	mov	rdi, rax
0x7f5f1caee72b:	call	0x7f5f1cae9b62
----------------------------------------------------------------------------------------------------
At  0x7f5f1cb31600
0x7f5f1cb31600:	push	rbp
0x7f5f1cb31601:	mov	rbp, rsp
0x7f5f1cb31604:	push	r13
0x7f5f1cb31606:	push	r12
0x7f5f1cb31608:	push	rbx
0x7f5f1cb31609:	sub	rsp, 0xd8
0x7f5f1cb31610:	mov	qword ptr [rbp - 0xc8], rdi
0x7f5f1cb31617:	mov	qword ptr [rbp - 0xd0], rsi
0x7f5f1cb3161e:	mov	qword ptr [rbp - 0xd8], rdx
0x7f5f1cb31625:	mov	qword ptr [rbp - 0xe0], rcx
0x7f5f1cb3162c:	mov	rax, qword ptr fs:[0x28]
0x7f5f1cb31635:	mov	qword ptr [rbp - 0x28], rax
0x7f5f1cb31639:	xor	eax, eax
0x7f5f1cb3163b:	mov	rax, qword ptr [rbp - 0xc8]
0x7f5f1cb31642:	add	rax, 0x10
0x7f5f1cb31646:	mov	rdi, rax
0x7f5f1cb31649:	call	0x7f5f1cae9b62
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool !(uaf_obj28_29_8[3:3] == 0)>
1  <Bool uaf_obj33_34_8 == 2>
2  <Bool uaf_obj32_33_8 == 0>
3  <Bool uaf_obj37_38_8 == 0>
4  <Bool uaf_obj38_39_8 == 0>
5  <Bool uaf_obj34_35_8 == 0>
6  <Bool uaf_obj35_36_8 == 192>
7  <Bool uaf_obj36_37_8 == 0>
8  <Bool uaf_obj39_40_8 == 0>
9  <Bool mem_c0000220_121_8{UNINITIALIZED} == 7>
10  <Bool mem_c0000221_122_24{UNINITIALIZED} == 0x0>
11  <Bool mem_c0000211_124_56{UNINITIALIZED} == 0x55c358378c>
12  <Bool mem_c0000210_123_8{UNINITIALIZED} == 160>
13  <Bool uaf_obj64_65_8 == 0>
14  <Bool uaf_obj70_71_8 == 0>
15  <Bool uaf_obj66_67_8 == 0>
16  <Bool uaf_obj68_69_8 == 0>
17  <Bool uaf_obj67_68_8 == 192>
18  <Bool uaf_obj69_70_8 == 0>
19  <Bool uaf_obj65_66_8 == 9>
20  <Bool uaf_obj71_72_8 == 0>
21  <Bool !(mem_c000091c_1214_8{UNINITIALIZED}[3:3] == 0)>
22  <Bool mem_c0000920_1254_8{UNINITIALIZED} == 0>
23  <Bool mem_c0000921_1255_56{UNINITIALIZED} == 0xc00010>
24  <Bool mem_c0001021_1261_24{UNINITIALIZED} == 0x0>
25  <Bool mem_c0001020_1260_8{UNINITIALIZED} == 7>
26  <Bool mem_c0001011_1318_56{UNINITIALIZED} == 0x55c3583764>
27  <Bool mem_c0001010_1317_8{UNINITIALIZED} == 32>
28  <Bool mem_c0000930_1385_8{UNINITIALIZED} == 0>
29  <Bool mem_c0000931_1386_56{UNINITIALIZED} == 0x0>
30  <Bool mem_c0000901_2038_56{UNINITIALIZED} == 0xc00017>
31  <Bool mem_c0000900_2037_8{UNINITIALIZED} == 0>
32  <Bool symbolic_return_0_2045_64{UNINITIALIZED} == 0xc0001e00>
33  <Bool symbolic_call_0 == 0xc0001e00>
34  <Bool !(mem_c0001e00_2051_8{UNINITIALIZED} == 80) || !(mem_c0001e01_2052_56{UNINITIALIZED} == 0x55c35836fe)>
35  <Bool symbolic_return_1_2071_64{UNINITIALIZED} == 0xc0002500>
36  <Bool symbolic_call_1 == 0xc0002500>
37  <Bool !(mem_c0002500_2076_8{UNINITIALIZED} == 80) || !(mem_c0002501_2077_56{UNINITIALIZED} == 0x55c35836fe)>
38  <Bool symbolic_call_2 == 0xc0002c00>
39  <Bool symbolic_return_2_2100_64{UNINITIALIZED} == 0xc0002c00>
40  <Bool !(mem_c0002c00_2115_8{UNINITIALIZED} == 80) || !(mem_c0002c01_2116_56{UNINITIALIZED} == 0x55c35836fe)>

****************************************************************************************************
Variables used as return values of symbolic calls: 
 <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
 <BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
 <BV64 symbolic_return_2_2100_64{UNINITIALIZED}>

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        
0: 
----------------------------------------------------------------------------------------------------
access          call
id              0
call_from       140046479808192
call            <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

1: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046479808194
call_id         0
write_to        <BV64 0x7fffc6a1cd98>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

2: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159774
call_id         0
write_to        <BV64 0x7fffc6a1cd58>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

3: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159658
call_id         0
write_to        <BV64 0x7fffc6a1cd28>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

4: 
----------------------------------------------------------------------------------------------------
access          deref_ret_val_r
inst            140046452159670
call_id         0
read_from       <BV64 symbolic_return_0_2045_64{UNINITIALIZED}>
read_size       8
value           <BV64 Reverse(mem_c0001e00_2051_8{UNINITIALIZED} .. Reverse(mem_c0001e01_2052_56{UNINITIALIZED}))>
----------------------------------------------------------------------------------------------------

5: 
----------------------------------------------------------------------------------------------------
access          call
id              1
call_from       140046479808192
call            <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

6: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046479808194
call_id         1
write_to        <BV64 0x7fffc6a1cd98>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

7: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159774
call_id         1
write_to        <BV64 0x7fffc6a1cd58>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

8: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159658
call_id         1
write_to        <BV64 0x7fffc6a1cd28>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

9: 
----------------------------------------------------------------------------------------------------
access          deref_ret_val_r
inst            140046452159670
call_id         1
read_from       <BV64 symbolic_return_1_2071_64{UNINITIALIZED}>
read_size       8
value           <BV64 Reverse(mem_c0002500_2076_8{UNINITIALIZED} .. Reverse(mem_c0002501_2077_56{UNINITIALIZED}))>
----------------------------------------------------------------------------------------------------

10: 
----------------------------------------------------------------------------------------------------
access          call
id              2
call_from       140046479808192
call            <BV64 mem_c0001901_2040_56{UNINITIALIZED} .. mem_c0001900_2039_8{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

11: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046479808194
call_id         2
write_to        <BV64 0x7fffc6a1cd98>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_2_2100_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

12: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159774
call_id         2
write_to        <BV64 0x7fffc6a1cd58>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_2_2100_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

13: 
----------------------------------------------------------------------------------------------------
access          write_ret_val
inst            140046452159658
call_id         2
write_to        <BV64 0x7fffc6a1cd28>
write_size      <BV64 0x8>
value           <BV64 symbolic_return_2_2100_64{UNINITIALIZED}>
----------------------------------------------------------------------------------------------------

14: 
----------------------------------------------------------------------------------------------------
access          deref_ret_val_r
inst            140046452159670
call_id         2
read_from       <BV64 symbolic_return_2_2100_64{UNINITIALIZED}>
read_size       8
value           <BV64 Reverse(mem_c0002c00_2115_8{UNINITIALIZED} .. Reverse(mem_c0002c01_2116_56{UNINITIALIZED}))>
----------------------------------------------------------------------------------------------------


-----end dump executor-----
