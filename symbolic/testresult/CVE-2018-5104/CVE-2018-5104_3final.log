-----start dump executor-----
Step:  3000
State stats:
****************************************************************************************************
Type                   Count
-------------------  -------
write primitive (W)        4
control_hijack (C)         2
active (A)                 0
unconstrained (U)         19
errored (E)               41
found                     51
avoided                    0
paths to write primitive:  77
paths to control hijack:  93
first primitive after:  1306
total paths:  4365
****************************************************************************************************
Milestones: 
address           number of active states have passed it
--------------  ----------------------------------------
0x7f95ca01d17b                                         0
0x7f95c7f10b58                                         0
0x7f95c7f10c50                                         0
address           number of active states just passed it
--------------  ----------------------------------------
0x7f95ca01d17b                                         0
0x7f95c7f10b58                                         0
0x7f95c7f10c50                                         0
****************************************************************************************************
Some errored states: 
<State errored with "Unsupported dirty helper amd64g_dirtyhelper_XSAVE_COMPONENT_0">
<State errored with "Unsupported dirty helper amd64g_dirtyhelper_XSAVE_COMPONENT_0">
<State errored with "Unsupported dirty helper amd64g_dirtyhelper_XSAVE_COMPONENT_0">
<State errored with "Unsupported dirty helper amd64g_dirtyhelper_XSAVE_COMPONENT_0">
<State errored with "Unsupported dirty helper amd64g_dirtyhelper_XSAVE_COMPONENT_0">
****************************************************************************************************
Some write primitives: 
Write primitive  0
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 mem_c000c131_1154_56{UNINITIALIZED} .. mem_c000c130_1153_8{UNINITIALIZED}>  r8: <BV64 0x7ffcc7d89840>
rbx: <BV64 0x5563803a0e50>  r9: <BV64 0x55637e04b2b8>
rcx: <BV64 0x13>  r10: <BV64 0x7ffcc7d89ad0>
rdx: <BV64 0x0 .. 0x30 + (0x0 .. mem_c000c831_1248_8{UNINITIALIZED} .. mem_c000c830_1247_8{UNINITIALIZED})>  r11: <BV64 0x1>
rsi: <BV64 unconstrained_ret_depth_limit__1181_64{UNINITIALIZED}>  r12: <BV64 0x5563803a4af0>
rdi: <BV64 mem_c000c131_1154_56{UNINITIALIZED} .. mem_c000c130_1153_8{UNINITIALIZED}>  r13: <BV64 0x55637dc71c40>
rsp: <BV64 0x7ffcc7d89480>  r14: <BV64 0x7f95c686eac4>
rbp: <BV64 0x7ffcc7d89510>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
IRSB {
   t0:Ity_I64 t1:Ity_I16 t2:Ity_I64

   00 | ------ IMark(0x7f95ccb9f644, 3, 0) ------
   01 | t0 = GET:I64(rax)
   02 | t1 = GET:I16(dx)
   03 | STle(t0) = t1
   04 | ------ IMark(0x7f95ccb9f647, 2, 0) ------
   NEXT: PUT(rip) = 0x00007f95ccb9f69f; Ijk_Boring
}
0x7f95ccb9f644:	mov	word ptr [rax], dx
0x7f95ccb9f647:	jmp	0x7f95ccb9f69f
-----end dump state-----
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x5563806ea640
maximum memory range     [  0x5563806ea640  ,  0x5563806ea698  ]
 
contains pointers:      
   No pointers     
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x58
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj87_88_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0008030
maximum memory range     [  0xc0008030  ,  0xc0008730  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0008930
maximum memory range     [  0xc0008730  ,  0xc0008e30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0008930_101_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0009030
maximum memory range     [  0xc0008e30  ,  0xc0009530  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0009030_112_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0009730
maximum memory range     [  0xc0009530  ,  0xc0009c30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ------------------
<BV8 mem_c0009730_157_8{UNINITIALIZED}>  0x0,0x7ffc07d80020

****************************************************************************************************
object:                  OBJ_5
(possible) base address  0xc0009e30
maximum memory range     [  0xc0009c30  ,  0xc000a330  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0009e30_178_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_6
(possible) base address  0xc000a530
maximum memory range     [  0xc000a330  ,  0xc000aa30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000a530_185_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_7
(possible) base address  0xc000ac30
maximum memory range     [  0xc000aa30  ,  0xc000b130  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000ac30_195_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_8
(possible) base address  0xc000b130
maximum memory range     [  0xc000b130  ,  0xc000b830  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_9
(possible) base address  0xc000ba30
maximum memory range     [  0xc000b830  ,  0xc000bf30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000ba30_1001_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_10
(possible) base address  0xc000c130
maximum memory range     [  0xc000bf30  ,  0xc000c630  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_11       0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c130_1153_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_11
(possible) base address  0xc000c830
maximum memory range     [  0xc000c630  ,  0xc000cd30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c830_1247_8{UNINITIALIZED}>  0x0
<BV8 mem_c000c831_1248_8{UNINITIALIZED}>  0x1
<BV8 mem_c000c832_1249_8{UNINITIALIZED}>  0x2
<BV8 mem_c000c833_1250_8{UNINITIALIZED}>  0x3

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                                      address
------------------------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__89_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__93_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__97_64{UNINITIALIZED}>
<BV8 mem_c0008230_98_8{UNINITIALIZED}>
<BV56 mem_c0008231_99_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__100_64{UNINITIALIZED}>
<BV56 mem_c0008931_102_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__107_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__110_64{UNINITIALIZED}>
<BV56 mem_c0009031_113_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__132_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__134_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__138_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__149_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__155_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__158_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__174_64{UNINITIALIZED}>
<BV56 mem_c0009e31_179_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__182_64{UNINITIALIZED}>
<BV56 mem_c000a531_186_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__193_64{UNINITIALIZED}>
<BV56 mem_c000ac31_196_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__241_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__247_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__644_64{UNINITIALIZED}>
<BV8 mem_c000b330_673_8{UNINITIALIZED}>
<BV56 mem_c000b331_674_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__975_64{UNINITIALIZED}>
<BV56 mem_c000ba31_1002_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1084_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1127_64{UNINITIALIZED}>
<BV56 mem_c000c131_1154_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1181_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1227_64{UNINITIALIZED}>
<BV64 reg_cc_ndep_1251_64{UNINITIALIZED}>

****************************************************************************************************
This is a write primitive
You have full control of what and where to write
It happens at:  140281361593924
Write  <BV64 0x2>  bytes to  <BV64 mem_c000c131_1154_56{UNINITIALIZED} .. mem_c000c130_1153_8{UNINITIALIZED}>
with expression : <BV16 0x30 + (0x0 .. mem_c000c831_1248_8{UNINITIALIZED} .. mem_c000c830_1247_8{UNINITIALIZED})[15:0]>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f95ccb9f57e
0x7f95ccb9f57e:	push	rbp
0x7f95ccb9f57f:	mov	rbp, rsp
0x7f95ccb9f582:	sub	rsp, 0x90
0x7f95ccb9f589:	mov	qword ptr [rbp - 0x78], rdi
0x7f95ccb9f58d:	mov	dword ptr [rbp - 0x7c], esi
0x7f95ccb9f590:	mov	qword ptr [rbp - 0x88], rdx
0x7f95ccb9f597:	mov	rax, qword ptr fs:[0x28]
0x7f95ccb9f5a0:	mov	qword ptr [rbp - 8], rax
0x7f95ccb9f5a4:	xor	eax, eax
0x7f95ccb9f5a6:	mov	rax, qword ptr [rbp - 0x78]
0x7f95ccb9f5aa:	mov	rdi, rax
0x7f95ccb9f5ad:	call	0x7f95ccb99b8c
----------------------------------------------------------------------------------------------------
At  0x7f95ccb9aef8
0x7f95ccb9aef8:	push	rbp
0x7f95ccb9aef9:	mov	rbp, rsp
0x7f95ccb9aefc:	sub	rsp, 0x20
0x7f95ccb9af00:	mov	qword ptr [rbp - 0x18], rdi
0x7f95ccb9af04:	mov	dword ptr [rbp - 0xc], 0x13
0x7f95ccb9af0b:	mov	qword ptr [rbp - 8], 0x30
0x7f95ccb9af13:	mov	rax, qword ptr [rbp - 0x18]
0x7f95ccb9af17:	mov	rdi, rax
0x7f95ccb9af1a:	call	0x7f95cc1c87c4
----------------------------------------------------------------------------------------------------
At  0x7f95cc9d8058
0x7f95cc9d8058:	push	rbp
0x7f95cc9d8059:	mov	rbp, rsp
0x7f95cc9d805c:	push	r12
0x7f95cc9d805e:	push	rbx
0x7f95cc9d805f:	sub	rsp, 0x40
0x7f95cc9d8063:	mov	qword ptr [rbp - 0x38], rdi
0x7f95cc9d8067:	mov	qword ptr [rbp - 0x40], rsi
0x7f95cc9d806b:	mov	qword ptr [rbp - 0x48], rdx
0x7f95cc9d806f:	mov	dword ptr [rbp - 0x4c], ecx
0x7f95cc9d8072:	mov	rax, qword ptr fs:[0x28]
0x7f95cc9d807b:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc9d807f:	xor	eax, eax
0x7f95cc9d8081:	mov	rax, qword ptr [rbp - 0x38]
0x7f95cc9d8085:	mov	rdi, rax
0x7f95cc9d8088:	call	0x7f95ccb9aef8
----------------------------------------------------------------------------------------------------
At  0x7f95cc9d23da
0x7f95cc9d23da:	push	rbp
0x7f95cc9d23db:	mov	rbp, rsp
0x7f95cc9d23de:	push	r13
0x7f95cc9d23e0:	push	r12
0x7f95cc9d23e2:	push	rbx
0x7f95cc9d23e3:	sub	rsp, 0x1c8
0x7f95cc9d23ea:	mov	qword ptr [rbp - 0x1c8], rdi
0x7f95cc9d23f1:	mov	qword ptr [rbp - 0x1d0], rsi
0x7f95cc9d23f8:	mov	qword ptr [rbp - 0x1d8], rdx
0x7f95cc9d23ff:	mov	qword ptr [rbp - 0x1e0], rcx
0x7f95cc9d2406:	mov	rax, qword ptr fs:[0x28]
0x7f95cc9d240f:	mov	qword ptr [rbp - 0x28], rax
0x7f95cc9d2413:	xor	eax, eax
0x7f95cc9d2415:	cmp	qword ptr [rbp - 0x1e0], 0
0x7f95cc9d241d:	je	0x7f95cc9d243c
----------------------------------------------------------------------------------------------------
At  0x7f95cc7d8a2f
0x7f95cc7d8a2f:	push	rbp
0x7f95cc7d8a30:	mov	rbp, rsp
0x7f95cc7d8a33:	push	rbx
0x7f95cc7d8a34:	sub	rsp, 0xc8
0x7f95cc7d8a3b:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc7d8a42:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc7d8a49:	mov	qword ptr [rbp - 0xc8], rdx
0x7f95cc7d8a50:	mov	dword ptr [rbp - 0xcc], ecx
0x7f95cc7d8a56:	mov	dword ptr [rbp - 0xd0], r8d
0x7f95cc7d8a5d:	mov	rax, qword ptr fs:[0x28]
0x7f95cc7d8a66:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc7d8a6a:	xor	eax, eax
0x7f95cc7d8a6c:	lea	rax, [rbp - 0xc8]
0x7f95cc7d8a73:	mov	rdi, rax
0x7f95cc7d8a76:	call	0x7f95c6822634
----------------------------------------------------------------------------------------------------
At  0x7f95cc25d2ee
0x7f95cc25d2ee:	push	rbp
0x7f95cc25d2ef:	mov	rbp, rsp
0x7f95cc25d2f2:	sub	rsp, 0x20
0x7f95cc25d2f6:	mov	qword ptr [rbp - 8], rdi
0x7f95cc25d2fa:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc25d2fe:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc25d302:	mov	dword ptr [rbp - 0x1c], ecx
0x7f95cc25d305:	mov	dword ptr [rbp - 0x20], r8d
0x7f95cc25d309:	mov	edi, dword ptr [rbp - 0x20]
0x7f95cc25d30c:	mov	ecx, dword ptr [rbp - 0x1c]
0x7f95cc25d30f:	mov	rdx, qword ptr [rbp - 0x18]
0x7f95cc25d313:	mov	rsi, qword ptr [rbp - 0x10]
0x7f95cc25d317:	mov	rax, qword ptr [rbp - 8]
0x7f95cc25d31b:	mov	r8d, edi
0x7f95cc25d31e:	mov	rdi, rax
0x7f95cc25d321:	call	0x7f95cc7d8a2f
----------------------------------------------------------------------------------------------------
At  0x7f95cc2a612e
0x7f95cc2a612e:	push	rbp
0x7f95cc2a612f:	mov	rbp, rsp
0x7f95cc2a6132:	sub	rsp, 0x30
0x7f95cc2a6136:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc2a613a:	mov	qword ptr [rbp - 0x20], rsi
0x7f95cc2a613e:	mov	qword ptr [rbp - 0x28], rdx
0x7f95cc2a6142:	mov	dword ptr [rbp - 0x2c], ecx
0x7f95cc2a6145:	mov	rax, qword ptr [rbp - 0x20]
0x7f95cc2a6149:	mov	rdi, rax
0x7f95cc2a614c:	call	0x7f95cc26d7d7
----------------------------------------------------------------------------------------------------
At  0x7f95cc33bdbb
0x7f95cc33bdbb:	push	rbp
0x7f95cc33bdbc:	mov	rbp, rsp
0x7f95cc33bdbf:	sub	rsp, 0x30
0x7f95cc33bdc3:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc33bdc7:	mov	qword ptr [rbp - 0x20], rsi
0x7f95cc33bdcb:	mov	dword ptr [rbp - 0x24], edx
0x7f95cc33bdce:	mov	ecx, dword ptr [rbp - 0x24]
0x7f95cc33bdd1:	mov	rdx, qword ptr [rbp - 0x20]
0x7f95cc33bdd5:	mov	rax, qword ptr [rbp - 0x18]
0x7f95cc33bdd9:	lea	rsi, [rip + 0x4e6d6c0]
0x7f95cc33bde0:	mov	rdi, rax
0x7f95cc33bde3:	call	0x7f95cc2a612e
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d5261
0x7f95cc2d5261:	push	rbp
0x7f95cc2d5262:	mov	rbp, rsp
0x7f95cc2d5265:	push	rbx
0x7f95cc2d5266:	sub	rsp, 0xc8
0x7f95cc2d526d:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc2d5274:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc2d527b:	mov	eax, ecx
0x7f95cc2d527d:	mov	byte ptr [rbp - 0xc4], dl
0x7f95cc2d5283:	mov	byte ptr [rbp - 0xc8], al
0x7f95cc2d5289:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d5292:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d5296:	xor	eax, eax
0x7f95cc2d5298:	lea	rdx, [rbp - 0xb8]
0x7f95cc2d529f:	lea	rax, [rbp - 0xa0]
0x7f95cc2d52a6:	mov	rsi, rdx
0x7f95cc2d52a9:	mov	rdi, rax
0x7f95cc2d52ac:	call	0x7f95cc33b992
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d2642
0x7f95cc2d2642:	push	rbp
0x7f95cc2d2643:	mov	rbp, rsp
0x7f95cc2d2646:	push	rbx
0x7f95cc2d2647:	sub	rsp, 0x48
0x7f95cc2d264b:	mov	qword ptr [rbp - 0x48], rdi
0x7f95cc2d264f:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d2658:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d265c:	xor	eax, eax
0x7f95cc2d265e:	lea	rax, [rbp - 0x40]
0x7f95cc2d2662:	mov	esi, 0
0x7f95cc2d2667:	mov	rdi, rax
0x7f95cc2d266a:	call	0x7f95c77db232
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d63cc
0x7f95cc2d63cc:	push	rbp
0x7f95cc2d63cd:	mov	rbp, rsp
0x7f95cc2d63d0:	sub	rsp, 0x10
0x7f95cc2d63d4:	mov	qword ptr [rbp - 8], rdi
0x7f95cc2d63d8:	mov	rax, qword ptr [rbp - 8]
0x7f95cc2d63dc:	mov	rdi, rax
0x7f95cc2d63df:	call	0x7f95cc2d2642
----------------------------------------------------------------------------------------------------
At  0x7f95cc7070b7
0x7f95cc7070b7:	push	rbp
0x7f95cc7070b8:	mov	rbp, rsp
0x7f95cc7070bb:	sub	rsp, 0x20
0x7f95cc7070bf:	mov	qword ptr [rbp - 8], rdi
0x7f95cc7070c3:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc7070c7:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc7070cb:	call	0x7f95cc6f6da8
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5dfe
0x7f95c9be5dfe:	push	rbp
0x7f95c9be5dff:	mov	rbp, rsp
0x7f95c9be5e02:	push	rbx
0x7f95c9be5e03:	sub	rsp, 0xb8
0x7f95c9be5e0a:	mov	qword ptr [rbp - 0xa8], rdi
0x7f95c9be5e11:	mov	qword ptr [rbp - 0xb0], rsi
0x7f95c9be5e18:	mov	qword ptr [rbp - 0xb8], rdx
0x7f95c9be5e1f:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5e28:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5e2c:	xor	eax, eax
0x7f95c9be5e2e:	lea	rax, [rbp - 0x80]
0x7f95c9be5e32:	mov	rdi, rax
0x7f95c9be5e35:	call	0x7f95c9ddec62
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5306
0x7f95c9be5306:	push	rbp
0x7f95c9be5307:	mov	rbp, rsp
0x7f95c9be530a:	push	rbx
0x7f95c9be530b:	sub	rsp, 0x48
0x7f95c9be530f:	mov	qword ptr [rbp - 0x38], rdi
0x7f95c9be5313:	mov	qword ptr [rbp - 0x40], rsi
0x7f95c9be5317:	mov	qword ptr [rbp - 0x48], rdx
0x7f95c9be531b:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5324:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5328:	xor	eax, eax
0x7f95c9be532a:	cmp	qword ptr [rbp - 0x40], 0
0x7f95c9be532f:	jne	0x7f95c9be5358
----------------------------------------------------------------------------------------------------
At  0x7f95ca01e1f6
0x7f95ca01e1f6:	push	rbp
0x7f95ca01e1f7:	mov	rbp, rsp
0x7f95ca01e1fa:	sub	rsp, 0x40
0x7f95ca01e1fe:	mov	qword ptr [rbp - 0x38], rdi
0x7f95ca01e202:	mov	rax, qword ptr fs:[0x28]
0x7f95ca01e20b:	mov	qword ptr [rbp - 8], rax
0x7f95ca01e20f:	xor	eax, eax
0x7f95ca01e211:	mov	rax, qword ptr [rbp - 0x38]
0x7f95ca01e215:	add	rax, 0x30
0x7f95ca01e219:	mov	rdi, rax
0x7f95ca01e21c:	call	0x7f95c7803026
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:1] == 0x0>
1  <Bool 0x18 * (0x0 .. 0xfffffffe + 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:20]) == 0x17fe8>
2  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__93_64{UNINITIALIZED}[31:0][31:1] == 0x0>
3  <Bool unconstrained_ret_depth_limit__97_64{UNINITIALIZED} == 0xc0008230>
4  <Bool unconstrained_ret_depth_limit__100_64{UNINITIALIZED} == 0xc0008930>
5  <Bool !(mem_c0008930_101_8{UNINITIALIZED} == 0) || !(mem_c0008931_102_56{UNINITIALIZED} == 0xfff90000000000)>
6  <Bool unconstrained_ret_depth_limit__107_64{UNINITIALIZED}[31:7] == 0x0>
7  <Bool unconstrained_ret_depth_limit__107_64{UNINITIALIZED}[6:0] <= 122>
8  <Bool unconstrained_ret_depth_limit__110_64{UNINITIALIZED} == 0xc0009030>
9  <Bool unconstrained_ret_depth_limit__155_64{UNINITIALIZED} == 0xc0009730>
10  <Bool unconstrained_ret_depth_limit__174_64{UNINITIALIZED} == 0xc0009e30>
11  <Bool unconstrained_ret_depth_limit__182_64{UNINITIALIZED} == 0xc000a530>
12  <Bool unconstrained_ret_depth_limit__193_64{UNINITIALIZED} == 0xc000ac30>
13  <Bool !(mem_c000ac30_195_8{UNINITIALIZED} == 0) || !(mem_c000ac31_196_56{UNINITIALIZED} == 0x0)>
14  <Bool mem_c0009031_113_56{UNINITIALIZED}[38:0] == 0x0>
15  <Bool mem_c0009030_112_8{UNINITIALIZED} == 1>
16  <Bool !(unconstrained_ret_depth_limit__247_64{UNINITIALIZED}[0:0] == 1) || !(unconstrained_ret_depth_limit__247_64{UNINITIALIZED}[7:1] == 0)>
17  <Bool unconstrained_ret_depth_limit__644_64{UNINITIALIZED} == 0xc000b330>
18  <Bool unconstrained_ret_depth_limit__975_64{UNINITIALIZED} == 0xc000ba30>
19  <Bool !(mem_c000ba30_1001_8{UNINITIALIZED} == 0) || !(mem_c000ba31_1002_56{UNINITIALIZED} == 0x0)>
20  <Bool unconstrained_ret_depth_limit__1127_64{UNINITIALIZED} == 0xc000c130>
21  <Bool mem_c000c131_1154_56{UNINITIALIZED} == 0xc000c8>
22  <Bool mem_c000c130_1153_8{UNINITIALIZED} == 48>
23  <Bool !((mem_c000c833_1250_8{UNINITIALIZED} .. mem_c000c832_1249_8{UNINITIALIZED}) <= (mem_c000c831_1248_8{UNINITIALIZED} .. mem_c000c830_1247_8{UNINITIALIZED}))>

****************************************************************************************************
Variables used as return values of symbolic calls: 

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        

Write primitive  1
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 unconstrained_ret_depth_limit__1342_64{UNINITIALIZED}>  r8: <BV64 0x7ffcc7d89840>
rbx: <BV64 0x5563803a0e50>  r9: <BV64 0x55637e04b2b8>
rcx: <BV64 0x13>  r10: <BV64 0x7ffcc7d89ad0>
rdx: <BV64 0x0 .. mem_c000cf31_1365_8{UNINITIALIZED} .. mem_c000cf30_1364_8{UNINITIALIZED}>  r11: <BV64 0x1>
rsi: <BV64 unconstrained_ret_depth_limit__1181_64{UNINITIALIZED}>  r12: <BV64 0x5563803a4af0>
rdi: <BV64 mem_c000c131_1154_56{UNINITIALIZED} .. mem_c000c130_1153_8{UNINITIALIZED}>  r13: <BV64 0x55637dc71c40>
rsp: <BV64 0x7ffcc7d89480>  r14: <BV64 0x7f95c686eac4>
rbp: <BV64 0x7ffcc7d89510>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I16 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I32 t13:Ity_I16 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I16 t20:Ity_I64

   00 | ------ IMark(0x7f95ccb9f680, 3, 0) ------
   01 | t0 = GET:I64(rax)
   02 | t5 = GET:I16(dx)
   03 | STle(t0) = t5
   04 | PUT(rip) = 0x00007f95ccb9f683
   05 | ------ IMark(0x7f95ccb9f683, 4, 0) ------
   06 | t7 = GET:I64(rbp)
   07 | t6 = Add64(t7,0xffffffffffffffe0)
   08 | t8 = LDle:I64(t6)
   09 | PUT(rip) = 0x00007f95ccb9f687
   10 | ------ IMark(0x7f95ccb9f687, 4, 0) ------
   11 | t9 = Add64(t8,0x0000000000000002)
   12 | t13 = LDle:I16(t9)
   13 | t12 = 16Uto32(t13)
   14 | t11 = 32Uto64(t12)
   15 | PUT(rdx) = t11
   16 | PUT(rip) = 0x00007f95ccb9f68b
   17 | ------ IMark(0x7f95ccb9f68b, 4, 0) ------
   18 | t14 = Add64(t7,0xffffffffffffffc0)
   19 | t16 = LDle:I64(t14)
   20 | PUT(rax) = t16
   21 | PUT(rip) = 0x00007f95ccb9f68f
   22 | ------ IMark(0x7f95ccb9f68f, 4, 0) ------
   23 | t17 = Add64(t16,0x0000000000000002)
   24 | t19 = GET:I16(dx)
   25 | STle(t17) = t19
   26 | ------ IMark(0x7f95ccb9f693, 2, 0) ------
   NEXT: PUT(rip) = 0x00007f95ccb9f69f; Ijk_Boring
}
0x7f95ccb9f680:	mov	word ptr [rax], dx
0x7f95ccb9f683:	mov	rax, qword ptr [rbp - 0x20]
0x7f95ccb9f687:	movzx	edx, word ptr [rax + 2]
0x7f95ccb9f68b:	mov	rax, qword ptr [rbp - 0x40]
0x7f95ccb9f68f:	mov	word ptr [rax + 2], dx
0x7f95ccb9f693:	jmp	0x7f95ccb9f69f
-----end dump state-----
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x5563806ea640
maximum memory range     [  0x5563806ea640  ,  0x5563806ea698  ]
 
contains pointers:      
   No pointers     
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x58
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj87_88_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0008030
maximum memory range     [  0xc0008030  ,  0xc0008730  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0008930
maximum memory range     [  0xc0008730  ,  0xc0008e30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0008930_101_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0009030
maximum memory range     [  0xc0008e30  ,  0xc0009530  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0009030_112_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0009730
maximum memory range     [  0xc0009530  ,  0xc0009c30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ------------------
<BV8 mem_c0009730_157_8{UNINITIALIZED}>  0x0,0x7ffc07d80020

****************************************************************************************************
object:                  OBJ_5
(possible) base address  0xc0009e30
maximum memory range     [  0xc0009c30  ,  0xc000a330  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0009e30_178_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_6
(possible) base address  0xc000a530
maximum memory range     [  0xc000a330  ,  0xc000aa30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000a530_185_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_7
(possible) base address  0xc000ac30
maximum memory range     [  0xc000aa30  ,  0xc000b130  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000ac30_195_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_8
(possible) base address  0xc000b130
maximum memory range     [  0xc000b130  ,  0xc000b830  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_9
(possible) base address  0xc000ba30
maximum memory range     [  0xc000b830  ,  0xc000bf30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000ba30_1001_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_10
(possible) base address  0xc000c130
maximum memory range     [  0xc000bf30  ,  0xc000c630  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_11       0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c130_1153_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_11
(possible) base address  0xc000c830
maximum memory range     [  0xc000c630  ,  0xc000cd30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c830_1247_8{UNINITIALIZED}>  0x0
<BV8 mem_c000c831_1248_8{UNINITIALIZED}>  0x1
<BV8 mem_c000c832_1249_8{UNINITIALIZED}>  0x2
<BV8 mem_c000c833_1250_8{UNINITIALIZED}>  0x3

****************************************************************************************************
object:                  OBJ_12
(possible) base address  0xc000cf30
maximum memory range     [  0xc000cd30  ,  0xc000d430  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000cf30_1364_8{UNINITIALIZED}>  0x0
<BV8 mem_c000cf31_1365_8{UNINITIALIZED}>  0x1

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                                      address
------------------------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__89_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__93_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__97_64{UNINITIALIZED}>
<BV8 mem_c0008230_98_8{UNINITIALIZED}>
<BV56 mem_c0008231_99_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__100_64{UNINITIALIZED}>
<BV56 mem_c0008931_102_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__107_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__110_64{UNINITIALIZED}>
<BV56 mem_c0009031_113_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__132_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__134_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__138_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__149_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__155_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__158_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__174_64{UNINITIALIZED}>
<BV56 mem_c0009e31_179_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__182_64{UNINITIALIZED}>
<BV56 mem_c000a531_186_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__193_64{UNINITIALIZED}>
<BV56 mem_c000ac31_196_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__241_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__247_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__644_64{UNINITIALIZED}>
<BV8 mem_c000b330_673_8{UNINITIALIZED}>
<BV56 mem_c000b331_674_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__975_64{UNINITIALIZED}>
<BV56 mem_c000ba31_1002_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1084_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1127_64{UNINITIALIZED}>
<BV56 mem_c000c131_1154_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1181_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1227_64{UNINITIALIZED}>
<BV64 reg_cc_ndep_1251_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1342_64{UNINITIALIZED}>

****************************************************************************************************
This is a write primitive
You have full control of what and where to write
It happens at:  140281361593984
Write  <BV64 0x2>  bytes to  <BV64 mem_c000c131_1154_56{UNINITIALIZED} .. mem_c000c130_1153_8{UNINITIALIZED}>
with expression : <BV16 mem_c000cf31_1365_8{UNINITIALIZED} .. mem_c000cf30_1364_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f95ccb9f57e
0x7f95ccb9f57e:	push	rbp
0x7f95ccb9f57f:	mov	rbp, rsp
0x7f95ccb9f582:	sub	rsp, 0x90
0x7f95ccb9f589:	mov	qword ptr [rbp - 0x78], rdi
0x7f95ccb9f58d:	mov	dword ptr [rbp - 0x7c], esi
0x7f95ccb9f590:	mov	qword ptr [rbp - 0x88], rdx
0x7f95ccb9f597:	mov	rax, qword ptr fs:[0x28]
0x7f95ccb9f5a0:	mov	qword ptr [rbp - 8], rax
0x7f95ccb9f5a4:	xor	eax, eax
0x7f95ccb9f5a6:	mov	rax, qword ptr [rbp - 0x78]
0x7f95ccb9f5aa:	mov	rdi, rax
0x7f95ccb9f5ad:	call	0x7f95ccb99b8c
----------------------------------------------------------------------------------------------------
At  0x7f95ccb9aef8
0x7f95ccb9aef8:	push	rbp
0x7f95ccb9aef9:	mov	rbp, rsp
0x7f95ccb9aefc:	sub	rsp, 0x20
0x7f95ccb9af00:	mov	qword ptr [rbp - 0x18], rdi
0x7f95ccb9af04:	mov	dword ptr [rbp - 0xc], 0x13
0x7f95ccb9af0b:	mov	qword ptr [rbp - 8], 0x30
0x7f95ccb9af13:	mov	rax, qword ptr [rbp - 0x18]
0x7f95ccb9af17:	mov	rdi, rax
0x7f95ccb9af1a:	call	0x7f95cc1c87c4
----------------------------------------------------------------------------------------------------
At  0x7f95cc9d8058
0x7f95cc9d8058:	push	rbp
0x7f95cc9d8059:	mov	rbp, rsp
0x7f95cc9d805c:	push	r12
0x7f95cc9d805e:	push	rbx
0x7f95cc9d805f:	sub	rsp, 0x40
0x7f95cc9d8063:	mov	qword ptr [rbp - 0x38], rdi
0x7f95cc9d8067:	mov	qword ptr [rbp - 0x40], rsi
0x7f95cc9d806b:	mov	qword ptr [rbp - 0x48], rdx
0x7f95cc9d806f:	mov	dword ptr [rbp - 0x4c], ecx
0x7f95cc9d8072:	mov	rax, qword ptr fs:[0x28]
0x7f95cc9d807b:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc9d807f:	xor	eax, eax
0x7f95cc9d8081:	mov	rax, qword ptr [rbp - 0x38]
0x7f95cc9d8085:	mov	rdi, rax
0x7f95cc9d8088:	call	0x7f95ccb9aef8
----------------------------------------------------------------------------------------------------
At  0x7f95cc9d23da
0x7f95cc9d23da:	push	rbp
0x7f95cc9d23db:	mov	rbp, rsp
0x7f95cc9d23de:	push	r13
0x7f95cc9d23e0:	push	r12
0x7f95cc9d23e2:	push	rbx
0x7f95cc9d23e3:	sub	rsp, 0x1c8
0x7f95cc9d23ea:	mov	qword ptr [rbp - 0x1c8], rdi
0x7f95cc9d23f1:	mov	qword ptr [rbp - 0x1d0], rsi
0x7f95cc9d23f8:	mov	qword ptr [rbp - 0x1d8], rdx
0x7f95cc9d23ff:	mov	qword ptr [rbp - 0x1e0], rcx
0x7f95cc9d2406:	mov	rax, qword ptr fs:[0x28]
0x7f95cc9d240f:	mov	qword ptr [rbp - 0x28], rax
0x7f95cc9d2413:	xor	eax, eax
0x7f95cc9d2415:	cmp	qword ptr [rbp - 0x1e0], 0
0x7f95cc9d241d:	je	0x7f95cc9d243c
----------------------------------------------------------------------------------------------------
At  0x7f95cc7d8a2f
0x7f95cc7d8a2f:	push	rbp
0x7f95cc7d8a30:	mov	rbp, rsp
0x7f95cc7d8a33:	push	rbx
0x7f95cc7d8a34:	sub	rsp, 0xc8
0x7f95cc7d8a3b:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc7d8a42:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc7d8a49:	mov	qword ptr [rbp - 0xc8], rdx
0x7f95cc7d8a50:	mov	dword ptr [rbp - 0xcc], ecx
0x7f95cc7d8a56:	mov	dword ptr [rbp - 0xd0], r8d
0x7f95cc7d8a5d:	mov	rax, qword ptr fs:[0x28]
0x7f95cc7d8a66:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc7d8a6a:	xor	eax, eax
0x7f95cc7d8a6c:	lea	rax, [rbp - 0xc8]
0x7f95cc7d8a73:	mov	rdi, rax
0x7f95cc7d8a76:	call	0x7f95c6822634
----------------------------------------------------------------------------------------------------
At  0x7f95cc25d2ee
0x7f95cc25d2ee:	push	rbp
0x7f95cc25d2ef:	mov	rbp, rsp
0x7f95cc25d2f2:	sub	rsp, 0x20
0x7f95cc25d2f6:	mov	qword ptr [rbp - 8], rdi
0x7f95cc25d2fa:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc25d2fe:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc25d302:	mov	dword ptr [rbp - 0x1c], ecx
0x7f95cc25d305:	mov	dword ptr [rbp - 0x20], r8d
0x7f95cc25d309:	mov	edi, dword ptr [rbp - 0x20]
0x7f95cc25d30c:	mov	ecx, dword ptr [rbp - 0x1c]
0x7f95cc25d30f:	mov	rdx, qword ptr [rbp - 0x18]
0x7f95cc25d313:	mov	rsi, qword ptr [rbp - 0x10]
0x7f95cc25d317:	mov	rax, qword ptr [rbp - 8]
0x7f95cc25d31b:	mov	r8d, edi
0x7f95cc25d31e:	mov	rdi, rax
0x7f95cc25d321:	call	0x7f95cc7d8a2f
----------------------------------------------------------------------------------------------------
At  0x7f95cc2a612e
0x7f95cc2a612e:	push	rbp
0x7f95cc2a612f:	mov	rbp, rsp
0x7f95cc2a6132:	sub	rsp, 0x30
0x7f95cc2a6136:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc2a613a:	mov	qword ptr [rbp - 0x20], rsi
0x7f95cc2a613e:	mov	qword ptr [rbp - 0x28], rdx
0x7f95cc2a6142:	mov	dword ptr [rbp - 0x2c], ecx
0x7f95cc2a6145:	mov	rax, qword ptr [rbp - 0x20]
0x7f95cc2a6149:	mov	rdi, rax
0x7f95cc2a614c:	call	0x7f95cc26d7d7
----------------------------------------------------------------------------------------------------
At  0x7f95cc33bdbb
0x7f95cc33bdbb:	push	rbp
0x7f95cc33bdbc:	mov	rbp, rsp
0x7f95cc33bdbf:	sub	rsp, 0x30
0x7f95cc33bdc3:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc33bdc7:	mov	qword ptr [rbp - 0x20], rsi
0x7f95cc33bdcb:	mov	dword ptr [rbp - 0x24], edx
0x7f95cc33bdce:	mov	ecx, dword ptr [rbp - 0x24]
0x7f95cc33bdd1:	mov	rdx, qword ptr [rbp - 0x20]
0x7f95cc33bdd5:	mov	rax, qword ptr [rbp - 0x18]
0x7f95cc33bdd9:	lea	rsi, [rip + 0x4e6d6c0]
0x7f95cc33bde0:	mov	rdi, rax
0x7f95cc33bde3:	call	0x7f95cc2a612e
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d5261
0x7f95cc2d5261:	push	rbp
0x7f95cc2d5262:	mov	rbp, rsp
0x7f95cc2d5265:	push	rbx
0x7f95cc2d5266:	sub	rsp, 0xc8
0x7f95cc2d526d:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc2d5274:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc2d527b:	mov	eax, ecx
0x7f95cc2d527d:	mov	byte ptr [rbp - 0xc4], dl
0x7f95cc2d5283:	mov	byte ptr [rbp - 0xc8], al
0x7f95cc2d5289:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d5292:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d5296:	xor	eax, eax
0x7f95cc2d5298:	lea	rdx, [rbp - 0xb8]
0x7f95cc2d529f:	lea	rax, [rbp - 0xa0]
0x7f95cc2d52a6:	mov	rsi, rdx
0x7f95cc2d52a9:	mov	rdi, rax
0x7f95cc2d52ac:	call	0x7f95cc33b992
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d2642
0x7f95cc2d2642:	push	rbp
0x7f95cc2d2643:	mov	rbp, rsp
0x7f95cc2d2646:	push	rbx
0x7f95cc2d2647:	sub	rsp, 0x48
0x7f95cc2d264b:	mov	qword ptr [rbp - 0x48], rdi
0x7f95cc2d264f:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d2658:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d265c:	xor	eax, eax
0x7f95cc2d265e:	lea	rax, [rbp - 0x40]
0x7f95cc2d2662:	mov	esi, 0
0x7f95cc2d2667:	mov	rdi, rax
0x7f95cc2d266a:	call	0x7f95c77db232
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d63cc
0x7f95cc2d63cc:	push	rbp
0x7f95cc2d63cd:	mov	rbp, rsp
0x7f95cc2d63d0:	sub	rsp, 0x10
0x7f95cc2d63d4:	mov	qword ptr [rbp - 8], rdi
0x7f95cc2d63d8:	mov	rax, qword ptr [rbp - 8]
0x7f95cc2d63dc:	mov	rdi, rax
0x7f95cc2d63df:	call	0x7f95cc2d2642
----------------------------------------------------------------------------------------------------
At  0x7f95cc7070b7
0x7f95cc7070b7:	push	rbp
0x7f95cc7070b8:	mov	rbp, rsp
0x7f95cc7070bb:	sub	rsp, 0x20
0x7f95cc7070bf:	mov	qword ptr [rbp - 8], rdi
0x7f95cc7070c3:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc7070c7:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc7070cb:	call	0x7f95cc6f6da8
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5dfe
0x7f95c9be5dfe:	push	rbp
0x7f95c9be5dff:	mov	rbp, rsp
0x7f95c9be5e02:	push	rbx
0x7f95c9be5e03:	sub	rsp, 0xb8
0x7f95c9be5e0a:	mov	qword ptr [rbp - 0xa8], rdi
0x7f95c9be5e11:	mov	qword ptr [rbp - 0xb0], rsi
0x7f95c9be5e18:	mov	qword ptr [rbp - 0xb8], rdx
0x7f95c9be5e1f:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5e28:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5e2c:	xor	eax, eax
0x7f95c9be5e2e:	lea	rax, [rbp - 0x80]
0x7f95c9be5e32:	mov	rdi, rax
0x7f95c9be5e35:	call	0x7f95c9ddec62
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5306
0x7f95c9be5306:	push	rbp
0x7f95c9be5307:	mov	rbp, rsp
0x7f95c9be530a:	push	rbx
0x7f95c9be530b:	sub	rsp, 0x48
0x7f95c9be530f:	mov	qword ptr [rbp - 0x38], rdi
0x7f95c9be5313:	mov	qword ptr [rbp - 0x40], rsi
0x7f95c9be5317:	mov	qword ptr [rbp - 0x48], rdx
0x7f95c9be531b:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5324:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5328:	xor	eax, eax
0x7f95c9be532a:	cmp	qword ptr [rbp - 0x40], 0
0x7f95c9be532f:	jne	0x7f95c9be5358
----------------------------------------------------------------------------------------------------
At  0x7f95ca01e1f6
0x7f95ca01e1f6:	push	rbp
0x7f95ca01e1f7:	mov	rbp, rsp
0x7f95ca01e1fa:	sub	rsp, 0x40
0x7f95ca01e1fe:	mov	qword ptr [rbp - 0x38], rdi
0x7f95ca01e202:	mov	rax, qword ptr fs:[0x28]
0x7f95ca01e20b:	mov	qword ptr [rbp - 8], rax
0x7f95ca01e20f:	xor	eax, eax
0x7f95ca01e211:	mov	rax, qword ptr [rbp - 0x38]
0x7f95ca01e215:	add	rax, 0x30
0x7f95ca01e219:	mov	rdi, rax
0x7f95ca01e21c:	call	0x7f95c7803026
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:1] == 0x0>
1  <Bool 0x18 * (0x0 .. 0xfffffffe + 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:20]) == 0x17fe8>
2  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__93_64{UNINITIALIZED}[31:0][31:1] == 0x0>
3  <Bool unconstrained_ret_depth_limit__97_64{UNINITIALIZED} == 0xc0008230>
4  <Bool unconstrained_ret_depth_limit__100_64{UNINITIALIZED} == 0xc0008930>
5  <Bool !(mem_c0008930_101_8{UNINITIALIZED} == 0) || !(mem_c0008931_102_56{UNINITIALIZED} == 0xfff90000000000)>
6  <Bool unconstrained_ret_depth_limit__107_64{UNINITIALIZED}[31:7] == 0x0>
7  <Bool unconstrained_ret_depth_limit__107_64{UNINITIALIZED}[6:0] <= 122>
8  <Bool unconstrained_ret_depth_limit__110_64{UNINITIALIZED} == 0xc0009030>
9  <Bool unconstrained_ret_depth_limit__155_64{UNINITIALIZED} == 0xc0009730>
10  <Bool unconstrained_ret_depth_limit__174_64{UNINITIALIZED} == 0xc0009e30>
11  <Bool unconstrained_ret_depth_limit__182_64{UNINITIALIZED} == 0xc000a530>
12  <Bool unconstrained_ret_depth_limit__193_64{UNINITIALIZED} == 0xc000ac30>
13  <Bool !(mem_c000ac30_195_8{UNINITIALIZED} == 0) || !(mem_c000ac31_196_56{UNINITIALIZED} == 0x0)>
14  <Bool mem_c0009031_113_56{UNINITIALIZED}[38:0] == 0x0>
15  <Bool mem_c0009030_112_8{UNINITIALIZED} == 1>
16  <Bool !(unconstrained_ret_depth_limit__247_64{UNINITIALIZED}[0:0] == 1) || !(unconstrained_ret_depth_limit__247_64{UNINITIALIZED}[7:1] == 0)>
17  <Bool unconstrained_ret_depth_limit__644_64{UNINITIALIZED} == 0xc000b330>
18  <Bool unconstrained_ret_depth_limit__975_64{UNINITIALIZED} == 0xc000ba30>
19  <Bool !(mem_c000ba30_1001_8{UNINITIALIZED} == 0) || !(mem_c000ba31_1002_56{UNINITIALIZED} == 0x0)>
20  <Bool unconstrained_ret_depth_limit__1127_64{UNINITIALIZED} == 0xc000c130>
21  <Bool mem_c000c131_1154_56{UNINITIALIZED} == 0xc000c8>
22  <Bool mem_c000c130_1153_8{UNINITIALIZED} == 48>
23  <Bool (mem_c000c833_1250_8{UNINITIALIZED} .. mem_c000c832_1249_8{UNINITIALIZED}) <= (mem_c000c831_1248_8{UNINITIALIZED} .. mem_c000c830_1247_8{UNINITIALIZED})>
24  <Bool !(mem_c000c830_1247_8{UNINITIALIZED} == 0) || !(mem_c000c831_1248_8{UNINITIALIZED} == 0)>
25  <Bool unconstrained_ret_depth_limit__1342_64{UNINITIALIZED} == 0xc000cf30>

****************************************************************************************************
Variables used as return values of symbolic calls: 

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        

Write primitive  2
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 mem_c000c131_1154_56{UNINITIALIZED} .. mem_c000c130_1153_8{UNINITIALIZED}>  r8: <BV64 0x7ffcc7d89840>
rbx: <BV64 0x5563803a0e50>  r9: <BV64 0x55637e04b2b8>
rcx: <BV64 0x13>  r10: <BV64 0x7ffcc7d89ad0>
rdx: <BV64 0x0 .. mem_c000cf33_1367_8{UNINITIALIZED} .. mem_c000cf32_1366_8{UNINITIALIZED}>  r11: <BV64 0x1>
rsi: <BV64 unconstrained_ret_depth_limit__1181_64{UNINITIALIZED}>  r12: <BV64 0x5563803a4af0>
rdi: <BV64 mem_c000c131_1154_56{UNINITIALIZED} .. mem_c000c130_1153_8{UNINITIALIZED}>  r13: <BV64 0x55637dc71c40>
rsp: <BV64 0x7ffcc7d89480>  r14: <BV64 0x7f95c686eac4>
rbp: <BV64 0x7ffcc7d89510>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I16 t4:Ity_I64

   00 | ------ IMark(0x7f95ccb9f68f, 4, 0) ------
   01 | t2 = GET:I64(rax)
   02 | t1 = Add64(t2,0x0000000000000002)
   03 | t3 = GET:I16(dx)
   04 | STle(t1) = t3
   05 | ------ IMark(0x7f95ccb9f693, 2, 0) ------
   NEXT: PUT(rip) = 0x00007f95ccb9f69f; Ijk_Boring
}
0x7f95ccb9f68f:	mov	word ptr [rax + 2], dx
0x7f95ccb9f693:	jmp	0x7f95ccb9f69f
-----end dump state-----
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x5563806ea640
maximum memory range     [  0x5563806ea640  ,  0x5563806ea698  ]
 
contains pointers:      
   No pointers     
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x58
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj87_88_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0008030
maximum memory range     [  0xc0008030  ,  0xc0008730  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0008930
maximum memory range     [  0xc0008730  ,  0xc0008e30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0008930_101_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0009030
maximum memory range     [  0xc0008e30  ,  0xc0009530  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0009030_112_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0009730
maximum memory range     [  0xc0009530  ,  0xc0009c30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ------------------
<BV8 mem_c0009730_157_8{UNINITIALIZED}>  0x0,0x7ffc07d80020

****************************************************************************************************
object:                  OBJ_5
(possible) base address  0xc0009e30
maximum memory range     [  0xc0009c30  ,  0xc000a330  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0009e30_178_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_6
(possible) base address  0xc000a530
maximum memory range     [  0xc000a330  ,  0xc000aa30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000a530_185_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_7
(possible) base address  0xc000ac30
maximum memory range     [  0xc000aa30  ,  0xc000b130  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000ac30_195_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_8
(possible) base address  0xc000b130
maximum memory range     [  0xc000b130  ,  0xc000b830  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_9
(possible) base address  0xc000ba30
maximum memory range     [  0xc000b830  ,  0xc000bf30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000ba30_1001_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_10
(possible) base address  0xc000c130
maximum memory range     [  0xc000bf30  ,  0xc000c630  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_11       0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c130_1153_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_11
(possible) base address  0xc000c830
maximum memory range     [  0xc000c630  ,  0xc000cd30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c832_1249_8{UNINITIALIZED}>  0x2
<BV8 mem_c000c833_1250_8{UNINITIALIZED}>  0x3

****************************************************************************************************
object:                  OBJ_12
(possible) base address  0xc000cf30
maximum memory range     [  0xc000cd30  ,  0xc000d430  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000cf30_1364_8{UNINITIALIZED}>  0x0
<BV8 mem_c000cf31_1365_8{UNINITIALIZED}>  0x1
<BV8 mem_c000cf32_1366_8{UNINITIALIZED}>  0x2
<BV8 mem_c000cf33_1367_8{UNINITIALIZED}>  0x3

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                                      address
------------------------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__89_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__93_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__97_64{UNINITIALIZED}>
<BV8 mem_c0008230_98_8{UNINITIALIZED}>
<BV56 mem_c0008231_99_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__100_64{UNINITIALIZED}>
<BV56 mem_c0008931_102_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__107_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__110_64{UNINITIALIZED}>
<BV56 mem_c0009031_113_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__132_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__134_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__138_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__149_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__155_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__158_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__174_64{UNINITIALIZED}>
<BV56 mem_c0009e31_179_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__182_64{UNINITIALIZED}>
<BV56 mem_c000a531_186_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__193_64{UNINITIALIZED}>
<BV56 mem_c000ac31_196_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__241_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__247_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__644_64{UNINITIALIZED}>
<BV8 mem_c000b330_673_8{UNINITIALIZED}>
<BV56 mem_c000b331_674_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__975_64{UNINITIALIZED}>
<BV56 mem_c000ba31_1002_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1084_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1127_64{UNINITIALIZED}>
<BV56 mem_c000c131_1154_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1181_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1227_64{UNINITIALIZED}>
<BV8 mem_c000c830_1247_8{UNINITIALIZED}>
<BV8 mem_c000c831_1248_8{UNINITIALIZED}>
<BV64 reg_cc_ndep_1251_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1342_64{UNINITIALIZED}>

****************************************************************************************************
This is a write primitive
You have full control of what and where to write
It happens at:  140281361593999
Write  <BV64 0x2>  bytes to  <BV64 (mem_c000c131_1154_56{UNINITIALIZED} .. mem_c000c130_1153_8{UNINITIALIZED}) + 0x2>
with expression : <BV16 mem_c000cf33_1367_8{UNINITIALIZED} .. mem_c000cf32_1366_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f95ccb9f57e
0x7f95ccb9f57e:	push	rbp
0x7f95ccb9f57f:	mov	rbp, rsp
0x7f95ccb9f582:	sub	rsp, 0x90
0x7f95ccb9f589:	mov	qword ptr [rbp - 0x78], rdi
0x7f95ccb9f58d:	mov	dword ptr [rbp - 0x7c], esi
0x7f95ccb9f590:	mov	qword ptr [rbp - 0x88], rdx
0x7f95ccb9f597:	mov	rax, qword ptr fs:[0x28]
0x7f95ccb9f5a0:	mov	qword ptr [rbp - 8], rax
0x7f95ccb9f5a4:	xor	eax, eax
0x7f95ccb9f5a6:	mov	rax, qword ptr [rbp - 0x78]
0x7f95ccb9f5aa:	mov	rdi, rax
0x7f95ccb9f5ad:	call	0x7f95ccb99b8c
----------------------------------------------------------------------------------------------------
At  0x7f95ccb9aef8
0x7f95ccb9aef8:	push	rbp
0x7f95ccb9aef9:	mov	rbp, rsp
0x7f95ccb9aefc:	sub	rsp, 0x20
0x7f95ccb9af00:	mov	qword ptr [rbp - 0x18], rdi
0x7f95ccb9af04:	mov	dword ptr [rbp - 0xc], 0x13
0x7f95ccb9af0b:	mov	qword ptr [rbp - 8], 0x30
0x7f95ccb9af13:	mov	rax, qword ptr [rbp - 0x18]
0x7f95ccb9af17:	mov	rdi, rax
0x7f95ccb9af1a:	call	0x7f95cc1c87c4
----------------------------------------------------------------------------------------------------
At  0x7f95cc9d8058
0x7f95cc9d8058:	push	rbp
0x7f95cc9d8059:	mov	rbp, rsp
0x7f95cc9d805c:	push	r12
0x7f95cc9d805e:	push	rbx
0x7f95cc9d805f:	sub	rsp, 0x40
0x7f95cc9d8063:	mov	qword ptr [rbp - 0x38], rdi
0x7f95cc9d8067:	mov	qword ptr [rbp - 0x40], rsi
0x7f95cc9d806b:	mov	qword ptr [rbp - 0x48], rdx
0x7f95cc9d806f:	mov	dword ptr [rbp - 0x4c], ecx
0x7f95cc9d8072:	mov	rax, qword ptr fs:[0x28]
0x7f95cc9d807b:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc9d807f:	xor	eax, eax
0x7f95cc9d8081:	mov	rax, qword ptr [rbp - 0x38]
0x7f95cc9d8085:	mov	rdi, rax
0x7f95cc9d8088:	call	0x7f95ccb9aef8
----------------------------------------------------------------------------------------------------
At  0x7f95cc9d23da
0x7f95cc9d23da:	push	rbp
0x7f95cc9d23db:	mov	rbp, rsp
0x7f95cc9d23de:	push	r13
0x7f95cc9d23e0:	push	r12
0x7f95cc9d23e2:	push	rbx
0x7f95cc9d23e3:	sub	rsp, 0x1c8
0x7f95cc9d23ea:	mov	qword ptr [rbp - 0x1c8], rdi
0x7f95cc9d23f1:	mov	qword ptr [rbp - 0x1d0], rsi
0x7f95cc9d23f8:	mov	qword ptr [rbp - 0x1d8], rdx
0x7f95cc9d23ff:	mov	qword ptr [rbp - 0x1e0], rcx
0x7f95cc9d2406:	mov	rax, qword ptr fs:[0x28]
0x7f95cc9d240f:	mov	qword ptr [rbp - 0x28], rax
0x7f95cc9d2413:	xor	eax, eax
0x7f95cc9d2415:	cmp	qword ptr [rbp - 0x1e0], 0
0x7f95cc9d241d:	je	0x7f95cc9d243c
----------------------------------------------------------------------------------------------------
At  0x7f95cc7d8a2f
0x7f95cc7d8a2f:	push	rbp
0x7f95cc7d8a30:	mov	rbp, rsp
0x7f95cc7d8a33:	push	rbx
0x7f95cc7d8a34:	sub	rsp, 0xc8
0x7f95cc7d8a3b:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc7d8a42:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc7d8a49:	mov	qword ptr [rbp - 0xc8], rdx
0x7f95cc7d8a50:	mov	dword ptr [rbp - 0xcc], ecx
0x7f95cc7d8a56:	mov	dword ptr [rbp - 0xd0], r8d
0x7f95cc7d8a5d:	mov	rax, qword ptr fs:[0x28]
0x7f95cc7d8a66:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc7d8a6a:	xor	eax, eax
0x7f95cc7d8a6c:	lea	rax, [rbp - 0xc8]
0x7f95cc7d8a73:	mov	rdi, rax
0x7f95cc7d8a76:	call	0x7f95c6822634
----------------------------------------------------------------------------------------------------
At  0x7f95cc25d2ee
0x7f95cc25d2ee:	push	rbp
0x7f95cc25d2ef:	mov	rbp, rsp
0x7f95cc25d2f2:	sub	rsp, 0x20
0x7f95cc25d2f6:	mov	qword ptr [rbp - 8], rdi
0x7f95cc25d2fa:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc25d2fe:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc25d302:	mov	dword ptr [rbp - 0x1c], ecx
0x7f95cc25d305:	mov	dword ptr [rbp - 0x20], r8d
0x7f95cc25d309:	mov	edi, dword ptr [rbp - 0x20]
0x7f95cc25d30c:	mov	ecx, dword ptr [rbp - 0x1c]
0x7f95cc25d30f:	mov	rdx, qword ptr [rbp - 0x18]
0x7f95cc25d313:	mov	rsi, qword ptr [rbp - 0x10]
0x7f95cc25d317:	mov	rax, qword ptr [rbp - 8]
0x7f95cc25d31b:	mov	r8d, edi
0x7f95cc25d31e:	mov	rdi, rax
0x7f95cc25d321:	call	0x7f95cc7d8a2f
----------------------------------------------------------------------------------------------------
At  0x7f95cc2a612e
0x7f95cc2a612e:	push	rbp
0x7f95cc2a612f:	mov	rbp, rsp
0x7f95cc2a6132:	sub	rsp, 0x30
0x7f95cc2a6136:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc2a613a:	mov	qword ptr [rbp - 0x20], rsi
0x7f95cc2a613e:	mov	qword ptr [rbp - 0x28], rdx
0x7f95cc2a6142:	mov	dword ptr [rbp - 0x2c], ecx
0x7f95cc2a6145:	mov	rax, qword ptr [rbp - 0x20]
0x7f95cc2a6149:	mov	rdi, rax
0x7f95cc2a614c:	call	0x7f95cc26d7d7
----------------------------------------------------------------------------------------------------
At  0x7f95cc33bdbb
0x7f95cc33bdbb:	push	rbp
0x7f95cc33bdbc:	mov	rbp, rsp
0x7f95cc33bdbf:	sub	rsp, 0x30
0x7f95cc33bdc3:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc33bdc7:	mov	qword ptr [rbp - 0x20], rsi
0x7f95cc33bdcb:	mov	dword ptr [rbp - 0x24], edx
0x7f95cc33bdce:	mov	ecx, dword ptr [rbp - 0x24]
0x7f95cc33bdd1:	mov	rdx, qword ptr [rbp - 0x20]
0x7f95cc33bdd5:	mov	rax, qword ptr [rbp - 0x18]
0x7f95cc33bdd9:	lea	rsi, [rip + 0x4e6d6c0]
0x7f95cc33bde0:	mov	rdi, rax
0x7f95cc33bde3:	call	0x7f95cc2a612e
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d5261
0x7f95cc2d5261:	push	rbp
0x7f95cc2d5262:	mov	rbp, rsp
0x7f95cc2d5265:	push	rbx
0x7f95cc2d5266:	sub	rsp, 0xc8
0x7f95cc2d526d:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc2d5274:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc2d527b:	mov	eax, ecx
0x7f95cc2d527d:	mov	byte ptr [rbp - 0xc4], dl
0x7f95cc2d5283:	mov	byte ptr [rbp - 0xc8], al
0x7f95cc2d5289:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d5292:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d5296:	xor	eax, eax
0x7f95cc2d5298:	lea	rdx, [rbp - 0xb8]
0x7f95cc2d529f:	lea	rax, [rbp - 0xa0]
0x7f95cc2d52a6:	mov	rsi, rdx
0x7f95cc2d52a9:	mov	rdi, rax
0x7f95cc2d52ac:	call	0x7f95cc33b992
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d2642
0x7f95cc2d2642:	push	rbp
0x7f95cc2d2643:	mov	rbp, rsp
0x7f95cc2d2646:	push	rbx
0x7f95cc2d2647:	sub	rsp, 0x48
0x7f95cc2d264b:	mov	qword ptr [rbp - 0x48], rdi
0x7f95cc2d264f:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d2658:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d265c:	xor	eax, eax
0x7f95cc2d265e:	lea	rax, [rbp - 0x40]
0x7f95cc2d2662:	mov	esi, 0
0x7f95cc2d2667:	mov	rdi, rax
0x7f95cc2d266a:	call	0x7f95c77db232
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d63cc
0x7f95cc2d63cc:	push	rbp
0x7f95cc2d63cd:	mov	rbp, rsp
0x7f95cc2d63d0:	sub	rsp, 0x10
0x7f95cc2d63d4:	mov	qword ptr [rbp - 8], rdi
0x7f95cc2d63d8:	mov	rax, qword ptr [rbp - 8]
0x7f95cc2d63dc:	mov	rdi, rax
0x7f95cc2d63df:	call	0x7f95cc2d2642
----------------------------------------------------------------------------------------------------
At  0x7f95cc7070b7
0x7f95cc7070b7:	push	rbp
0x7f95cc7070b8:	mov	rbp, rsp
0x7f95cc7070bb:	sub	rsp, 0x20
0x7f95cc7070bf:	mov	qword ptr [rbp - 8], rdi
0x7f95cc7070c3:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc7070c7:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc7070cb:	call	0x7f95cc6f6da8
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5dfe
0x7f95c9be5dfe:	push	rbp
0x7f95c9be5dff:	mov	rbp, rsp
0x7f95c9be5e02:	push	rbx
0x7f95c9be5e03:	sub	rsp, 0xb8
0x7f95c9be5e0a:	mov	qword ptr [rbp - 0xa8], rdi
0x7f95c9be5e11:	mov	qword ptr [rbp - 0xb0], rsi
0x7f95c9be5e18:	mov	qword ptr [rbp - 0xb8], rdx
0x7f95c9be5e1f:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5e28:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5e2c:	xor	eax, eax
0x7f95c9be5e2e:	lea	rax, [rbp - 0x80]
0x7f95c9be5e32:	mov	rdi, rax
0x7f95c9be5e35:	call	0x7f95c9ddec62
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5306
0x7f95c9be5306:	push	rbp
0x7f95c9be5307:	mov	rbp, rsp
0x7f95c9be530a:	push	rbx
0x7f95c9be530b:	sub	rsp, 0x48
0x7f95c9be530f:	mov	qword ptr [rbp - 0x38], rdi
0x7f95c9be5313:	mov	qword ptr [rbp - 0x40], rsi
0x7f95c9be5317:	mov	qword ptr [rbp - 0x48], rdx
0x7f95c9be531b:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5324:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5328:	xor	eax, eax
0x7f95c9be532a:	cmp	qword ptr [rbp - 0x40], 0
0x7f95c9be532f:	jne	0x7f95c9be5358
----------------------------------------------------------------------------------------------------
At  0x7f95ca01e1f6
0x7f95ca01e1f6:	push	rbp
0x7f95ca01e1f7:	mov	rbp, rsp
0x7f95ca01e1fa:	sub	rsp, 0x40
0x7f95ca01e1fe:	mov	qword ptr [rbp - 0x38], rdi
0x7f95ca01e202:	mov	rax, qword ptr fs:[0x28]
0x7f95ca01e20b:	mov	qword ptr [rbp - 8], rax
0x7f95ca01e20f:	xor	eax, eax
0x7f95ca01e211:	mov	rax, qword ptr [rbp - 0x38]
0x7f95ca01e215:	add	rax, 0x30
0x7f95ca01e219:	mov	rdi, rax
0x7f95ca01e21c:	call	0x7f95c7803026
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:1] == 0x0>
1  <Bool 0x18 * (0x0 .. 0xfffffffe + 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:20]) == 0x17fe8>
2  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__93_64{UNINITIALIZED}[31:0][31:1] == 0x0>
3  <Bool unconstrained_ret_depth_limit__97_64{UNINITIALIZED} == 0xc0008230>
4  <Bool unconstrained_ret_depth_limit__100_64{UNINITIALIZED} == 0xc0008930>
5  <Bool !(mem_c0008930_101_8{UNINITIALIZED} == 0) || !(mem_c0008931_102_56{UNINITIALIZED} == 0xfff90000000000)>
6  <Bool unconstrained_ret_depth_limit__107_64{UNINITIALIZED}[31:7] == 0x0>
7  <Bool unconstrained_ret_depth_limit__107_64{UNINITIALIZED}[6:0] <= 122>
8  <Bool unconstrained_ret_depth_limit__110_64{UNINITIALIZED} == 0xc0009030>
9  <Bool unconstrained_ret_depth_limit__155_64{UNINITIALIZED} == 0xc0009730>
10  <Bool unconstrained_ret_depth_limit__174_64{UNINITIALIZED} == 0xc0009e30>
11  <Bool unconstrained_ret_depth_limit__182_64{UNINITIALIZED} == 0xc000a530>
12  <Bool unconstrained_ret_depth_limit__193_64{UNINITIALIZED} == 0xc000ac30>
13  <Bool !(mem_c000ac30_195_8{UNINITIALIZED} == 0) || !(mem_c000ac31_196_56{UNINITIALIZED} == 0x0)>
14  <Bool mem_c0009031_113_56{UNINITIALIZED}[38:0] == 0x0>
15  <Bool mem_c0009030_112_8{UNINITIALIZED} == 1>
16  <Bool !(unconstrained_ret_depth_limit__247_64{UNINITIALIZED}[0:0] == 1) || !(unconstrained_ret_depth_limit__247_64{UNINITIALIZED}[7:1] == 0)>
17  <Bool unconstrained_ret_depth_limit__644_64{UNINITIALIZED} == 0xc000b330>
18  <Bool unconstrained_ret_depth_limit__975_64{UNINITIALIZED} == 0xc000ba30>
19  <Bool !(mem_c000ba30_1001_8{UNINITIALIZED} == 0) || !(mem_c000ba31_1002_56{UNINITIALIZED} == 0x0)>
20  <Bool unconstrained_ret_depth_limit__1127_64{UNINITIALIZED} == 0xc000c130>
21  <Bool mem_c000c131_1154_56{UNINITIALIZED} == 0xc000c8>
22  <Bool mem_c000c130_1153_8{UNINITIALIZED} == 48>
23  <Bool (mem_c000c833_1250_8{UNINITIALIZED} .. mem_c000c832_1249_8{UNINITIALIZED}) <= (mem_c000c831_1248_8{UNINITIALIZED} .. mem_c000c830_1247_8{UNINITIALIZED})>
24  <Bool !(mem_c000c830_1247_8{UNINITIALIZED} == 0) || !(mem_c000c831_1248_8{UNINITIALIZED} == 0)>
25  <Bool unconstrained_ret_depth_limit__1342_64{UNINITIALIZED} == 0xc000cf30>

****************************************************************************************************
Variables used as return values of symbolic calls: 

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        

Write primitive  3
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 0x0>  r8: <BV64 0x7ffcc7d895f0>
rbx: <BV64 unconstrained_ret_depth_limit__7199_64{UNINITIALIZED}>  r9: <BV64 0x7ffcc7d895e0>
rcx: <BV64 0x0>  r10: <BV64 0x7ffcc7d89ad0>
rdx: <BV64 0x0>  r11: <BV64 0x1>
rsi: <BV64 unconstrained_ret_depth_limit__7199_64{UNINITIALIZED}>  r12: <BV64 0x5563805b3f40>
rdi: <BV64 mem_c0013f41_7783_56{UNINITIALIZED} .. mem_c0013f40_7782_8{UNINITIALIZED}>  r13: <BV64 0x55637dc71c40>
rsp: <BV64 0x7ffcc7d89580>  r14: <BV64 0x7f95c686eac4>
rbp: <BV64 0x7ffcc7d895a0>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I32 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64

   00 | ------ IMark(0x7f95cc1fa637, 3, 0) ------
   01 | t0 = GET:I64(rax)
   02 | t8 = GET:I64(rdx)
   03 | STle(t0) = t8
   04 | PUT(rip) = 0x00007f95cc1fa63a
   05 | ------ IMark(0x7f95cc1fa63a, 4, 0) ------
   06 | t10 = GET:I64(rbp)
   07 | t9 = Add64(t10,0xffffffffffffffe0)
   08 | t11 = LDle:I64(t9)
   09 | PUT(rip) = 0x00007f95cc1fa63e
   10 | ------ IMark(0x7f95cc1fa63e, 3, 0) ------
   11 | t12 = Add64(t10,0xffffffffffffffe8)
   12 | t15 = LDle:I32(t12)
   13 | t14 = 32Uto64(t15)
   14 | PUT(rcx) = t14
   15 | PUT(rip) = 0x00007f95cc1fa641
   16 | ------ IMark(0x7f95cc1fa641, 3, 0) ------
   17 | t16 = Add64(t10,0xffffffffffffffec)
   18 | t19 = LDle:I32(t16)
   19 | t18 = 32Uto64(t19)
   20 | PUT(rdx) = t18
   21 | PUT(rip) = 0x00007f95cc1fa644
   22 | ------ IMark(0x7f95cc1fa644, 4, 0) ------
   23 | t20 = Add64(t10,0xfffffffffffffff0)
   24 | t22 = LDle:I64(t20)
   25 | PUT(rsi) = t22
   26 | PUT(rip) = 0x00007f95cc1fa648
   27 | ------ IMark(0x7f95cc1fa648, 4, 0) ------
   28 | t23 = Add64(t10,0xfffffffffffffff8)
   29 | t25 = LDle:I64(t23)
   30 | PUT(rax) = t25
   31 | ------ IMark(0x7f95cc1fa64c, 3, 0) ------
   32 | PUT(r8) = t11
   33 | ------ IMark(0x7f95cc1fa64f, 3, 0) ------
   34 | PUT(rdi) = t25
   35 | PUT(rip) = 0x00007f95cc1fa652
   36 | ------ IMark(0x7f95cc1fa652, 5, 0) ------
   37 | t29 = GET:I64(rsp)
   38 | t28 = Sub64(t29,0x0000000000000008)
   39 | PUT(rsp) = t28
   40 | STle(t28) = 0x00007f95cc1fa657
   41 | t30 = Sub64(t28,0x0000000000000080)
   42 | ====== AbiHint(0xt30, 128, 0x00007f95cc1fa65a) ======
   NEXT: PUT(rip) = 0x00007f95cc1fa65a; Ijk_Call
}
0x7f95cc1fa637:	mov	qword ptr [rax], rdx
0x7f95cc1fa63a:	mov	rdi, qword ptr [rbp - 0x20]
0x7f95cc1fa63e:	mov	ecx, dword ptr [rbp - 0x18]
0x7f95cc1fa641:	mov	edx, dword ptr [rbp - 0x14]
0x7f95cc1fa644:	mov	rsi, qword ptr [rbp - 0x10]
0x7f95cc1fa648:	mov	rax, qword ptr [rbp - 8]
0x7f95cc1fa64c:	mov	r8, rdi
0x7f95cc1fa64f:	mov	rdi, rax
0x7f95cc1fa652:	call	0x7f95cc1fa65a
-----end dump state-----
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x5563806ea640
maximum memory range     [  0x5563806ea640  ,  0x5563806ea698  ]
 
contains pointers:      
   No pointers     
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x58
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj87_88_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0008030
maximum memory range     [  0xc0008030  ,  0xc0008730  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0008930
maximum memory range     [  0xc0008730  ,  0xc0008e30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0008930_101_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0008e30
maximum memory range     [  0xc0008e30  ,  0xc0009530  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0009730
maximum memory range     [  0xc0009530  ,  0xc0009c30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0009730_129_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_5
(possible) base address  0xc0009e30
maximum memory range     [  0xc0009c30  ,  0xc000a330  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ----------
<BV8 mem_c0009e30_232_8{UNINITIALIZED}>  0x0,0x4d00

****************************************************************************************************
object:                  OBJ_6
(possible) base address  0xc000a530
maximum memory range     [  0xc000a330  ,  0xc000aa30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000a530_284_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_7
(possible) base address  0xc000ac30
maximum memory range     [  0xc000aa30  ,  0xc000b130  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000ac30_300_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_8
(possible) base address  0xc000b330
maximum memory range     [  0xc000b130  ,  0xc000b830  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000b330_336_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_9
(possible) base address  0xc000b830
maximum memory range     [  0xc000b830  ,  0xc000bf30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_10
(possible) base address  0xc000c130
maximum memory range     [  0xc000bf30  ,  0xc000c630  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c130_2014_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_11
(possible) base address  0xc000c830
maximum memory range     [  0xc000c630  ,  0xc000cd30  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_12       0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c830_2161_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_12
(possible) base address  0xc000cf30
maximum memory range     [  0xc000cd30  ,  0xc000d430  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000cf30_2255_8{UNINITIALIZED}>  0x0
<BV8 mem_c000cf31_2256_8{UNINITIALIZED}>  0x1
<BV8 mem_c000cf32_2257_8{UNINITIALIZED}>  0x2
<BV8 mem_c000cf33_2258_8{UNINITIALIZED}>  0x3

****************************************************************************************************
object:                  OBJ_13
(possible) base address  0xc000d430
maximum memory range     [  0xc000d430  ,  0xc000db30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_14
(possible) base address  0xc000dd38
maximum memory range     [  0xc000db30  ,  0xc000e230  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000dd38_3046_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_15
(possible) base address  0xc000e430
maximum memory range     [  0xc000e230  ,  0xc000e930  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000e430_3098_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_16
(possible) base address  0xc000e930
maximum memory range     [  0xc000e930  ,  0xc000f030  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_17
(possible) base address  0xc000f230
maximum memory range     [  0xc000f030  ,  0xc000f730  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000f230_4129_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_18
(possible) base address  0xc000f730
maximum memory range     [  0xc000f730  ,  0xc000fe30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_19
(possible) base address  0xc000fe30
maximum memory range     [  0xc000fe30  ,  0xc0010530  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_20
(possible) base address  0xc0010730
maximum memory range     [  0xc0010530  ,  0xc0010c30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0010730_4828_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_21
(possible) base address  0xc0010e30
maximum memory range     [  0xc0010c30  ,  0xc0011330  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0010e30_4959_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_22
(possible) base address  0xc0011530
maximum memory range     [  0xc0011330  ,  0xc0011a30  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_26       0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0011530_5531_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_23
(possible) base address  0xc0011c30
maximum memory range     [  0xc0011a30  ,  0xc0012130  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0011c30_5688_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_24
(possible) base address  0xc0012130
maximum memory range     [  0xc0012130  ,  0xc0012830  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_25
(possible) base address  0xc0012a30
maximum memory range     [  0xc0012830  ,  0xc0012f30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0012a30_7015_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_26
(possible) base address  0xc0013130
maximum memory range     [  0xc0012f30  ,  0xc0013630  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0013140_7108_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_27
(possible) base address  0xc0013830
maximum memory range     [  0xc0013630  ,  0xc0013d30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0013830_7166_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_28
(possible) base address  0xc0013f40
maximum memory range     [  0xc0013d30  ,  0xc0014430  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0013f40_7782_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_29
(possible) base address  0xc0014630
maximum memory range     [  0xc0014430  ,  0xc0014b30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0014630_7609_8{UNINITIALIZED}>  0x0

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                                      address
------------------------------------------------------------  ---------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__89_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__93_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__97_64{UNINITIALIZED}>
<BV8 mem_c0008230_98_8{UNINITIALIZED}>
<BV56 mem_c0008231_99_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__100_64{UNINITIALIZED}>
<BV56 mem_c0008931_102_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__103_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__104_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__105_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__106_64{UNINITIALIZED}>
<BV8 mem_c0009030_108_8{UNINITIALIZED}>
<BV56 mem_c0009031_109_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__116_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__117_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__121_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__125_64{UNINITIALIZED}>
<BV56 mem_c0009731_130_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__172_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__176_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__181_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__212_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__228_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__234_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__273_64{UNINITIALIZED}>
<BV56 mem_c000a531_285_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__297_64{UNINITIALIZED}>
<BV56 mem_c000ac31_301_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__328_64{UNINITIALIZED}>
<BV56 mem_c000b331_337_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__569_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__593_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1707_64{UNINITIALIZED}>
<BV8 mem_c000ba30_1755_8{UNINITIALIZED}>
<BV56 mem_c000ba31_1756_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1997_64{UNINITIALIZED}>
<BV56 mem_c000c131_2015_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2110_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2137_64{UNINITIALIZED}>
<BV56 mem_c000c831_2162_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2201_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2231_64{UNINITIALIZED}>
<BV64 reg_cc_ndep_2259_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2365_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2451_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2483_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2792_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2825_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2962_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3035_64{UNINITIALIZED}>
<BV56 mem_c000dd39_3047_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3084_64{UNINITIALIZED}>
<BV24 mem_c000e431_3099_24{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3219_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3282_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3385_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3401_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3426_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3453_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3515_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3546_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3560_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3589_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3666_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3846_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3945_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4009_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4062_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4123_64{UNINITIALIZED}>
<BV56 mem_c000f231_4130_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4140_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4160_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4169_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4325_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4378_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4427_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4443_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4452_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4511_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4604_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4626_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4672_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4693_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4728_64{UNINITIALIZED}>
<BV8 mem_c0010030_4733_8{UNINITIALIZED}>
<BV56 mem_c0010031_4734_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4803_64{UNINITIALIZED}>
<BV56 mem_c0010731_4829_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4897_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4930_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4934_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4953_64{UNINITIALIZED}>
<BV56 mem_c0010e31_4960_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4974_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4983_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4987_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5069_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5118_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5133_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5149_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5355_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5472_64{UNINITIALIZED}>
<BV56 mem_c0011531_5532_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5545_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5639_64{UNINITIALIZED}>
<BV56 mem_c0011c31_5689_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5840_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5927_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5959_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5995_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6061_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6091_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6153_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6183_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6269_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6285_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6361_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6412_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6448_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6547_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6750_64{UNINITIALIZED}>
<BV8 mem_c0012330_6775_8{UNINITIALIZED}>
<BV56 mem_c0012331_6776_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7013_64{UNINITIALIZED}>
<BV56 mem_c0012a31_7016_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7027_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7057_64{UNINITIALIZED}>
<BV24 mem_c0013141_7109_24{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7159_64{UNINITIALIZED}>
<BV56 mem_c0013831_7167_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7199_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7221_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7340_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7438_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7457_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7594_64{UNINITIALIZED}>
<BV56 mem_c0014631_7610_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7636_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7680_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7704_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7715_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7747_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7762_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7777_64{UNINITIALIZED}>
<BV56 mem_c0013f41_7783_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7819_64{UNINITIALIZED}>

****************************************************************************************************
This is a write primitive
You have full control of what and where to write
It happens at:  140281351480887
Write  <BV64 0x8>  bytes to  <BV64 mem_c0013f41_7783_56{UNINITIALIZED} .. mem_c0013f40_7782_8{UNINITIALIZED}>
with expression : <BV64 unconstrained_ret_depth_limit__7819_64{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f95cc1fa612
0x7f95cc1fa612:	push	rbp
0x7f95cc1fa613:	mov	rbp, rsp
0x7f95cc1fa616:	sub	rsp, 0x20
0x7f95cc1fa61a:	mov	qword ptr [rbp - 8], rdi
0x7f95cc1fa61e:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc1fa622:	mov	dword ptr [rbp - 0x14], edx
0x7f95cc1fa625:	mov	dword ptr [rbp - 0x18], ecx
0x7f95cc1fa628:	mov	qword ptr [rbp - 0x20], r8
0x7f95cc1fa62c:	mov	rax, qword ptr [rbp - 8]
0x7f95cc1fa630:	mov	rdx, qword ptr [rbp - 0x20]
0x7f95cc1fa634:	mov	rdx, qword ptr [rdx]
0x7f95cc1fa637:	mov	qword ptr [rax], rdx
0x7f95cc1fa63a:	mov	rdi, qword ptr [rbp - 0x20]
0x7f95cc1fa63e:	mov	ecx, dword ptr [rbp - 0x18]
0x7f95cc1fa641:	mov	edx, dword ptr [rbp - 0x14]
0x7f95cc1fa644:	mov	rsi, qword ptr [rbp - 0x10]
0x7f95cc1fa648:	mov	rax, qword ptr [rbp - 8]
0x7f95cc1fa64c:	mov	r8, rdi
0x7f95cc1fa64f:	mov	rdi, rax
0x7f95cc1fa652:	call	0x7f95cc1fa65a
----------------------------------------------------------------------------------------------------
At  0x7f95cc99d664
0x7f95cc99d664:	push	rbp
0x7f95cc99d665:	mov	rbp, rsp
0x7f95cc99d668:	sub	rsp, 0x60
0x7f95cc99d66c:	mov	qword ptr [rbp - 0x58], rdi
0x7f95cc99d670:	mov	dword ptr [rbp - 0x5c], esi
0x7f95cc99d673:	mov	dword ptr [rbp - 0x60], edx
0x7f95cc99d676:	mov	rax, qword ptr fs:[0x28]
0x7f95cc99d67f:	mov	qword ptr [rbp - 8], rax
0x7f95cc99d683:	xor	eax, eax
0x7f95cc99d685:	lea	r9, [rbp - 0x30]
0x7f95cc99d689:	lea	r8, [rbp - 0x38]
0x7f95cc99d68d:	lea	rcx, [rbp - 0x40]
0x7f95cc99d691:	mov	edx, dword ptr [rbp - 0x60]
0x7f95cc99d694:	mov	esi, dword ptr [rbp - 0x5c]
0x7f95cc99d697:	mov	rax, qword ptr [rbp - 0x58]
0x7f95cc99d69b:	sub	rsp, 8
0x7f95cc99d69f:	lea	rdi, [rbp - 0x28]
0x7f95cc99d6a3:	push	rdi
0x7f95cc99d6a4:	mov	rdi, rax
0x7f95cc99d6a7:	call	0x7f95cc9bd2cc
----------------------------------------------------------------------------------------------------
At  0x7f95cc79b254
0x7f95cc79b254:	push	rbp
0x7f95cc79b255:	mov	rbp, rsp
0x7f95cc79b258:	push	rbx
0x7f95cc79b259:	sub	rsp, 0xb8
0x7f95cc79b260:	mov	qword ptr [rbp - 0xa8], rdi
0x7f95cc79b267:	mov	dword ptr [rbp - 0xac], esi
0x7f95cc79b26d:	mov	dword ptr [rbp - 0xb0], edx
0x7f95cc79b273:	mov	qword ptr [rbp - 0xb8], rcx
0x7f95cc79b27a:	mov	qword ptr [rbp - 0xc0], r8
0x7f95cc79b281:	mov	rax, qword ptr fs:[0x28]
0x7f95cc79b28a:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc79b28e:	xor	eax, eax
0x7f95cc79b290:	lea	rax, [rbp - 0xb8]
0x7f95cc79b297:	mov	rdi, rax
0x7f95cc79b29a:	call	0x7f95cc203a3a
----------------------------------------------------------------------------------------------------
At  0x7f95cc7d8248
0x7f95cc7d8248:	push	rbp
0x7f95cc7d8249:	mov	rbp, rsp
0x7f95cc7d824c:	push	r12
0x7f95cc7d824e:	push	rbx
0x7f95cc7d824f:	sub	rsp, 0x90
0x7f95cc7d8256:	mov	qword ptr [rbp - 0x88], rdi
0x7f95cc7d825d:	mov	qword ptr [rbp - 0x90], rsi
0x7f95cc7d8264:	mov	dword ptr [rbp - 0x94], edx
0x7f95cc7d826a:	mov	dword ptr [rbp - 0x98], ecx
0x7f95cc7d8270:	mov	dword ptr [rbp - 0x9c], r8d
0x7f95cc7d8277:	mov	rax, qword ptr fs:[0x28]
0x7f95cc7d8280:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc7d8284:	xor	eax, eax
0x7f95cc7d8286:	lea	rax, [rbp - 0x90]
0x7f95cc7d828d:	mov	rdi, rax
0x7f95cc7d8290:	call	0x7f95cc203a20
----------------------------------------------------------------------------------------------------
At  0x7f95cc7d8a2f
0x7f95cc7d8a2f:	push	rbp
0x7f95cc7d8a30:	mov	rbp, rsp
0x7f95cc7d8a33:	push	rbx
0x7f95cc7d8a34:	sub	rsp, 0xc8
0x7f95cc7d8a3b:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc7d8a42:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc7d8a49:	mov	qword ptr [rbp - 0xc8], rdx
0x7f95cc7d8a50:	mov	dword ptr [rbp - 0xcc], ecx
0x7f95cc7d8a56:	mov	dword ptr [rbp - 0xd0], r8d
0x7f95cc7d8a5d:	mov	rax, qword ptr fs:[0x28]
0x7f95cc7d8a66:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc7d8a6a:	xor	eax, eax
0x7f95cc7d8a6c:	lea	rax, [rbp - 0xc8]
0x7f95cc7d8a73:	mov	rdi, rax
0x7f95cc7d8a76:	call	0x7f95c6822634
----------------------------------------------------------------------------------------------------
At  0x7f95cc25d2ee
0x7f95cc25d2ee:	push	rbp
0x7f95cc25d2ef:	mov	rbp, rsp
0x7f95cc25d2f2:	sub	rsp, 0x20
0x7f95cc25d2f6:	mov	qword ptr [rbp - 8], rdi
0x7f95cc25d2fa:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc25d2fe:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc25d302:	mov	dword ptr [rbp - 0x1c], ecx
0x7f95cc25d305:	mov	dword ptr [rbp - 0x20], r8d
0x7f95cc25d309:	mov	edi, dword ptr [rbp - 0x20]
0x7f95cc25d30c:	mov	ecx, dword ptr [rbp - 0x1c]
0x7f95cc25d30f:	mov	rdx, qword ptr [rbp - 0x18]
0x7f95cc25d313:	mov	rsi, qword ptr [rbp - 0x10]
0x7f95cc25d317:	mov	rax, qword ptr [rbp - 8]
0x7f95cc25d31b:	mov	r8d, edi
0x7f95cc25d31e:	mov	rdi, rax
0x7f95cc25d321:	call	0x7f95cc7d8a2f
----------------------------------------------------------------------------------------------------
At  0x7f95cc2a612e
0x7f95cc2a612e:	push	rbp
0x7f95cc2a612f:	mov	rbp, rsp
0x7f95cc2a6132:	sub	rsp, 0x30
0x7f95cc2a6136:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc2a613a:	mov	qword ptr [rbp - 0x20], rsi
0x7f95cc2a613e:	mov	qword ptr [rbp - 0x28], rdx
0x7f95cc2a6142:	mov	dword ptr [rbp - 0x2c], ecx
0x7f95cc2a6145:	mov	rax, qword ptr [rbp - 0x20]
0x7f95cc2a6149:	mov	rdi, rax
0x7f95cc2a614c:	call	0x7f95cc26d7d7
----------------------------------------------------------------------------------------------------
At  0x7f95cc33bdbb
0x7f95cc33bdbb:	push	rbp
0x7f95cc33bdbc:	mov	rbp, rsp
0x7f95cc33bdbf:	sub	rsp, 0x30
0x7f95cc33bdc3:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc33bdc7:	mov	qword ptr [rbp - 0x20], rsi
0x7f95cc33bdcb:	mov	dword ptr [rbp - 0x24], edx
0x7f95cc33bdce:	mov	ecx, dword ptr [rbp - 0x24]
0x7f95cc33bdd1:	mov	rdx, qword ptr [rbp - 0x20]
0x7f95cc33bdd5:	mov	rax, qword ptr [rbp - 0x18]
0x7f95cc33bdd9:	lea	rsi, [rip + 0x4e6d6c0]
0x7f95cc33bde0:	mov	rdi, rax
0x7f95cc33bde3:	call	0x7f95cc2a612e
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d5261
0x7f95cc2d5261:	push	rbp
0x7f95cc2d5262:	mov	rbp, rsp
0x7f95cc2d5265:	push	rbx
0x7f95cc2d5266:	sub	rsp, 0xc8
0x7f95cc2d526d:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc2d5274:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc2d527b:	mov	eax, ecx
0x7f95cc2d527d:	mov	byte ptr [rbp - 0xc4], dl
0x7f95cc2d5283:	mov	byte ptr [rbp - 0xc8], al
0x7f95cc2d5289:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d5292:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d5296:	xor	eax, eax
0x7f95cc2d5298:	lea	rdx, [rbp - 0xb8]
0x7f95cc2d529f:	lea	rax, [rbp - 0xa0]
0x7f95cc2d52a6:	mov	rsi, rdx
0x7f95cc2d52a9:	mov	rdi, rax
0x7f95cc2d52ac:	call	0x7f95cc33b992
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d2642
0x7f95cc2d2642:	push	rbp
0x7f95cc2d2643:	mov	rbp, rsp
0x7f95cc2d2646:	push	rbx
0x7f95cc2d2647:	sub	rsp, 0x48
0x7f95cc2d264b:	mov	qword ptr [rbp - 0x48], rdi
0x7f95cc2d264f:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d2658:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d265c:	xor	eax, eax
0x7f95cc2d265e:	lea	rax, [rbp - 0x40]
0x7f95cc2d2662:	mov	esi, 0
0x7f95cc2d2667:	mov	rdi, rax
0x7f95cc2d266a:	call	0x7f95c77db232
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d63cc
0x7f95cc2d63cc:	push	rbp
0x7f95cc2d63cd:	mov	rbp, rsp
0x7f95cc2d63d0:	sub	rsp, 0x10
0x7f95cc2d63d4:	mov	qword ptr [rbp - 8], rdi
0x7f95cc2d63d8:	mov	rax, qword ptr [rbp - 8]
0x7f95cc2d63dc:	mov	rdi, rax
0x7f95cc2d63df:	call	0x7f95cc2d2642
----------------------------------------------------------------------------------------------------
At  0x7f95cc7070b7
0x7f95cc7070b7:	push	rbp
0x7f95cc7070b8:	mov	rbp, rsp
0x7f95cc7070bb:	sub	rsp, 0x20
0x7f95cc7070bf:	mov	qword ptr [rbp - 8], rdi
0x7f95cc7070c3:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc7070c7:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc7070cb:	call	0x7f95cc6f6da8
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5dfe
0x7f95c9be5dfe:	push	rbp
0x7f95c9be5dff:	mov	rbp, rsp
0x7f95c9be5e02:	push	rbx
0x7f95c9be5e03:	sub	rsp, 0xb8
0x7f95c9be5e0a:	mov	qword ptr [rbp - 0xa8], rdi
0x7f95c9be5e11:	mov	qword ptr [rbp - 0xb0], rsi
0x7f95c9be5e18:	mov	qword ptr [rbp - 0xb8], rdx
0x7f95c9be5e1f:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5e28:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5e2c:	xor	eax, eax
0x7f95c9be5e2e:	lea	rax, [rbp - 0x80]
0x7f95c9be5e32:	mov	rdi, rax
0x7f95c9be5e35:	call	0x7f95c9ddec62
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5306
0x7f95c9be5306:	push	rbp
0x7f95c9be5307:	mov	rbp, rsp
0x7f95c9be530a:	push	rbx
0x7f95c9be530b:	sub	rsp, 0x48
0x7f95c9be530f:	mov	qword ptr [rbp - 0x38], rdi
0x7f95c9be5313:	mov	qword ptr [rbp - 0x40], rsi
0x7f95c9be5317:	mov	qword ptr [rbp - 0x48], rdx
0x7f95c9be531b:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5324:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5328:	xor	eax, eax
0x7f95c9be532a:	cmp	qword ptr [rbp - 0x40], 0
0x7f95c9be532f:	jne	0x7f95c9be5358
----------------------------------------------------------------------------------------------------
At  0x7f95ca01e1f6
0x7f95ca01e1f6:	push	rbp
0x7f95ca01e1f7:	mov	rbp, rsp
0x7f95ca01e1fa:	sub	rsp, 0x40
0x7f95ca01e1fe:	mov	qword ptr [rbp - 0x38], rdi
0x7f95ca01e202:	mov	rax, qword ptr fs:[0x28]
0x7f95ca01e20b:	mov	qword ptr [rbp - 8], rax
0x7f95ca01e20f:	xor	eax, eax
0x7f95ca01e211:	mov	rax, qword ptr [rbp - 0x38]
0x7f95ca01e215:	add	rax, 0x30
0x7f95ca01e219:	mov	rdi, rax
0x7f95ca01e21c:	call	0x7f95c7803026
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:1] == 0x0>
1  <Bool 0x18 * (0x0 .. 0xfffffffe + 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:20]) == 0x17fe8>
2  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__93_64{UNINITIALIZED}[31:0][31:1] == 0x0>
3  <Bool unconstrained_ret_depth_limit__97_64{UNINITIALIZED} == 0xc0008230>
4  <Bool unconstrained_ret_depth_limit__100_64{UNINITIALIZED} == 0xc0008930>
5  <Bool mem_c0008931_102_56{UNINITIALIZED} == 0xfff90000000000>
6  <Bool mem_c0008930_101_8{UNINITIALIZED} == 0>
7  <Bool unconstrained_ret_depth_limit__106_64{UNINITIALIZED} == 0xc0009030>
8  <Bool unconstrained_ret_depth_limit__116_64{UNINITIALIZED}[7:0] == 0>
9  <Bool !(unconstrained_ret_depth_limit__121_64{UNINITIALIZED}[31:7] == 0x0) || !(unconstrained_ret_depth_limit__121_64{UNINITIALIZED}[6:0] <= 122)>
10  <Bool unconstrained_ret_depth_limit__125_64{UNINITIALIZED} == 0xc0009730>
11  <Bool unconstrained_ret_depth_limit__228_64{UNINITIALIZED} == 0xc0009e30>
12  <Bool unconstrained_ret_depth_limit__273_64{UNINITIALIZED} == 0xc000a530>
13  <Bool unconstrained_ret_depth_limit__297_64{UNINITIALIZED} == 0xc000ac30>
14  <Bool unconstrained_ret_depth_limit__328_64{UNINITIALIZED} == 0xc000b330>
15  <Bool !(mem_c000b330_336_8{UNINITIALIZED} == 0) || !(mem_c000b331_337_56{UNINITIALIZED} == 0x0)>
16  <Bool mem_c0009731_130_56{UNINITIALIZED}[38:0] == 0x0>
17  <Bool mem_c0009730_129_8{UNINITIALIZED}[7:1] == 0>
18  <Bool !(mem_c0009730_129_8{UNINITIALIZED} == 1)>
19  <Bool !(unconstrained_ret_depth_limit__593_64{UNINITIALIZED}[0:0] == 1) || !(unconstrained_ret_depth_limit__593_64{UNINITIALIZED}[7:1] == 0)>
20  <Bool unconstrained_ret_depth_limit__1707_64{UNINITIALIZED} == 0xc000ba30>
21  <Bool unconstrained_ret_depth_limit__1997_64{UNINITIALIZED} == 0xc000c130>
22  <Bool !(mem_c000c130_2014_8{UNINITIALIZED} == 0) || !(mem_c000c131_2015_56{UNINITIALIZED} == 0x0)>
23  <Bool unconstrained_ret_depth_limit__2137_64{UNINITIALIZED} == 0xc000c830>
24  <Bool mem_c000c831_2162_56{UNINITIALIZED} == 0xc000cf>
25  <Bool mem_c000c830_2161_8{UNINITIALIZED} == 48>
26  <Bool mem_c000cf32_2257_8{UNINITIALIZED} == 0>
27  <Bool mem_c000cf30_2255_8{UNINITIALIZED} == 0>
28  <Bool mem_c000cf31_2256_8{UNINITIALIZED} == 0>
29  <Bool mem_c000cf33_2258_8{UNINITIALIZED} == 0>
30  <Bool unconstrained_ret_depth_limit__2365_64{UNINITIALIZED} == 0xc000d630>
31  <Bool unconstrained_ret_depth_limit__3035_64{UNINITIALIZED} == 0xc000dd30>
32  <Bool unconstrained_ret_depth_limit__3084_64{UNINITIALIZED} == 0xc000e430>
33  <Bool unconstrained_ret_depth_limit__3401_64{UNINITIALIZED}[0:0] == 1>
34  <Bool unconstrained_ret_depth_limit__3401_64{UNINITIALIZED}[7:1] == 0>
35  <Bool unconstrained_ret_depth_limit__3426_64{UNINITIALIZED}[7:0] == 0>
36  <Bool unconstrained_ret_depth_limit__3453_64{UNINITIALIZED}[31:0] == 0x1>
37  <Bool unconstrained_ret_depth_limit__3846_64{UNINITIALIZED} == 0xc000eb30>
38  <Bool !(unconstrained_ret_depth_limit__212_64{UNINITIALIZED} == unconstrained_ret_depth_limit__3945_64{UNINITIALIZED})>
39  <Bool unconstrained_ret_depth_limit__4062_64{UNINITIALIZED}[7:0] == 0>
40  <Bool unconstrained_ret_depth_limit__4123_64{UNINITIALIZED} == 0xc000f230>
41  <Bool unconstrained_ret_depth_limit__4140_64{UNINITIALIZED} == 0xc000f930>
42  <Bool !(mem_c000f230_4129_8{UNINITIALIZED} == 0) || !(mem_c000f231_4130_56{UNINITIALIZED} == 0x0)>
43  <Bool unconstrained_ret_depth_limit__4325_64{UNINITIALIZED}[0:0] == 1>
44  <Bool unconstrained_ret_depth_limit__4325_64{UNINITIALIZED}[7:1] == 0>
45  <Bool unconstrained_ret_depth_limit__4511_64{UNINITIALIZED}[7:0] == 0>
46  <Bool unconstrained_ret_depth_limit__4728_64{UNINITIALIZED} == 0xc0010030>
47  <Bool unconstrained_ret_depth_limit__4803_64{UNINITIALIZED} == 0xc0010730>
48  <Bool !(mem_c0010730_4828_8{UNINITIALIZED}[7:1] == 0) || !(mem_c0010731_4829_56{UNINITIALIZED} == 0x0)>
49  <Bool !(unconstrained_ret_depth_limit__4897_64{UNINITIALIZED}[0:0] == 1) || !(unconstrained_ret_depth_limit__4897_64{UNINITIALIZED}[7:1] == 0)>
50  <Bool unconstrained_ret_depth_limit__4953_64{UNINITIALIZED} == 0xc0010e30>
51  <Bool unconstrained_ret_depth_limit__4987_64{UNINITIALIZED}[7:0] == 0>
52  <Bool !(unconstrained_ret_depth_limit__5355_64{UNINITIALIZED}[7:0] == 0)>
53  <Bool unconstrained_ret_depth_limit__5472_64{UNINITIALIZED} == 0xc0011530>
54  <Bool unconstrained_ret_depth_limit__5545_64{UNINITIALIZED}[7:0] == 0>
55  <Bool mem_c0011530_5531_8{UNINITIALIZED} == 48>
56  <Bool mem_c0011531_5532_56{UNINITIALIZED} == 0xc00131>
57  <Bool unconstrained_ret_depth_limit__5639_64{UNINITIALIZED} == 0xc0011c30>
58  <Bool unconstrained_ret_depth_limit__4452_64{UNINITIALIZED} == unconstrained_ret_depth_limit__6183_64{UNINITIALIZED}>
59  <Bool unconstrained_ret_depth_limit__6285_64{UNINITIALIZED}[0:0] == 1>
60  <Bool unconstrained_ret_depth_limit__6285_64{UNINITIALIZED}[7:1] == 0>
61  <Bool unconstrained_ret_depth_limit__6547_64{UNINITIALIZED}[7:0] == 0>
62  <Bool unconstrained_ret_depth_limit__6750_64{UNINITIALIZED} == 0xc0012330>
63  <Bool unconstrained_ret_depth_limit__7013_64{UNINITIALIZED} == 0xc0012a30>
64  <Bool !(unconstrained_ret_depth_limit__7027_64{UNINITIALIZED}[7:0] == 0)>
65  <Bool !(unconstrained_ret_depth_limit__7057_64{UNINITIALIZED}[7:0] == 0)>
66  <Bool True>
67  <Bool unconstrained_ret_depth_limit__7159_64{UNINITIALIZED} == 0xc0013830>
68  <Bool !(mem_c0013830_7166_8{UNINITIALIZED} == 0) || !(mem_c0013831_7167_56{UNINITIALIZED} == 0x0)>
69  <Bool unconstrained_ret_depth_limit__7199_64{UNINITIALIZED} == 0xc0013f30>
70  <Bool unconstrained_ret_depth_limit__7594_64{UNINITIALIZED} == 0xc0014630>
71  <Bool !(unconstrained_ret_depth_limit__7636_64{UNINITIALIZED}[7:0] == 0)>
72  <Bool unconstrained_ret_depth_limit__7680_64{UNINITIALIZED}[7:0] == 0>
73  <Bool !(unconstrained_ret_depth_limit__7747_64{UNINITIALIZED}[31:0] == 0x0)>
74  <Bool unconstrained_ret_depth_limit__7747_64{UNINITIALIZED}[31:0] <= unconstrained_ret_depth_limit__7715_64{UNINITIALIZED}[31:0]>
75  <Bool unconstrained_ret_depth_limit__7762_64{UNINITIALIZED} >= unconstrained_ret_depth_limit__7777_64{UNINITIALIZED} + (0x0 .. unconstrained_ret_depth_limit__7747_64{UNINITIALIZED}[31:0] .. 0)>
76  <Bool (mem_c0013f41_7783_56{UNINITIALIZED} .. mem_c0013f40_7782_8{UNINITIALIZED}) < (mem_c0013f41_7783_56{UNINITIALIZED} .. mem_c0013f40_7782_8{UNINITIALIZED}) + (0x0 .. unconstrained_ret_depth_limit__7715_64{UNINITIALIZED}[31:0] + 0xffffffff * unconstrained_ret_depth_limit__7747_64{UNINITIALIZED}[31:0] .. 0)>

****************************************************************************************************
Variables used as return values of symbolic calls: 

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        

****************************************************************************************************
Some control hijacks: 
Control hijack  0
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 mem_c0012ae9_3850_56{UNINITIALIZED} .. mem_c0012ae8_3849_8{UNINITIALIZED}>  r8: <BV64 0x7ff0000>
rbx: <BV64 0x1>  r9: <BV64 0x55637e04b2b8>
rcx: <BV64 mem_c0015ea9_3911_56{UNINITIALIZED} .. mem_c0015ea8_3910_8{UNINITIALIZED}>  r10: <BV64 0x7ffcc7d89ad0>
rdx: <BV64 0x55637ddbc1b0>  r11: <BV64 0x1>
rsi: <BV64 mem_c0015ea9_3911_56{UNINITIALIZED} .. mem_c0015ea8_3910_8{UNINITIALIZED}>  r12: <BV64 0x5563803a4af0>
rdi: <BV64 0x55637ddbc1b0>  r13: <BV64 0x55637dc71c40>
rsp: <BV64 0x7ffcc7d89568>  r14: <BV64 0x7f95c686eac4>
rbp: <BV64 0x7ffcc7d895a0>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x5563806ea640
maximum memory range     [  0x5563806ea640  ,  0x5563806ea698  ]
 
contains pointers:      
   No pointers     
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x58
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj87_88_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0008030
maximum memory range     [  0xc0008030  ,  0xc0008730  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0008930
maximum memory range     [  0xc0008730  ,  0xc0008e30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0008930_101_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0008e30
maximum memory range     [  0xc0008e30  ,  0xc0009530  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0009730
maximum memory range     [  0xc0009530  ,  0xc0009c30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0009730_126_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_5
(possible) base address  0xc0009e30
maximum memory range     [  0xc0009c30  ,  0xc000a330  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ------------------
<BV8 mem_c0009e30_222_8{UNINITIALIZED}>  0x0,0x7ffc07d7f920

****************************************************************************************************
object:                  OBJ_6
(possible) base address  0xc000a530
maximum memory range     [  0xc000a330  ,  0xc000aa30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000a530_268_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_7
(possible) base address  0xc000ac30
maximum memory range     [  0xc000aa30  ,  0xc000b130  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000ac30_286_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_8
(possible) base address  0xc000b330
maximum memory range     [  0xc000b130  ,  0xc000b830  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000b330_321_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_9
(possible) base address  0xc000b830
maximum memory range     [  0xc000b830  ,  0xc000bf30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_10
(possible) base address  0xc000c130
maximum memory range     [  0xc000bf30  ,  0xc000c630  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c130_1934_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_11
(possible) base address  0xc000c830
maximum memory range     [  0xc000c630  ,  0xc000cd30  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_12       0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c830_2060_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_12
(possible) base address  0xc000cf30
maximum memory range     [  0xc000cd30  ,  0xc000d430  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000cf30_2138_8{UNINITIALIZED}>  0x0
<BV8 mem_c000cf31_2139_8{UNINITIALIZED}>  0x1
<BV8 mem_c000cf32_2140_8{UNINITIALIZED}>  0x2
<BV8 mem_c000cf33_2141_8{UNINITIALIZED}>  0x3

****************************************************************************************************
object:                  OBJ_13
(possible) base address  0xc000d430
maximum memory range     [  0xc000d430  ,  0xc000db30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_14
(possible) base address  0xc000dd38
maximum memory range     [  0xc000db30  ,  0xc000e230  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000dd38_3176_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_15
(possible) base address  0xc000e430
maximum memory range     [  0xc000e230  ,  0xc000e930  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000e430_3233_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_16
(possible) base address  0xc000eb30
maximum memory range     [  0xc000e930  ,  0xc000f030  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000eb30_3720_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_17
(possible) base address  0xc000f230
maximum memory range     [  0xc000f030  ,  0xc000f730  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000f230_3754_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_18
(possible) base address  0xc000f930
maximum memory range     [  0xc000f730  ,  0xc000fe30  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_19       0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000f930_3831_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_19
(possible) base address  0xc0010030
maximum memory range     [  0xc000fe30  ,  0xc0012ae8  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_20
(possible) base address  0xc0012ae8
maximum memory range     [  0xc0012ae8  ,  0xc00131e8  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x200     OBJ_21       0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0012ae8_3849_8{UNINITIALIZED}>  0x0
<BV8 mem_c0012ce8_3877_8{UNINITIALIZED}>  0x200

****************************************************************************************************
object:                  OBJ_21
(possible) base address  0xc00133e8
maximum memory range     [  0xc00131e8  ,  0xc0015ea8  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                                      address
------------------------------------------------------------  ----------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__89_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__93_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__97_64{UNINITIALIZED}>
<BV8 mem_c0008230_98_8{UNINITIALIZED}>
<BV56 mem_c0008231_99_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__100_64{UNINITIALIZED}>
<BV56 mem_c0008931_102_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__103_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__104_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__105_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__106_64{UNINITIALIZED}>
<BV8 mem_c0009030_108_8{UNINITIALIZED}>
<BV56 mem_c0009031_109_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__116_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__117_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__121_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__123_64{UNINITIALIZED}>
<BV56 mem_c0009731_127_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__167_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__169_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__175_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__207_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__221_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__225_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__257_64{UNINITIALIZED}>
<BV56 mem_c000a531_269_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__278_64{UNINITIALIZED}>
<BV56 mem_c000ac31_287_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__313_64{UNINITIALIZED}>
<BV56 mem_c000b331_322_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__526_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__556_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1572_64{UNINITIALIZED}>
<BV8 mem_c000ba30_1621_8{UNINITIALIZED}>
<BV56 mem_c000ba31_1622_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1913_64{UNINITIALIZED}>
<BV56 mem_c000c131_1935_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2004_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2038_64{UNINITIALIZED}>
<BV56 mem_c000c831_2061_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2087_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2124_64{UNINITIALIZED}>
<BV64 reg_cc_ndep_2142_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2268_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2327_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2423_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2469_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2500_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2535_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2568_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2598_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2646_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2677_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2950_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2987_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3126_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3169_64{UNINITIALIZED}>
<BV56 mem_c000dd39_3177_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3220_64{UNINITIALIZED}>
<BV24 mem_c000e431_3234_24{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3337_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3380_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3487_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3511_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3558_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3652_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3713_64{UNINITIALIZED}>
<BV56 mem_c000eb31_3721_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3746_64{UNINITIALIZED}>
<BV56 mem_c000f231_3755_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3774_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3819_64{UNINITIALIZED}>
<BV56 mem_c000f931_3832_56{UNINITIALIZED}>
<BV56 mem_c0012ae9_3850_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3869_64{UNINITIALIZED}>
<BV56 mem_c0012ce9_3878_56{UNINITIALIZED}>
<BV8 mem_c0015ea8_3910_8{UNINITIALIZED}>                      0xc0015ea8
<BV56 mem_c0015ea9_3911_56{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are calling a function with controlled address
It happens at:  140281356819115
Calling  <BV64 mem_c0012ae9_3850_56{UNINITIALIZED} .. mem_c0012ae8_3849_8{UNINITIALIZED}>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f95cc7119e4
0x7f95cc7119e4:	push	rbp
0x7f95cc7119e5:	mov	rbp, rsp
0x7f95cc7119e8:	sub	rsp, 0x30
0x7f95cc7119ec:	mov	qword ptr [rbp - 0x28], rdi
0x7f95cc7119f0:	mov	rax, qword ptr fs:[0x28]
0x7f95cc7119f9:	mov	qword ptr [rbp - 8], rax
0x7f95cc7119fd:	xor	eax, eax
0x7f95cc7119ff:	mov	rax, qword ptr [rbp - 0x28]
0x7f95cc711a03:	mov	rdi, rax
0x7f95cc711a06:	call	0x7f95cc1c87c4
----------------------------------------------------------------------------------------------------
At  0x7f95cc9d23da
0x7f95cc9d23da:	push	rbp
0x7f95cc9d23db:	mov	rbp, rsp
0x7f95cc9d23de:	push	r13
0x7f95cc9d23e0:	push	r12
0x7f95cc9d23e2:	push	rbx
0x7f95cc9d23e3:	sub	rsp, 0x1c8
0x7f95cc9d23ea:	mov	qword ptr [rbp - 0x1c8], rdi
0x7f95cc9d23f1:	mov	qword ptr [rbp - 0x1d0], rsi
0x7f95cc9d23f8:	mov	qword ptr [rbp - 0x1d8], rdx
0x7f95cc9d23ff:	mov	qword ptr [rbp - 0x1e0], rcx
0x7f95cc9d2406:	mov	rax, qword ptr fs:[0x28]
0x7f95cc9d240f:	mov	qword ptr [rbp - 0x28], rax
0x7f95cc9d2413:	xor	eax, eax
0x7f95cc9d2415:	cmp	qword ptr [rbp - 0x1e0], 0
0x7f95cc9d241d:	je	0x7f95cc9d243c
----------------------------------------------------------------------------------------------------
At  0x7f95cc7d8a2f
0x7f95cc7d8a2f:	push	rbp
0x7f95cc7d8a30:	mov	rbp, rsp
0x7f95cc7d8a33:	push	rbx
0x7f95cc7d8a34:	sub	rsp, 0xc8
0x7f95cc7d8a3b:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc7d8a42:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc7d8a49:	mov	qword ptr [rbp - 0xc8], rdx
0x7f95cc7d8a50:	mov	dword ptr [rbp - 0xcc], ecx
0x7f95cc7d8a56:	mov	dword ptr [rbp - 0xd0], r8d
0x7f95cc7d8a5d:	mov	rax, qword ptr fs:[0x28]
0x7f95cc7d8a66:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc7d8a6a:	xor	eax, eax
0x7f95cc7d8a6c:	lea	rax, [rbp - 0xc8]
0x7f95cc7d8a73:	mov	rdi, rax
0x7f95cc7d8a76:	call	0x7f95c6822634
----------------------------------------------------------------------------------------------------
At  0x7f95cc25d2ee
0x7f95cc25d2ee:	push	rbp
0x7f95cc25d2ef:	mov	rbp, rsp
0x7f95cc25d2f2:	sub	rsp, 0x20
0x7f95cc25d2f6:	mov	qword ptr [rbp - 8], rdi
0x7f95cc25d2fa:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc25d2fe:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc25d302:	mov	dword ptr [rbp - 0x1c], ecx
0x7f95cc25d305:	mov	dword ptr [rbp - 0x20], r8d
0x7f95cc25d309:	mov	edi, dword ptr [rbp - 0x20]
0x7f95cc25d30c:	mov	ecx, dword ptr [rbp - 0x1c]
0x7f95cc25d30f:	mov	rdx, qword ptr [rbp - 0x18]
0x7f95cc25d313:	mov	rsi, qword ptr [rbp - 0x10]
0x7f95cc25d317:	mov	rax, qword ptr [rbp - 8]
0x7f95cc25d31b:	mov	r8d, edi
0x7f95cc25d31e:	mov	rdi, rax
0x7f95cc25d321:	call	0x7f95cc7d8a2f
----------------------------------------------------------------------------------------------------
At  0x7f95cc2a612e
0x7f95cc2a612e:	push	rbp
0x7f95cc2a612f:	mov	rbp, rsp
0x7f95cc2a6132:	sub	rsp, 0x30
0x7f95cc2a6136:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc2a613a:	mov	qword ptr [rbp - 0x20], rsi
0x7f95cc2a613e:	mov	qword ptr [rbp - 0x28], rdx
0x7f95cc2a6142:	mov	dword ptr [rbp - 0x2c], ecx
0x7f95cc2a6145:	mov	rax, qword ptr [rbp - 0x20]
0x7f95cc2a6149:	mov	rdi, rax
0x7f95cc2a614c:	call	0x7f95cc26d7d7
----------------------------------------------------------------------------------------------------
At  0x7f95cc33bdbb
0x7f95cc33bdbb:	push	rbp
0x7f95cc33bdbc:	mov	rbp, rsp
0x7f95cc33bdbf:	sub	rsp, 0x30
0x7f95cc33bdc3:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc33bdc7:	mov	qword ptr [rbp - 0x20], rsi
0x7f95cc33bdcb:	mov	dword ptr [rbp - 0x24], edx
0x7f95cc33bdce:	mov	ecx, dword ptr [rbp - 0x24]
0x7f95cc33bdd1:	mov	rdx, qword ptr [rbp - 0x20]
0x7f95cc33bdd5:	mov	rax, qword ptr [rbp - 0x18]
0x7f95cc33bdd9:	lea	rsi, [rip + 0x4e6d6c0]
0x7f95cc33bde0:	mov	rdi, rax
0x7f95cc33bde3:	call	0x7f95cc2a612e
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d5261
0x7f95cc2d5261:	push	rbp
0x7f95cc2d5262:	mov	rbp, rsp
0x7f95cc2d5265:	push	rbx
0x7f95cc2d5266:	sub	rsp, 0xc8
0x7f95cc2d526d:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc2d5274:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc2d527b:	mov	eax, ecx
0x7f95cc2d527d:	mov	byte ptr [rbp - 0xc4], dl
0x7f95cc2d5283:	mov	byte ptr [rbp - 0xc8], al
0x7f95cc2d5289:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d5292:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d5296:	xor	eax, eax
0x7f95cc2d5298:	lea	rdx, [rbp - 0xb8]
0x7f95cc2d529f:	lea	rax, [rbp - 0xa0]
0x7f95cc2d52a6:	mov	rsi, rdx
0x7f95cc2d52a9:	mov	rdi, rax
0x7f95cc2d52ac:	call	0x7f95cc33b992
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d2642
0x7f95cc2d2642:	push	rbp
0x7f95cc2d2643:	mov	rbp, rsp
0x7f95cc2d2646:	push	rbx
0x7f95cc2d2647:	sub	rsp, 0x48
0x7f95cc2d264b:	mov	qword ptr [rbp - 0x48], rdi
0x7f95cc2d264f:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d2658:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d265c:	xor	eax, eax
0x7f95cc2d265e:	lea	rax, [rbp - 0x40]
0x7f95cc2d2662:	mov	esi, 0
0x7f95cc2d2667:	mov	rdi, rax
0x7f95cc2d266a:	call	0x7f95c77db232
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d63cc
0x7f95cc2d63cc:	push	rbp
0x7f95cc2d63cd:	mov	rbp, rsp
0x7f95cc2d63d0:	sub	rsp, 0x10
0x7f95cc2d63d4:	mov	qword ptr [rbp - 8], rdi
0x7f95cc2d63d8:	mov	rax, qword ptr [rbp - 8]
0x7f95cc2d63dc:	mov	rdi, rax
0x7f95cc2d63df:	call	0x7f95cc2d2642
----------------------------------------------------------------------------------------------------
At  0x7f95cc7070b7
0x7f95cc7070b7:	push	rbp
0x7f95cc7070b8:	mov	rbp, rsp
0x7f95cc7070bb:	sub	rsp, 0x20
0x7f95cc7070bf:	mov	qword ptr [rbp - 8], rdi
0x7f95cc7070c3:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc7070c7:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc7070cb:	call	0x7f95cc6f6da8
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5dfe
0x7f95c9be5dfe:	push	rbp
0x7f95c9be5dff:	mov	rbp, rsp
0x7f95c9be5e02:	push	rbx
0x7f95c9be5e03:	sub	rsp, 0xb8
0x7f95c9be5e0a:	mov	qword ptr [rbp - 0xa8], rdi
0x7f95c9be5e11:	mov	qword ptr [rbp - 0xb0], rsi
0x7f95c9be5e18:	mov	qword ptr [rbp - 0xb8], rdx
0x7f95c9be5e1f:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5e28:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5e2c:	xor	eax, eax
0x7f95c9be5e2e:	lea	rax, [rbp - 0x80]
0x7f95c9be5e32:	mov	rdi, rax
0x7f95c9be5e35:	call	0x7f95c9ddec62
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5306
0x7f95c9be5306:	push	rbp
0x7f95c9be5307:	mov	rbp, rsp
0x7f95c9be530a:	push	rbx
0x7f95c9be530b:	sub	rsp, 0x48
0x7f95c9be530f:	mov	qword ptr [rbp - 0x38], rdi
0x7f95c9be5313:	mov	qword ptr [rbp - 0x40], rsi
0x7f95c9be5317:	mov	qword ptr [rbp - 0x48], rdx
0x7f95c9be531b:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5324:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5328:	xor	eax, eax
0x7f95c9be532a:	cmp	qword ptr [rbp - 0x40], 0
0x7f95c9be532f:	jne	0x7f95c9be5358
----------------------------------------------------------------------------------------------------
At  0x7f95ca01e1f6
0x7f95ca01e1f6:	push	rbp
0x7f95ca01e1f7:	mov	rbp, rsp
0x7f95ca01e1fa:	sub	rsp, 0x40
0x7f95ca01e1fe:	mov	qword ptr [rbp - 0x38], rdi
0x7f95ca01e202:	mov	rax, qword ptr fs:[0x28]
0x7f95ca01e20b:	mov	qword ptr [rbp - 8], rax
0x7f95ca01e20f:	xor	eax, eax
0x7f95ca01e211:	mov	rax, qword ptr [rbp - 0x38]
0x7f95ca01e215:	add	rax, 0x30
0x7f95ca01e219:	mov	rdi, rax
0x7f95ca01e21c:	call	0x7f95c7803026
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:1] == 0x0>
1  <Bool 0x18 * (0x0 .. 0xfffffffe + 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:20]) == 0x17fe8>
2  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__93_64{UNINITIALIZED}[31:0][31:1] == 0x0>
3  <Bool unconstrained_ret_depth_limit__97_64{UNINITIALIZED} == 0xc0008230>
4  <Bool unconstrained_ret_depth_limit__100_64{UNINITIALIZED} == 0xc0008930>
5  <Bool mem_c0008931_102_56{UNINITIALIZED} == 0xfff90000000000>
6  <Bool mem_c0008930_101_8{UNINITIALIZED} == 0>
7  <Bool unconstrained_ret_depth_limit__106_64{UNINITIALIZED} == 0xc0009030>
8  <Bool unconstrained_ret_depth_limit__116_64{UNINITIALIZED}[7:0] == 0>
9  <Bool unconstrained_ret_depth_limit__121_64{UNINITIALIZED}[31:7] == 0x0>
10  <Bool unconstrained_ret_depth_limit__121_64{UNINITIALIZED}[6:0] <= 122>
11  <Bool unconstrained_ret_depth_limit__123_64{UNINITIALIZED} == 0xc0009730>
12  <Bool unconstrained_ret_depth_limit__221_64{UNINITIALIZED} == 0xc0009e30>
13  <Bool unconstrained_ret_depth_limit__257_64{UNINITIALIZED} == 0xc000a530>
14  <Bool unconstrained_ret_depth_limit__278_64{UNINITIALIZED} == 0xc000ac30>
15  <Bool unconstrained_ret_depth_limit__313_64{UNINITIALIZED} == 0xc000b330>
16  <Bool !(mem_c000b330_321_8{UNINITIALIZED} == 0) || !(mem_c000b331_322_56{UNINITIALIZED} == 0x0)>
17  <Bool mem_c0009731_127_56{UNINITIALIZED}[38:0] == 0x0>
18  <Bool mem_c0009730_126_8{UNINITIALIZED} == 1>
19  <Bool !(unconstrained_ret_depth_limit__556_64{UNINITIALIZED}[0:0] == 1) || !(unconstrained_ret_depth_limit__556_64{UNINITIALIZED}[7:1] == 0)>
20  <Bool unconstrained_ret_depth_limit__1572_64{UNINITIALIZED} == 0xc000ba30>
21  <Bool unconstrained_ret_depth_limit__1913_64{UNINITIALIZED} == 0xc000c130>
22  <Bool !(mem_c000c130_1934_8{UNINITIALIZED} == 0) || !(mem_c000c131_1935_56{UNINITIALIZED} == 0x0)>
23  <Bool unconstrained_ret_depth_limit__2038_64{UNINITIALIZED} == 0xc000c830>
24  <Bool mem_c000c830_2060_8{UNINITIALIZED} == 48>
25  <Bool mem_c000c831_2061_56{UNINITIALIZED} == 0xc000cf>
26  <Bool mem_c000cf32_2140_8{UNINITIALIZED} == 0>
27  <Bool mem_c000cf30_2138_8{UNINITIALIZED} == 0>
28  <Bool mem_c000cf31_2139_8{UNINITIALIZED} == 0>
29  <Bool mem_c000cf33_2141_8{UNINITIALIZED} == 0>
30  <Bool unconstrained_ret_depth_limit__2268_64{UNINITIALIZED} == 0x0>
31  <Bool unconstrained_ret_depth_limit__2327_64{UNINITIALIZED} == 0x0>
32  <Bool unconstrained_ret_depth_limit__2598_64{UNINITIALIZED} == 0xc000d630>
33  <Bool unconstrained_ret_depth_limit__3169_64{UNINITIALIZED} == 0xc000dd30>
34  <Bool unconstrained_ret_depth_limit__3220_64{UNINITIALIZED} == 0xc000e430>
35  <Bool !(unconstrained_ret_depth_limit__3511_64{UNINITIALIZED}[0:0] == 1) || !(unconstrained_ret_depth_limit__3511_64{UNINITIALIZED}[7:1] == 0)>
36  <Bool unconstrained_ret_depth_limit__3713_64{UNINITIALIZED} == 0xc000eb30>
37  <Bool mem_c000eb31_3721_56{UNINITIALIZED} == 0x0>
38  <Bool mem_c000eb30_3720_8{UNINITIALIZED} == 0>
39  <Bool unconstrained_ret_depth_limit__3746_64{UNINITIALIZED} == 0xc000f230>
40  <Bool unconstrained_ret_depth_limit__3819_64{UNINITIALIZED} == 0xc000f930>
41  <Bool mem_c000f931_3832_56{UNINITIALIZED} == 0xc00100>
42  <Bool mem_c000f930_3831_8{UNINITIALIZED} == 48>
43  <Bool !(mem_c0012ae8_3849_8{UNINITIALIZED} == 0) || !(mem_c0012ae9_3850_56{UNINITIALIZED} == 0x0)>
44  <Bool unconstrained_ret_depth_limit__3869_64{UNINITIALIZED} == 0xc0012ce8>
45  <Bool mem_c0012ce8_3877_8{UNINITIALIZED} == 232>
46  <Bool mem_c0012ce9_3878_56{UNINITIALIZED} == 0xc00133>

****************************************************************************************************
Variables used as return values of symbolic calls: 

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        

Control hijack  1
****************************************************************************************************
-----start dump state-----
**registers**
rax: <BV64 0x7f95cec09dcc + (symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:0] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[15:8] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[23:16] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[31:24])>  r8: <BV64 0x7f95d11a94a0>
rbx: <BV64 unconstrained_ret_depth_limit__7199_64{UNINITIALIZED}>  r9: <BV64 0x55637e04b2b8>
rcx: <BV64 0x0 .. mem_c0013f51_8088_56{UNINITIALIZED}[38:0] .. mem_c0013f50_8087_8{UNINITIALIZED}>  r10: <BV64 0x7ffcc7d89ad0>
rdx: <BV64 symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:7] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[7:0] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[15:8] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[23:16] .. symbolic_read_unconstrained_8356_32{UNINITIALIZED}[31:24]>  r11: <BV64 0x1>
rsi: <BV64 0x0>  r12: <BV64 0x5563805b3f40>
rdi: <BV64 0x7ffcc7d89818>  r13: <BV64 0x55637dc71c40>
rsp: <BV64 0x7ffcc7d89810>  r14: <BV64 0x7f95c686eac4>
rbp: <BV64 0x7ffcc7d89820>  r15: <BV64 0x0>
gs: <BV64 reg_gs_0_64{UNINITIALIZED}>
**instructions**
angr.errors.SimValueError:
****************************************************************************************************
object:                  OBJ_0
(possible) base address  0x5563806ea640
maximum memory range     [  0x5563806ea640  ,  0x5563806ea698  ]
 
contains pointers:      
   No pointers     
 
This is the UAF object, all bytes of it are symbolic variables
Object size:  0x58
contains variables:     
 <BV8 uaf_obj0_1_8>  ...  <BV8 uaf_obj87_88_8>

****************************************************************************************************
object:                  OBJ_1
(possible) base address  0xc0008030
maximum memory range     [  0xc0008030  ,  0xc0008730  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_2
(possible) base address  0xc0008930
maximum memory range     [  0xc0008730  ,  0xc0008e30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0008930_101_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_3
(possible) base address  0xc0008e30
maximum memory range     [  0xc0008e30  ,  0xc0009530  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_4
(possible) base address  0xc0009730
maximum memory range     [  0xc0009530  ,  0xc0009c30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c0009730_129_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_5
(possible) base address  0xc0009e30
maximum memory range     [  0xc0009c30  ,  0xc000a330  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ----------
<BV8 mem_c0009e30_232_8{UNINITIALIZED}>  0x0,0x4d00

****************************************************************************************************
object:                  OBJ_6
(possible) base address  0xc000a530
maximum memory range     [  0xc000a330  ,  0xc000aa30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000a530_284_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_7
(possible) base address  0xc000ac30
maximum memory range     [  0xc000aa30  ,  0xc000b130  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000ac30_300_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_8
(possible) base address  0xc000b330
maximum memory range     [  0xc000b130  ,  0xc000b830  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                 offsets
---------------------------------------  ---------
<BV8 mem_c000b330_336_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_9
(possible) base address  0xc000b830
maximum memory range     [  0xc000b830  ,  0xc000bf30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_10
(possible) base address  0xc000c130
maximum memory range     [  0xc000bf30  ,  0xc000c630  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c130_2014_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_11
(possible) base address  0xc000c830
maximum memory range     [  0xc000c630  ,  0xc000cd30  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_12       0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000c830_2161_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_12
(possible) base address  0xc000cf30
maximum memory range     [  0xc000cd30  ,  0xc000d430  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000cf30_2255_8{UNINITIALIZED}>  0x0
<BV8 mem_c000cf31_2256_8{UNINITIALIZED}>  0x1
<BV8 mem_c000cf32_2257_8{UNINITIALIZED}>  0x2
<BV8 mem_c000cf33_2258_8{UNINITIALIZED}>  0x3

****************************************************************************************************
object:                  OBJ_13
(possible) base address  0xc000d430
maximum memory range     [  0xc000d430  ,  0xc000db30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_14
(possible) base address  0xc000dd38
maximum memory range     [  0xc000db30  ,  0xc000e230  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000dd38_3046_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_15
(possible) base address  0xc000e430
maximum memory range     [  0xc000e230  ,  0xc000e930  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000e430_3098_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_16
(possible) base address  0xc000e930
maximum memory range     [  0xc000e930  ,  0xc000f030  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_17
(possible) base address  0xc000f230
maximum memory range     [  0xc000f030  ,  0xc000f730  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c000f230_4129_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_18
(possible) base address  0xc000f730
maximum memory range     [  0xc000f730  ,  0xc000fe30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_19
(possible) base address  0xc000fe30
maximum memory range     [  0xc000fe30  ,  0xc0010530  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_20
(possible) base address  0xc0010730
maximum memory range     [  0xc0010530  ,  0xc0010c30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0010730_4828_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_21
(possible) base address  0xc0010e30
maximum memory range     [  0xc0010c30  ,  0xc0011330  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0010e30_4959_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_22
(possible) base address  0xc0011530
maximum memory range     [  0xc0011330  ,  0xc0011a30  ]
 
contains pointers:      
offset    points to    offset in target
--------  -----------  ------------------
0x0       OBJ_26       0x0
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0011530_5531_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_23
(possible) base address  0xc0011c30
maximum memory range     [  0xc0011a30  ,  0xc0012130  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0011c30_5688_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_24
(possible) base address  0xc0012130
maximum memory range     [  0xc0012130  ,  0xc0012830  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_25
(possible) base address  0xc0012a30
maximum memory range     [  0xc0012830  ,  0xc0012f30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0012a30_7015_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_26
(possible) base address  0xc0013130
maximum memory range     [  0xc0012f30  ,  0xc0013630  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0013140_7108_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_27
(possible) base address  0xc0013830
maximum memory range     [  0xc0013630  ,  0xc0013d30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0013830_7166_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_28
(possible) base address  0xc0013f40
maximum memory range     [  0xc0013d30  ,  0xc0014430  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0013f40_7895_8{UNINITIALIZED}>  0x0
<BV8 mem_c0013f50_8087_8{UNINITIALIZED}>  0x10

****************************************************************************************************
object:                  OBJ_29
(possible) base address  0xc0014630
maximum memory range     [  0xc0014430  ,  0xc0014b30  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0014630_7609_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_30
(possible) base address  0xc0014d30
maximum memory range     [  0xc0014b30  ,  0xc0015230  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0014d30_7765_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_31
(possible) base address  0xc0015430
maximum memory range     [  0xc0015230  ,  0xc0015930  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
variable                                  offsets
----------------------------------------  ---------
<BV8 mem_c0015430_8260_8{UNINITIALIZED}>  0x0

****************************************************************************************************
object:                  OBJ_32
(possible) base address  0xc0015930
maximum memory range     [  0xc0015930  ,  0xc0016030  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_33
(possible) base address  0xc0016030
maximum memory range     [  0xc0016030  ,  0xc0016730  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
object:                  OBJ_34
(possible) base address  0xc0016730
maximum memory range     [  0xc0016730  ,  0x7f968ec206fc  ]
 
contains pointers:      
   No pointers     
 
contains variables:     
   No variables    

****************************************************************************************************
Symbolic pointers that we are not sure which object it belongs to:
address    points to
---------  -----------
--------------------------------------------------
symbol                                                               points to
-------------------------------------------------------------------  --------------
<BV64 0x0 .. mem_c0013f51_8088_56{UNINITIALIZED}[38:12] .. 0xfffe8>  0x7fffffffffe8
****************************************************************************************************
Variables that we are not sure which object it belongs to:
variable                                                      address
------------------------------------------------------------  --------------
<BV64 reg_gs_0_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__89_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__93_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__97_64{UNINITIALIZED}>
<BV8 mem_c0008230_98_8{UNINITIALIZED}>
<BV56 mem_c0008231_99_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__100_64{UNINITIALIZED}>
<BV56 mem_c0008931_102_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__103_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__104_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__105_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__106_64{UNINITIALIZED}>
<BV8 mem_c0009030_108_8{UNINITIALIZED}>
<BV56 mem_c0009031_109_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__116_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__117_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__121_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__125_64{UNINITIALIZED}>
<BV56 mem_c0009731_130_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__172_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__176_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__181_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__212_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__228_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__234_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__273_64{UNINITIALIZED}>
<BV56 mem_c000a531_285_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__297_64{UNINITIALIZED}>
<BV56 mem_c000ac31_301_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__328_64{UNINITIALIZED}>
<BV56 mem_c000b331_337_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__569_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__593_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1707_64{UNINITIALIZED}>
<BV8 mem_c000ba30_1755_8{UNINITIALIZED}>
<BV56 mem_c000ba31_1756_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__1997_64{UNINITIALIZED}>
<BV56 mem_c000c131_2015_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2110_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2137_64{UNINITIALIZED}>
<BV56 mem_c000c831_2162_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2201_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2231_64{UNINITIALIZED}>
<BV64 reg_cc_ndep_2259_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2365_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2451_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2483_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2792_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2825_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__2962_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3035_64{UNINITIALIZED}>
<BV56 mem_c000dd39_3047_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3084_64{UNINITIALIZED}>
<BV24 mem_c000e431_3099_24{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3219_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3282_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3385_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3401_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3426_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3453_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3515_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3546_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3560_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3589_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3666_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3846_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__3945_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4009_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4062_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4123_64{UNINITIALIZED}>
<BV56 mem_c000f231_4130_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4140_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4160_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4169_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4325_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4378_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4427_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4443_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4452_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4511_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4604_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4626_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4672_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4693_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4728_64{UNINITIALIZED}>
<BV8 mem_c0010030_4733_8{UNINITIALIZED}>
<BV56 mem_c0010031_4734_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4803_64{UNINITIALIZED}>
<BV56 mem_c0010731_4829_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4897_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4930_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4934_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4953_64{UNINITIALIZED}>
<BV56 mem_c0010e31_4960_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4974_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4983_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__4987_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5069_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5118_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5133_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5149_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5355_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5472_64{UNINITIALIZED}>
<BV56 mem_c0011531_5532_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5545_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5639_64{UNINITIALIZED}>
<BV56 mem_c0011c31_5689_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5840_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5927_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5959_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__5995_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6061_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6091_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6153_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6183_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6269_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6285_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6361_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6412_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6448_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6547_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__6750_64{UNINITIALIZED}>
<BV8 mem_c0012330_6775_8{UNINITIALIZED}>
<BV56 mem_c0012331_6776_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7013_64{UNINITIALIZED}>
<BV56 mem_c0012a31_7016_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7027_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7057_64{UNINITIALIZED}>
<BV24 mem_c0013141_7109_24{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7159_64{UNINITIALIZED}>
<BV56 mem_c0013831_7167_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7199_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7221_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7340_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7438_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7457_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7594_64{UNINITIALIZED}>
<BV56 mem_c0014631_7610_56{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7636_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7680_64{UNINITIALIZED}>
<BV64 unconstrained_ret_depth_limit__7757_64{UNINITIALIZED}>
<BV56 mem_c0014d31_7766_56{UNINITIALIZED}>
<BV56 mem_c0013f41_7896_56{UNINITIALIZED}>
<BV56 mem_c0013f51_8088_56{UNINITIALIZED}>
<BV32 mem_c0015b30_8261_32{UNINITIALIZED}>
<BV32 mem_c0016230_8262_32{UNINITIALIZED}>
<BV8 mem_7f968ec206fc_8354_8{UNINITIALIZED}>                  0x7f968ec206fc
<BV32 symbolic_read_unconstrained_8355_32{UNINITIALIZED}>
<BV32 symbolic_read_unconstrained_8356_32{UNINITIALIZED}>

****************************************************************************************************
This is a control hijack
You are jumping to a controlled address
It happens at:  140281351529205
Jumping to  <BV64 0x7f95cec09dcc + SignExt(32, Reverse(symbolic_read_unconstrained_8356_32{UNINITIALIZED}))>
Call Stack:
----------------------------------------------------------------------------------------------------
At  0x7f95cc2062b3
0x7f95cc2062b3:	push	rbp
0x7f95cc2062b4:	mov	rbp, rsp
0x7f95cc2062b7:	sub	rsp, 0x10
0x7f95cc2062bb:	mov	qword ptr [rbp - 8], rdi
0x7f95cc2062bf:	lea	rax, [rbp - 8]
0x7f95cc2062c3:	mov	rdi, rax
0x7f95cc2062c6:	call	0x7f95c67bf836
----------------------------------------------------------------------------------------------------
At  0x7f95cc202c89
0x7f95cc202c89:	push	rbp
0x7f95cc202c8a:	mov	rbp, rsp
0x7f95cc202c8d:	push	rbx
0x7f95cc202c8e:	sub	rsp, 0x18
0x7f95cc202c92:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc202c96:	mov	rax, qword ptr [rbp - 0x18]
0x7f95cc202c9a:	mov	rdi, rax
0x7f95cc202c9d:	call	0x7f95c698fec8
----------------------------------------------------------------------------------------------------
At  0x7f95cc1fa5ae
0x7f95cc1fa5ae:	push	rbp
0x7f95cc1fa5af:	mov	rbp, rsp
0x7f95cc1fa5b2:	sub	rsp, 0x20
0x7f95cc1fa5b6:	mov	qword ptr [rbp - 0x18], rdi
0x7f95cc1fa5ba:	mov	rax, qword ptr fs:[0x28]
0x7f95cc1fa5c3:	mov	qword ptr [rbp - 8], rax
0x7f95cc1fa5c7:	xor	eax, eax
0x7f95cc1fa5c9:	mov	rax, qword ptr [rbp - 0x18]
0x7f95cc1fa5cd:	sub	rsp, 8
0x7f95cc1fa5d1:	push	rdx
0x7f95cc1fa5d2:	mov	rdi, rax
0x7f95cc1fa5d5:	call	0x7f95cc202c89
----------------------------------------------------------------------------------------------------
At  0x7f95cc202d62
0x7f95cc202d62:	push	rbp
0x7f95cc202d63:	mov	rbp, rsp
0x7f95cc202d66:	sub	rsp, 0x10
0x7f95cc202d6a:	mov	qword ptr [rbp - 8], rdi
0x7f95cc202d6e:	mov	rax, qword ptr [rbp - 8]
0x7f95cc202d72:	mov	rdi, rax
0x7f95cc202d75:	call	0x7f95cc1fa5ae
----------------------------------------------------------------------------------------------------
At  0x7f95cc2a49c2
0x7f95cc2a49c2:	push	rbp
0x7f95cc2a49c3:	mov	rbp, rsp
0x7f95cc2a49c6:	sub	rsp, 0x50
0x7f95cc2a49ca:	mov	qword ptr [rbp - 0x38], rdi
0x7f95cc2a49ce:	mov	dword ptr [rbp - 0x3c], esi
0x7f95cc2a49d1:	mov	qword ptr [rbp - 0x48], rdx
0x7f95cc2a49d5:	mov	rax, qword ptr [rbp - 0x38]
0x7f95cc2a49d9:	mov	qword ptr [rbp - 0x10], rax
0x7f95cc2a49dd:	mov	rax, qword ptr [rbp - 0x48]
0x7f95cc2a49e1:	mov	qword ptr [rbp - 8], rax
0x7f95cc2a49e5:	mov	rax, qword ptr [rbp - 0x38]
0x7f95cc2a49e9:	mov	rdi, rax
0x7f95cc2a49ec:	call	0x7f95cc1c860e
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d5261
0x7f95cc2d5261:	push	rbp
0x7f95cc2d5262:	mov	rbp, rsp
0x7f95cc2d5265:	push	rbx
0x7f95cc2d5266:	sub	rsp, 0xc8
0x7f95cc2d526d:	mov	qword ptr [rbp - 0xb8], rdi
0x7f95cc2d5274:	mov	qword ptr [rbp - 0xc0], rsi
0x7f95cc2d527b:	mov	eax, ecx
0x7f95cc2d527d:	mov	byte ptr [rbp - 0xc4], dl
0x7f95cc2d5283:	mov	byte ptr [rbp - 0xc8], al
0x7f95cc2d5289:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d5292:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d5296:	xor	eax, eax
0x7f95cc2d5298:	lea	rdx, [rbp - 0xb8]
0x7f95cc2d529f:	lea	rax, [rbp - 0xa0]
0x7f95cc2d52a6:	mov	rsi, rdx
0x7f95cc2d52a9:	mov	rdi, rax
0x7f95cc2d52ac:	call	0x7f95cc33b992
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d2642
0x7f95cc2d2642:	push	rbp
0x7f95cc2d2643:	mov	rbp, rsp
0x7f95cc2d2646:	push	rbx
0x7f95cc2d2647:	sub	rsp, 0x48
0x7f95cc2d264b:	mov	qword ptr [rbp - 0x48], rdi
0x7f95cc2d264f:	mov	rax, qword ptr fs:[0x28]
0x7f95cc2d2658:	mov	qword ptr [rbp - 0x18], rax
0x7f95cc2d265c:	xor	eax, eax
0x7f95cc2d265e:	lea	rax, [rbp - 0x40]
0x7f95cc2d2662:	mov	esi, 0
0x7f95cc2d2667:	mov	rdi, rax
0x7f95cc2d266a:	call	0x7f95c77db232
----------------------------------------------------------------------------------------------------
At  0x7f95cc2d63cc
0x7f95cc2d63cc:	push	rbp
0x7f95cc2d63cd:	mov	rbp, rsp
0x7f95cc2d63d0:	sub	rsp, 0x10
0x7f95cc2d63d4:	mov	qword ptr [rbp - 8], rdi
0x7f95cc2d63d8:	mov	rax, qword ptr [rbp - 8]
0x7f95cc2d63dc:	mov	rdi, rax
0x7f95cc2d63df:	call	0x7f95cc2d2642
----------------------------------------------------------------------------------------------------
At  0x7f95cc7070b7
0x7f95cc7070b7:	push	rbp
0x7f95cc7070b8:	mov	rbp, rsp
0x7f95cc7070bb:	sub	rsp, 0x20
0x7f95cc7070bf:	mov	qword ptr [rbp - 8], rdi
0x7f95cc7070c3:	mov	qword ptr [rbp - 0x10], rsi
0x7f95cc7070c7:	mov	qword ptr [rbp - 0x18], rdx
0x7f95cc7070cb:	call	0x7f95cc6f6da8
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5dfe
0x7f95c9be5dfe:	push	rbp
0x7f95c9be5dff:	mov	rbp, rsp
0x7f95c9be5e02:	push	rbx
0x7f95c9be5e03:	sub	rsp, 0xb8
0x7f95c9be5e0a:	mov	qword ptr [rbp - 0xa8], rdi
0x7f95c9be5e11:	mov	qword ptr [rbp - 0xb0], rsi
0x7f95c9be5e18:	mov	qword ptr [rbp - 0xb8], rdx
0x7f95c9be5e1f:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5e28:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5e2c:	xor	eax, eax
0x7f95c9be5e2e:	lea	rax, [rbp - 0x80]
0x7f95c9be5e32:	mov	rdi, rax
0x7f95c9be5e35:	call	0x7f95c9ddec62
----------------------------------------------------------------------------------------------------
At  0x7f95c9be5306
0x7f95c9be5306:	push	rbp
0x7f95c9be5307:	mov	rbp, rsp
0x7f95c9be530a:	push	rbx
0x7f95c9be530b:	sub	rsp, 0x48
0x7f95c9be530f:	mov	qword ptr [rbp - 0x38], rdi
0x7f95c9be5313:	mov	qword ptr [rbp - 0x40], rsi
0x7f95c9be5317:	mov	qword ptr [rbp - 0x48], rdx
0x7f95c9be531b:	mov	rax, qword ptr fs:[0x28]
0x7f95c9be5324:	mov	qword ptr [rbp - 0x18], rax
0x7f95c9be5328:	xor	eax, eax
0x7f95c9be532a:	cmp	qword ptr [rbp - 0x40], 0
0x7f95c9be532f:	jne	0x7f95c9be5358
----------------------------------------------------------------------------------------------------
At  0x7f95ca01e1f6
0x7f95ca01e1f6:	push	rbp
0x7f95ca01e1f7:	mov	rbp, rsp
0x7f95ca01e1fa:	sub	rsp, 0x40
0x7f95ca01e1fe:	mov	qword ptr [rbp - 0x38], rdi
0x7f95ca01e202:	mov	rax, qword ptr fs:[0x28]
0x7f95ca01e20b:	mov	qword ptr [rbp - 8], rax
0x7f95ca01e20f:	xor	eax, eax
0x7f95ca01e211:	mov	rax, qword ptr [rbp - 0x38]
0x7f95ca01e215:	add	rax, 0x30
0x7f95ca01e219:	mov	rdi, rax
0x7f95ca01e21c:	call	0x7f95c7803026
----------------------------------------------------------------------------------------------------
****************************************************************************************************
constraints:             
0  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:1] == 0x0>
1  <Bool 0x18 * (0x0 .. 0xfffffffe + 0x9e3779b9 * unconstrained_ret_depth_limit__89_64{UNINITIALIZED}[31:0][31:20]) == 0x17fe8>
2  <Bool 0x9e3779b9 * unconstrained_ret_depth_limit__93_64{UNINITIALIZED}[31:0][31:1] == 0x0>
3  <Bool unconstrained_ret_depth_limit__97_64{UNINITIALIZED} == 0xc0008230>
4  <Bool unconstrained_ret_depth_limit__100_64{UNINITIALIZED} == 0xc0008930>
5  <Bool mem_c0008931_102_56{UNINITIALIZED} == 0xfff90000000000>
6  <Bool mem_c0008930_101_8{UNINITIALIZED} == 0>
7  <Bool unconstrained_ret_depth_limit__106_64{UNINITIALIZED} == 0xc0009030>
8  <Bool unconstrained_ret_depth_limit__116_64{UNINITIALIZED}[7:0] == 0>
9  <Bool !(unconstrained_ret_depth_limit__121_64{UNINITIALIZED}[31:7] == 0x0) || !(unconstrained_ret_depth_limit__121_64{UNINITIALIZED}[6:0] <= 122)>
10  <Bool unconstrained_ret_depth_limit__125_64{UNINITIALIZED} == 0xc0009730>
11  <Bool unconstrained_ret_depth_limit__228_64{UNINITIALIZED} == 0xc0009e30>
12  <Bool unconstrained_ret_depth_limit__273_64{UNINITIALIZED} == 0xc000a530>
13  <Bool unconstrained_ret_depth_limit__297_64{UNINITIALIZED} == 0xc000ac30>
14  <Bool unconstrained_ret_depth_limit__328_64{UNINITIALIZED} == 0xc000b330>
15  <Bool !(mem_c000b330_336_8{UNINITIALIZED} == 0) || !(mem_c000b331_337_56{UNINITIALIZED} == 0x0)>
16  <Bool mem_c0009731_130_56{UNINITIALIZED}[38:0] == 0x0>
17  <Bool mem_c0009730_129_8{UNINITIALIZED}[7:1] == 0>
18  <Bool !(mem_c0009730_129_8{UNINITIALIZED} == 1)>
19  <Bool !(unconstrained_ret_depth_limit__593_64{UNINITIALIZED}[0:0] == 1) || !(unconstrained_ret_depth_limit__593_64{UNINITIALIZED}[7:1] == 0)>
20  <Bool unconstrained_ret_depth_limit__1707_64{UNINITIALIZED} == 0xc000ba30>
21  <Bool unconstrained_ret_depth_limit__1997_64{UNINITIALIZED} == 0xc000c130>
22  <Bool !(mem_c000c130_2014_8{UNINITIALIZED} == 0) || !(mem_c000c131_2015_56{UNINITIALIZED} == 0x0)>
23  <Bool unconstrained_ret_depth_limit__2137_64{UNINITIALIZED} == 0xc000c830>
24  <Bool mem_c000c831_2162_56{UNINITIALIZED} == 0xc000cf>
25  <Bool mem_c000c830_2161_8{UNINITIALIZED} == 48>
26  <Bool mem_c000cf32_2257_8{UNINITIALIZED} == 0>
27  <Bool mem_c000cf30_2255_8{UNINITIALIZED} == 0>
28  <Bool mem_c000cf31_2256_8{UNINITIALIZED} == 0>
29  <Bool mem_c000cf33_2258_8{UNINITIALIZED} == 0>
30  <Bool unconstrained_ret_depth_limit__2365_64{UNINITIALIZED} == 0xc000d630>
31  <Bool unconstrained_ret_depth_limit__3035_64{UNINITIALIZED} == 0xc000dd30>
32  <Bool unconstrained_ret_depth_limit__3084_64{UNINITIALIZED} == 0xc000e430>
33  <Bool unconstrained_ret_depth_limit__3401_64{UNINITIALIZED}[0:0] == 1>
34  <Bool unconstrained_ret_depth_limit__3401_64{UNINITIALIZED}[7:1] == 0>
35  <Bool unconstrained_ret_depth_limit__3426_64{UNINITIALIZED}[7:0] == 0>
36  <Bool unconstrained_ret_depth_limit__3453_64{UNINITIALIZED}[31:0] == 0x1>
37  <Bool unconstrained_ret_depth_limit__3846_64{UNINITIALIZED} == 0xc000eb30>
38  <Bool !(unconstrained_ret_depth_limit__212_64{UNINITIALIZED} == unconstrained_ret_depth_limit__3945_64{UNINITIALIZED})>
39  <Bool unconstrained_ret_depth_limit__4062_64{UNINITIALIZED}[7:0] == 0>
40  <Bool unconstrained_ret_depth_limit__4123_64{UNINITIALIZED} == 0xc000f230>
41  <Bool unconstrained_ret_depth_limit__4140_64{UNINITIALIZED} == 0xc000f930>
42  <Bool !(mem_c000f230_4129_8{UNINITIALIZED} == 0) || !(mem_c000f231_4130_56{UNINITIALIZED} == 0x0)>
43  <Bool unconstrained_ret_depth_limit__4325_64{UNINITIALIZED}[0:0] == 1>
44  <Bool unconstrained_ret_depth_limit__4325_64{UNINITIALIZED}[7:1] == 0>
45  <Bool unconstrained_ret_depth_limit__4511_64{UNINITIALIZED}[7:0] == 0>
46  <Bool unconstrained_ret_depth_limit__4728_64{UNINITIALIZED} == 0xc0010030>
47  <Bool unconstrained_ret_depth_limit__4803_64{UNINITIALIZED} == 0xc0010730>
48  <Bool !(mem_c0010730_4828_8{UNINITIALIZED}[7:1] == 0) || !(mem_c0010731_4829_56{UNINITIALIZED} == 0x0)>
49  <Bool !(unconstrained_ret_depth_limit__4897_64{UNINITIALIZED}[0:0] == 1) || !(unconstrained_ret_depth_limit__4897_64{UNINITIALIZED}[7:1] == 0)>
50  <Bool unconstrained_ret_depth_limit__4953_64{UNINITIALIZED} == 0xc0010e30>
51  <Bool unconstrained_ret_depth_limit__4987_64{UNINITIALIZED}[7:0] == 0>
52  <Bool !(unconstrained_ret_depth_limit__5355_64{UNINITIALIZED}[7:0] == 0)>
53  <Bool unconstrained_ret_depth_limit__5472_64{UNINITIALIZED} == 0xc0011530>
54  <Bool unconstrained_ret_depth_limit__5545_64{UNINITIALIZED}[7:0] == 0>
55  <Bool mem_c0011530_5531_8{UNINITIALIZED} == 48>
56  <Bool mem_c0011531_5532_56{UNINITIALIZED} == 0xc00131>
57  <Bool unconstrained_ret_depth_limit__5639_64{UNINITIALIZED} == 0xc0011c30>
58  <Bool unconstrained_ret_depth_limit__4452_64{UNINITIALIZED} == unconstrained_ret_depth_limit__6183_64{UNINITIALIZED}>
59  <Bool unconstrained_ret_depth_limit__6285_64{UNINITIALIZED}[0:0] == 1>
60  <Bool unconstrained_ret_depth_limit__6285_64{UNINITIALIZED}[7:1] == 0>
61  <Bool unconstrained_ret_depth_limit__6547_64{UNINITIALIZED}[7:0] == 0>
62  <Bool unconstrained_ret_depth_limit__6750_64{UNINITIALIZED} == 0xc0012330>
63  <Bool unconstrained_ret_depth_limit__7013_64{UNINITIALIZED} == 0xc0012a30>
64  <Bool !(unconstrained_ret_depth_limit__7027_64{UNINITIALIZED}[7:0] == 0)>
65  <Bool !(unconstrained_ret_depth_limit__7057_64{UNINITIALIZED}[7:0] == 0)>
66  <Bool True>
67  <Bool unconstrained_ret_depth_limit__7159_64{UNINITIALIZED} == 0xc0013830>
68  <Bool !(mem_c0013830_7166_8{UNINITIALIZED} == 0) || !(mem_c0013831_7167_56{UNINITIALIZED} == 0x0)>
69  <Bool unconstrained_ret_depth_limit__7199_64{UNINITIALIZED} == 0xc0013f30>
70  <Bool unconstrained_ret_depth_limit__7594_64{UNINITIALIZED} == 0xc0014630>
71  <Bool !(unconstrained_ret_depth_limit__7636_64{UNINITIALIZED}[7:0] == 0)>
72  <Bool !(unconstrained_ret_depth_limit__7680_64{UNINITIALIZED}[7:0] == 0)>
73  <Bool unconstrained_ret_depth_limit__7757_64{UNINITIALIZED} == 0xc0014d30>
74  <Bool !(mem_c0014d30_7765_8{UNINITIALIZED} == 0) || !(mem_c0014d31_7766_56{UNINITIALIZED} == 0x0)>
75  <Bool !(mem_c0013f40_7895_8{UNINITIALIZED} == 0) || !(mem_c0013f41_7896_56{UNINITIALIZED} == 0x0)>
76  <Bool False>
77  <Bool mem_c0016230_8262_32{UNINITIALIZED} == 0x1>

****************************************************************************************************
Variables used as return values of symbolic calls: 

****************************************************************************************************
We've logged: 
         taint_mem:          write with controlled value 
         read_taint:         read from tainted memory 
         call:               call with controlled function address 
         jump:               call with controlled destination address 
         write_ret_val:      write return value to memory 
         deref_ret_val_w:    dereference returned pointer for write 
         deref_ret_val_r:    dereference returned pointer for read 
****************************************************************************************************
Execution history:        

-----end dump executor-----
