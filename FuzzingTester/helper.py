'''
helper functions

'''
import os
import tempfile
import shutil
import time

__all__ = ("create_profile", "getLogFile")

def create_profile(prefs_js=None, usr_js = None, template=None, tmpdir=None):
	"""
	Create a profile to be used with Firefox

	@type prefs_js: String
	@param prefs_js: Path to a prefs.js file to install in the Firefox profile.

	@type template: String
	@param template: Path to an existing profile directory to use.

	@rtype: String
	@return: Path to directory to be used as a profile
	"""
	profile = tempfile.mkdtemp(prefix="pref_", dir=tmpdir)
	# log.debug("profile directory: %r", profile)

	if template is not None:
		# log.debug("using profile template: %r", template)
		shutil.rmtree(profile) # reuse the directory name
		if not os.path.isdir(template):
			raise IOError("Cannot find template profile: %r" % template)
		shutil.copytree(template, profile, symlinks=True)
		invalid_prefs = os.path.join(profile, "Invalidprefs.js")
		# if Invalidprefs.js was copied from the template profile remove it
		if os.path.isfile(invalid_prefs):
			os.remove(invalid_prefs)

	if prefs_js is not None:
		# log.debug("using prefs.js: %r", prefs_js)
		if not os.path.isfile(prefs_js):
			shutil.rmtree(profile, True) # clean up on failure
			raise IOError("prefs.js file does not exist: %r" % prefs_js)
		shutil.copyfile(prefs_js, os.path.join(profile, "prefs.js"))
		if usr_js is not None and os.path.isfile(prefs_js):
			shutil.copyfile(usr_js, os.path.join(profile, "user.js"))

		# times.json only needs to be created when using a custom pref.js
		times_json = os.path.join(profile, "times.json")
		if not os.path.isfile(times_json):
			with open(times_json, "w") as times_fp:
				times_fp.write('{"created":%d}' % (int(time.time()) * 1000))

	return profile

def getLogFile(test, logdir):
	fn = os.path.basename(test)
	return os.path.join(logdir, fn.replace(".html", "_out.txt"))

